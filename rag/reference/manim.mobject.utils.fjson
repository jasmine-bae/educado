{"parents": [{"link": "../", "title": "Reference Manual"}, {"link": "../../reference_index/mobjects/", "title": "Mobjects"}], "prev": {"link": "../manim.mobject.types.vectorized_mobject.VectorizedPoint/", "title": "VectorizedPoint"}, "next": {"link": "../manim.mobject.value_tracker/", "title": "value_tracker"}, "title": "utils", "meta": {}, "body": "<section id=\"module-manim.mobject.utils\">\n<span id=\"utils\"></span><h1>utils<a class=\"headerlink\" href=\"#module-manim.mobject.utils\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Utilities for working with mobjects.</p>\n<p class=\"rubric\">Functions</p>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.utils.get_mobject_class\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_mobject_class</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/utils/#get_mobject_class\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.utils.get_mobject_class\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets the base mobject class, depending on the currently active renderer.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>This method is intended to be used in the code base of Manim itself\nor in plugins where code should work independent of the selected\nrenderer.</p>\n</div>\n<p class=\"rubric\">Examples</p>\n<p>The function has to be explicitly imported. We test that\nthe name of the returned class is one of the known mobject\nbase classes:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">manim.mobject.utils</span> <span class=\"kn\">import</span> <span class=\"n\">get_mobject_class</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get_mobject_class</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"vm\">__name__</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;Mobject&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;OpenGLMobject&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>type</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.utils.get_point_mobject_class\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_point_mobject_class</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/utils/#get_point_mobject_class\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.utils.get_point_mobject_class\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets the point cloud mobject class, depending on the currently\nactive renderer.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>This method is intended to be used in the code base of Manim itself\nor in plugins where code should work independent of the selected\nrenderer.</p>\n</div>\n<p class=\"rubric\">Examples</p>\n<p>The function has to be explicitly imported. We test that\nthe name of the returned class is one of the known mobject\nbase classes:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">manim.mobject.utils</span> <span class=\"kn\">import</span> <span class=\"n\">get_point_mobject_class</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get_point_mobject_class</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"vm\">__name__</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;PMobject&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;OpenGLPMobject&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>type</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.utils.get_vectorized_mobject_class\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_vectorized_mobject_class</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/utils/#get_vectorized_mobject_class\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.utils.get_vectorized_mobject_class\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets the vectorized mobject class, depending on the currently\nactive renderer.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>This method is intended to be used in the code base of Manim itself\nor in plugins where code should work independent of the selected\nrenderer.</p>\n</div>\n<p class=\"rubric\">Examples</p>\n<p>The function has to be explicitly imported. We test that\nthe name of the returned class is one of the known mobject\nbase classes:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">manim.mobject.utils</span> <span class=\"kn\">import</span> <span class=\"n\">get_vectorized_mobject_class</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get_vectorized_mobject_class</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"vm\">__name__</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;VMobject&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;OpenGLVMobject&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>type</p>\n</dd>\n</dl>\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/manim.mobject.value_tracker", "value_tracker", "N", "next"], ["reference/manim.mobject.types.vectorized_mobject.VectorizedPoint", "VectorizedPoint", "P", "previous"]], "sourcename": "reference/manim.mobject.utils.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">utils</a><ul>\n<li><a class=\"reference internal\" href=\"#manim.mobject.utils.get_mobject_class\"><code class=\"docutils literal notranslate\"><span class=\"pre\">get_mobject_class()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.utils.get_point_mobject_class\"><code class=\"docutils literal notranslate\"><span class=\"pre\">get_point_mobject_class()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.utils.get_vectorized_mobject_class\"><code class=\"docutils literal notranslate\"><span class=\"pre\">get_vectorized_mobject_class()</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/manim.mobject.utils", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "furo_version": "2024.08.06", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#202020", "foreground": "#d0d0d0"}}}