{"parents": [{"link": "../", "title": "Reference Manual"}, {"link": "../../reference_index/utilities_misc/", "title": "Utilities and other modules"}], "prev": {"link": "../manim.utils.ipython_magic.ManimMagic/", "title": "ManimMagic"}, "next": {"link": "../manim.utils.paths/", "title": "paths"}, "title": "iterables", "meta": {}, "body": "<section id=\"module-manim.utils.iterables\">\n<span id=\"iterables\"></span><h1>iterables<a class=\"headerlink\" href=\"#module-manim.utils.iterables\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Operations on iterables.</p>\n<p class=\"rubric\">Functions</p>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.adjacent_n_tuples\">\n<span class=\"sig-name descname\"><span class=\"pre\">adjacent_n_tuples</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">objects</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#adjacent_n_tuples\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.adjacent_n_tuples\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the Sequence objects cyclically split into n length tuples.</p>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"#manim.utils.iterables.adjacent_pairs\" title=\"manim.utils.iterables.adjacent_pairs\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">adjacent_pairs</span></code></a></dt><dd><p>alias with n=2</p>\n</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">adjacent_n_tuples</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"c1\"># returns [(1, 2), (2, 3), (3, 4), (4, 1)]</span>\n\n<span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">adjacent_n_tuples</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"c1\"># returns [(1, 2, 3), (2, 3, 4), (3, 4, 1), (4, 1, 2)]</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>objects</strong> (<em>Sequence</em>)</p></li>\n<li><p><strong>n</strong> (<em>int</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>zip</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.adjacent_pairs\">\n<span class=\"sig-name descname\"><span class=\"pre\">adjacent_pairs</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">objects</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#adjacent_pairs\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.adjacent_pairs\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Alias for <code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_n_tuples(objects,</span> <span class=\"pre\">2)</span></code>.</p>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<p><a class=\"reference internal\" href=\"#manim.utils.iterables.adjacent_n_tuples\" title=\"manim.utils.iterables.adjacent_n_tuples\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">adjacent_n_tuples</span></code></a></p>\n</div>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">adjacent_pairs</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]))</span>\n<span class=\"c1\"># returns [(1, 2), (2, 3), (3, 4), (4, 1)]</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>objects</strong> (<em>Sequence</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>zip</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.all_elements_are_instances\">\n<span class=\"sig-name descname\"><span class=\"pre\">all_elements_are_instances</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">iterable</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">Class</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#all_elements_are_instances\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.all_elements_are_instances\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if all elements of iterable are instances of Class.\nFalse otherwise.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>iterable</strong> (<em>Iterable</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>bool</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.batch_by_property\">\n<span class=\"sig-name descname\"><span class=\"pre\">batch_by_property</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">items</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">property_func</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#batch_by_property\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.batch_by_property\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Takes in a Sequence, and returns a list of tuples, (batch, prop)\nsuch that all items in a batch have the same output when\nput into the Callable property_func, and such that chaining all these\nbatches together would give the original Sequence (i.e. order is\npreserved).</p>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">batch_by_property</span><span class=\"p\">([(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">)],</span> <span class=\"nb\">len</span><span class=\"p\">)</span>\n<span class=\"c1\"># returns [([(1, 2), (3, 4)], 2), ([(5, 6, 7)], 3), ([(8, 9)], 2)]</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>items</strong> (<em>Sequence</em>)</p></li>\n<li><p><strong>property_func</strong> (<em>Callable</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>list[tuple[list, <em>Any</em>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.concatenate_lists\">\n<span class=\"sig-name descname\"><span class=\"pre\">concatenate_lists</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">list_of_lists</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#concatenate_lists\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.concatenate_lists\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Combines the Iterables provided as arguments into one list.</p>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">concatenate_lists</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"c1\"># returns [1, 2, 3, 4, 5]</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>list_of_lists</strong> (<em>Iterable</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>list</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.hash_obj\">\n<span class=\"sig-name descname\"><span class=\"pre\">hash_obj</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">obj</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#hash_obj\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.hash_obj\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Determines a hash, even of potentially mutable objects.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>obj</strong> (<em>object</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>int</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.list_difference_update\">\n<span class=\"sig-name descname\"><span class=\"pre\">list_difference_update</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">l1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">l2</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#list_difference_update\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.list_difference_update\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns a list containing all the elements of l1 not in l2.</p>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">list_difference_update</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"c1\"># returns [1, 3]</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>l1</strong> (<em>Iterable</em>)</p></li>\n<li><p><strong>l2</strong> (<em>Iterable</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>list</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.list_update\">\n<span class=\"sig-name descname\"><span class=\"pre\">list_update</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">l1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">l2</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#list_update\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.list_update\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>Used instead of <code class=\"docutils literal notranslate\"><span class=\"pre\">set.update()</span></code> to maintain order,</dt><dd><p>making sure duplicates are removed from l1, not l2.\nRemoves overlap of l1 and l2 and then concatenates l2 unchanged.</p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">list_update</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"c1\"># returns [1, 3, 2, 4, 4]</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>l1</strong> (<em>Iterable</em>)</p></li>\n<li><p><strong>l2</strong> (<em>Iterable</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>list</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.listify\">\n<span class=\"sig-name descname\"><span class=\"pre\">listify</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">obj</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#listify\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.listify\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Converts obj to a list intelligently.</p>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">listify</span><span class=\"p\">(</span><span class=\"s1\">&#39;str&#39;</span><span class=\"p\">)</span>   <span class=\"c1\"># [&#39;str&#39;]</span>\n<span class=\"n\">listify</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>  <span class=\"c1\"># [1, 2]</span>\n<span class=\"n\">listify</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">)</span>     <span class=\"c1\"># [&lt;built-in function len&gt;]</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>list</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.make_even\">\n<span class=\"sig-name descname\"><span class=\"pre\">make_even</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">iterable_1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">iterable_2</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#make_even\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.make_even\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>Extends the shorter of the two iterables with duplicate values until its</dt><dd><p>length is equal to the longer iterable (favours earlier elements).</p>\n</dd>\n</dl>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"#manim.utils.iterables.make_even_by_cycling\" title=\"manim.utils.iterables.make_even_by_cycling\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">make_even_by_cycling</span></code></a></dt><dd><p>cycles elements instead of favouring earlier ones</p>\n</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">make_even</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>\n<span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>\n\n<span class=\"n\">make_even</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">])</span>\n<span class=\"c1\"># ([1, 1, 1, 2, 2], [3, 4, 5, 6, 7])</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>iterable_1</strong> (<em>Iterable</em>)</p></li>\n<li><p><strong>iterable_2</strong> (<em>Iterable</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>tuple[list, list]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.make_even_by_cycling\">\n<span class=\"sig-name descname\"><span class=\"pre\">make_even_by_cycling</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">iterable_1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">iterable_2</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#make_even_by_cycling\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.make_even_by_cycling\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>Extends the shorter of the two iterables with duplicate values until its</dt><dd><p>length is equal to the longer iterable (cycles over shorter iterable).</p>\n</dd>\n</dl>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"#manim.utils.iterables.make_even\" title=\"manim.utils.iterables.make_even\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">make_even</span></code></a></dt><dd><p>favours earlier elements instead of cycling them</p>\n</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">make_even_by_cycling</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>\n<span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>\n\n<span class=\"n\">make_even_by_cycling</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">])</span>\n<span class=\"c1\"># ([1, 2, 1, 2, 1], [3, 4, 5, 6, 7])</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>iterable_1</strong> (<em>Collection</em>)</p></li>\n<li><p><strong>iterable_2</strong> (<em>Collection</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>tuple[list, list]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.remove_list_redundancies\">\n<span class=\"sig-name descname\"><span class=\"pre\">remove_list_redundancies</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">lst</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#remove_list_redundancies\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.remove_list_redundancies\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Used instead of <code class=\"docutils literal notranslate\"><span class=\"pre\">list(set(l))</span></code> to maintain order.\nKeeps the last occurrence of each element.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>lst</strong> (<em>Reversible</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>list</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.remove_nones\">\n<span class=\"sig-name descname\"><span class=\"pre\">remove_nones</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sequence</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#remove_nones\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.remove_nones\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Removes elements where bool(x) evaluates to False.</p>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">remove_nones</span><span class=\"p\">([</span><span class=\"s1\">&#39;m&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;l&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">42</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">])</span>\n<span class=\"c1\"># [&#39;m&#39;, &#39;l&#39;, 42, True]</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>sequence</strong> (<em>Iterable</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>list</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.resize_array\">\n<span class=\"sig-name descname\"><span class=\"pre\">resize_array</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nparray</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">length</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#resize_array\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.resize_array\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>Extends/truncates nparray so that <code class=\"docutils literal notranslate\"><span class=\"pre\">len(result)</span> <span class=\"pre\">==</span> <span class=\"pre\">length</span></code>.</dt><dd><p>The elements of nparray are cycled to achieve the desired length.</p>\n</dd>\n</dl>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"#manim.utils.iterables.resize_preserving_order\" title=\"manim.utils.iterables.resize_preserving_order\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">resize_preserving_order</span></code></a></dt><dd><p>favours earlier elements instead of cycling them</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#manim.utils.iterables.make_even_by_cycling\" title=\"manim.utils.iterables.make_even_by_cycling\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">make_even_by_cycling</span></code></a></dt><dd><p>similar cycling behaviour for balancing 2 iterables</p>\n</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">resize_array</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">array([[1, 2]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">resize_array</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">array([[1, 2],</span>\n<span class=\"go\">       [3, 4],</span>\n<span class=\"go\">       [1, 2]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">resize_array</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">array([[1, 2],</span>\n<span class=\"go\">       [3, 4]])</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>nparray</strong> (<em>ndarray</em>)</p></li>\n<li><p><strong>length</strong> (<em>int</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ndarray</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.resize_preserving_order\">\n<span class=\"sig-name descname\"><span class=\"pre\">resize_preserving_order</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nparray</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">length</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#resize_preserving_order\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.resize_preserving_order\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl>\n<dt>Extends/truncates nparray so that <code class=\"docutils literal notranslate\"><span class=\"pre\">len(result)</span> <span class=\"pre\">==</span> <span class=\"pre\">length</span></code>.</dt><dd><p>The elements of nparray are duplicated to achieve the desired length\n(favours earlier elements).</p>\n<p>Constructs a zeroes array of length if nparray is empty.</p>\n</dd>\n</dl>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"#manim.utils.iterables.resize_array\" title=\"manim.utils.iterables.resize_array\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">resize_array</span></code></a></dt><dd><p>cycles elements instead of favouring earlier ones</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#manim.utils.iterables.make_even\" title=\"manim.utils.iterables.make_even\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">make_even</span></code></a></dt><dd><p>similar earlier-favouring behaviour for balancing 2 iterables</p>\n</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">resize_preserving_order</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([]),</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"c1\"># np.array([0., 0., 0., 0., 0.])</span>\n\n<span class=\"n\">nparray</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n\n<span class=\"n\">resize_preserving_order</span><span class=\"p\">(</span><span class=\"n\">nparray</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"c1\"># np.array([[1, 2]])</span>\n\n<span class=\"n\">resize_preserving_order</span><span class=\"p\">(</span><span class=\"n\">nparray</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"c1\"># np.array([[1, 2],</span>\n<span class=\"c1\">#           [1, 2],</span>\n<span class=\"c1\">#           [3, 4]])</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>nparray</strong> (<em>ndarray</em>)</p></li>\n<li><p><strong>length</strong> (<em>int</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ndarray</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.resize_with_interpolation\">\n<span class=\"sig-name descname\"><span class=\"pre\">resize_with_interpolation</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nparray</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">length</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#resize_with_interpolation\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.resize_with_interpolation\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl>\n<dt>Extends/truncates nparray so that <code class=\"docutils literal notranslate\"><span class=\"pre\">len(result)</span> <span class=\"pre\">==</span> <span class=\"pre\">length</span></code>.</dt><dd><p>New elements are interpolated to achieve the desired length.</p>\n<p>Note that if nparray\u2019s length changes, its dtype may too\n(e.g. int -&gt; float: see Examples)</p>\n</dd>\n</dl>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"#manim.utils.iterables.resize_array\" title=\"manim.utils.iterables.resize_array\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">resize_array</span></code></a></dt><dd><p>cycles elements instead of interpolating</p>\n</dd>\n<dt><a class=\"reference internal\" href=\"#manim.utils.iterables.resize_preserving_order\" title=\"manim.utils.iterables.resize_preserving_order\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">resize_preserving_order</span></code></a></dt><dd><p>favours earlier elements instead of interpolating</p>\n</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">nparray</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n\n<span class=\"n\">resize_with_interpolation</span><span class=\"p\">(</span><span class=\"n\">nparray</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"c1\"># np.array([[1., 2.]])</span>\n\n<span class=\"n\">resize_with_interpolation</span><span class=\"p\">(</span><span class=\"n\">nparray</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"c1\"># np.array([[1.        , 2.        ],</span>\n<span class=\"c1\">#           [1.66666667, 2.66666667],</span>\n<span class=\"c1\">#           [2.33333333, 3.33333333],</span>\n<span class=\"c1\">#           [3.        , 4.        ]])</span>\n\n<span class=\"n\">nparray</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]]])</span>\n<span class=\"n\">resize_with_interpolation</span><span class=\"p\">(</span><span class=\"n\">nparray</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"c1\"># np.array([[[1., 2.], [3., 4.]],</span>\n<span class=\"c1\">#           [[1., 2.], [3., 4.]],</span>\n<span class=\"c1\">#           [[1., 2.], [3., 4.]]])</span>\n\n<span class=\"n\">nparray</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]])</span>\n<span class=\"n\">resize_with_interpolation</span><span class=\"p\">(</span><span class=\"n\">nparray</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"c1\"># np.array([[1.        , 2.        ],</span>\n<span class=\"c1\">#           [2.33333333, 3.33333333],</span>\n<span class=\"c1\">#           [3.66666667, 4.66666667],</span>\n<span class=\"c1\">#           [5.        , 6.        ]])</span>\n\n<span class=\"n\">nparray</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]])</span>\n<span class=\"n\">resize_with_interpolation</span><span class=\"p\">(</span><span class=\"n\">nparray</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"c1\"># np.array([[1.        , 2.        ],</span>\n<span class=\"c1\">#           [2.33333333, 3.33333333],</span>\n<span class=\"c1\">#           [2.33333333, 3.33333333],</span>\n<span class=\"c1\">#           [1.        , 2.        ]])</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>nparray</strong> (<em>ndarray</em>)</p></li>\n<li><p><strong>length</strong> (<em>int</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ndarray</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.stretch_array_to_length\">\n<span class=\"sig-name descname\"><span class=\"pre\">stretch_array_to_length</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">nparray</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">length</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#stretch_array_to_length\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.stretch_array_to_length\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>nparray</strong> (<em>ndarray</em>)</p></li>\n<li><p><strong>length</strong> (<em>int</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ndarray</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.tuplify\">\n<span class=\"sig-name descname\"><span class=\"pre\">tuplify</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">obj</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#tuplify\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.tuplify\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Converts obj to a tuple intelligently.</p>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">tuplify</span><span class=\"p\">(</span><span class=\"s1\">&#39;str&#39;</span><span class=\"p\">)</span>   <span class=\"c1\"># (&#39;str&#39;,)</span>\n<span class=\"n\">tuplify</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>  <span class=\"c1\"># (1, 2)</span>\n<span class=\"n\">tuplify</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">)</span>     <span class=\"c1\"># (&lt;built-in function len&gt;,)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>tuple</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.iterables.uniq_chain\">\n<span class=\"sig-name descname\"><span class=\"pre\">uniq_chain</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/iterables/#uniq_chain\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.iterables.uniq_chain\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl class=\"simple\">\n<dt>Returns a generator that yields all unique elements of the Iterables</dt><dd><p>provided via args in the order provided.</p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">uniq_chain</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"c1\"># yields 1, 2, 3, 4</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>args</strong> (<em>Iterable</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>Generator</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/manim.utils.paths", "paths", "N", "next"], ["reference/manim.utils.ipython_magic.ManimMagic", "ManimMagic", "P", "previous"]], "sourcename": "reference/manim.utils.iterables.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">iterables</a><ul>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.adjacent_n_tuples\"><code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_n_tuples()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.adjacent_pairs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_pairs()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.all_elements_are_instances\"><code class=\"docutils literal notranslate\"><span class=\"pre\">all_elements_are_instances()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.batch_by_property\"><code class=\"docutils literal notranslate\"><span class=\"pre\">batch_by_property()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.concatenate_lists\"><code class=\"docutils literal notranslate\"><span class=\"pre\">concatenate_lists()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.hash_obj\"><code class=\"docutils literal notranslate\"><span class=\"pre\">hash_obj()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.list_difference_update\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list_difference_update()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.list_update\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list_update()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.listify\"><code class=\"docutils literal notranslate\"><span class=\"pre\">listify()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.make_even\"><code class=\"docutils literal notranslate\"><span class=\"pre\">make_even()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.make_even_by_cycling\"><code class=\"docutils literal notranslate\"><span class=\"pre\">make_even_by_cycling()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.remove_list_redundancies\"><code class=\"docutils literal notranslate\"><span class=\"pre\">remove_list_redundancies()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.remove_nones\"><code class=\"docutils literal notranslate\"><span class=\"pre\">remove_nones()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.resize_array\"><code class=\"docutils literal notranslate\"><span class=\"pre\">resize_array()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.resize_preserving_order\"><code class=\"docutils literal notranslate\"><span class=\"pre\">resize_preserving_order()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.resize_with_interpolation\"><code class=\"docutils literal notranslate\"><span class=\"pre\">resize_with_interpolation()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.stretch_array_to_length\"><code class=\"docutils literal notranslate\"><span class=\"pre\">stretch_array_to_length()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.tuplify\"><code class=\"docutils literal notranslate\"><span class=\"pre\">tuplify()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.iterables.uniq_chain\"><code class=\"docutils literal notranslate\"><span class=\"pre\">uniq_chain()</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/manim.utils.iterables", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "furo_version": "2024.08.06", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#202020", "foreground": "#d0d0d0"}}}