{"parents": [{"link": "../", "title": "Reference Manual"}, {"link": "../../reference_index/scenes/", "title": "Scenes"}, {"link": "../manim.scene.vector_space_scene/", "title": "vector_space_scene"}], "prev": {"link": "../manim.scene.vector_space_scene/", "title": "vector_space_scene"}, "next": {"link": "../manim.scene.vector_space_scene.VectorScene/", "title": "VectorScene"}, "title": "LinearTransformationScene", "meta": {}, "body": "<section id=\"lineartransformationscene\">\n<h1>LinearTransformationScene<a class=\"headerlink\" href=\"#lineartransformationscene\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Qualified name: <code class=\"docutils literal notranslate\"><span class=\"pre\">manim.scene.vector\\_space\\_scene.LinearTransformationScene</span></code></p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">LinearTransformationScene</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">include_background_plane</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">include_foreground_plane</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background_plane_kwargs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">foreground_plane_kwargs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">show_coordinates</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">show_basis_vectors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">basis_vector_stroke_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">6</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">i_hat_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">ManimColor('#83C167')</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">j_hat_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">ManimColor('#FC6255')</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">leave_ghost_vectors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../manim.scene.vector_space_scene.VectorScene/#manim.scene.vector_space_scene.VectorScene\" title=\"manim.scene.vector_space_scene.VectorScene\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VectorScene</span></code></a></p>\n<p>This scene contains special methods that make it\nespecially suitable for showing linear transformations.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>include_background_plane</strong> (<em>bool</em>) \u2013 Whether or not to include the background plane in the scene.</p></li>\n<li><p><strong>include_foreground_plane</strong> (<em>bool</em>) \u2013 Whether or not to include the foreground plane in the scene.</p></li>\n<li><p><strong>background_plane_kwargs</strong> (<em>dict</em><em> | </em><em>None</em>) \u2013 Parameters to be passed to <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NumberPlane</span></code> to adjust the background plane.</p></li>\n<li><p><strong>foreground_plane_kwargs</strong> (<em>dict</em><em> | </em><em>None</em>) \u2013 Parameters to be passed to <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NumberPlane</span></code> to adjust the foreground plane.</p></li>\n<li><p><strong>show_coordinates</strong> (<em>bool</em>) \u2013 Whether or not to include the coordinates for the background plane.</p></li>\n<li><p><strong>show_basis_vectors</strong> (<em>bool</em>) \u2013 Whether to show the basis x_axis -&gt; <code class=\"docutils literal notranslate\"><span class=\"pre\">i_hat</span></code> and y_axis -&gt; <code class=\"docutils literal notranslate\"><span class=\"pre\">j_hat</span></code> vectors.</p></li>\n<li><p><strong>basis_vector_stroke_width</strong> (<em>float</em>) \u2013 The <code class=\"docutils literal notranslate\"><span class=\"pre\">stroke_width</span></code> of the basis vectors.</p></li>\n<li><p><strong>i_hat_color</strong> (<em>ParsableManimColor</em>) \u2013 The color of the <code class=\"docutils literal notranslate\"><span class=\"pre\">i_hat</span></code> vector.</p></li>\n<li><p><strong>j_hat_color</strong> (<em>ParsableManimColor</em>) \u2013 The color of the <code class=\"docutils literal notranslate\"><span class=\"pre\">j_hat</span></code> vector.</p></li>\n<li><p><strong>leave_ghost_vectors</strong> (<em>bool</em>) \u2013 Indicates the previous position of the basis vectors following a transformation.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p class=\"rubric\">Methods</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_background_mobject\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.add_background_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_background_mobject</span></code></a></p></td>\n<td><p>Adds the mobjects to the special list self.background_mobjects.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_foreground_mobject\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.add_foreground_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_foreground_mobject</span></code></a></p></td>\n<td><p>Adds the mobjects to the special list self.foreground_mobjects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_moving_mobject\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.add_moving_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_moving_mobject</span></code></a></p></td>\n<td><p>Adds the mobject to the special list self.moving_mobject, and adds a property to the mobject called mobject.target, which keeps track of what the mobject will move to or become etc.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_special_mobjects\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.add_special_mobjects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_special_mobjects</span></code></a></p></td>\n<td><p>Adds mobjects to a separate list that can be tracked, if these mobjects have some extra importance.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_title\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.add_title\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_title</span></code></a></p></td>\n<td><p>Adds a title, after scaling it, adding a background rectangle, moving it to the top and adding it to foreground_mobjects adding it as a local variable of self.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_transformable_label\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.add_transformable_label\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_transformable_label</span></code></a></p></td>\n<td><p>Method for creating, and animating the addition of a transformable label for the vector.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_transformable_mobject\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.add_transformable_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_transformable_mobject</span></code></a></p></td>\n<td><p>Adds the mobjects to the special list self.transformable_mobjects.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_unit_square\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.add_unit_square\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_unit_square</span></code></a></p></td>\n<td><p>Adds a unit square to the scene via self.get_unit_square.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_vector\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.add_vector\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_vector</span></code></a></p></td>\n<td><p>Adds a vector to the scene, and puts it in the special list self.moving_vectors.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_function\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.apply_function\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">apply_function</span></code></a></p></td>\n<td><p>Applies the given function to each of the mobjects in self.transformable_mobjects, and plays the animation showing this.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_inverse\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.apply_inverse\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">apply_inverse</span></code></a></p></td>\n<td><p>This method applies the linear transformation represented by the inverse of the passed matrix to the number plane, and each vector/similar mobject on it.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_inverse_transpose\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.apply_inverse_transpose\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">apply_inverse_transpose</span></code></a></p></td>\n<td><p>Applies the inverse of the transformation represented by the given transposed matrix to the number plane and each vector/similar mobject on it.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_matrix\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.apply_matrix\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">apply_matrix</span></code></a></p></td>\n<td><p>Applies the transformation represented by the given matrix to the number plane, and each vector/similar mobject on it.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_nonlinear_transformation\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.apply_nonlinear_transformation\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">apply_nonlinear_transformation</span></code></a></p></td>\n<td><p>Applies the non-linear transformation represented by the given function to the number plane and each vector/similar mobject on it.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_transposed_matrix\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.apply_transposed_matrix\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">apply_transposed_matrix</span></code></a></p></td>\n<td><p>Applies the transformation represented by the given transposed matrix to the number plane, and each vector/similar mobject on it.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_ghost_vectors\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.get_ghost_vectors\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_ghost_vectors</span></code></a></p></td>\n<td><p>Returns all ghost vectors ever added to <code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_matrix_transformation\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.get_matrix_transformation\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_matrix_transformation</span></code></a></p></td>\n<td><p>Returns a function corresponding to the linear transformation represented by the matrix passed.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_moving_mobject_movement\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.get_moving_mobject_movement\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_moving_mobject_movement</span></code></a></p></td>\n<td><p>This method returns an animation that moves a mobject in &quot;self.moving_mobjects&quot;  to its corresponding .target value.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_piece_movement\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.get_piece_movement\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_piece_movement</span></code></a></p></td>\n<td><p>This method returns an animation that moves an arbitrary mobject in &quot;pieces&quot; to its corresponding .target value.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_transformable_label_movement\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.get_transformable_label_movement\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_transformable_label_movement</span></code></a></p></td>\n<td><p>This method returns an animation that moves all labels in &quot;self.transformable_labels&quot; to its corresponding .target .</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_transposed_matrix_transformation\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.get_transposed_matrix_transformation\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_transposed_matrix_transformation</span></code></a></p></td>\n<td><p>Returns a function corresponding to the linear transformation represented by the transposed matrix passed.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_unit_square\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.get_unit_square\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_unit_square</span></code></a></p></td>\n<td><p>Returns a unit square for the current NumberPlane.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_vector_movement\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.get_vector_movement\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_vector_movement</span></code></a></p></td>\n<td><p>This method returns an animation that moves a mobject in &quot;self.moving_vectors&quot;  to its corresponding .target value.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.setup\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.setup\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">setup</span></code></a></p></td>\n<td><p>This is meant to be implemented by any scenes which are commonly subclassed, and have some common setup involved before the construct method is called.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">update_default_configs</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.write_vector_coordinates\" title=\"manim.scene.vector_space_scene.LinearTransformationScene.write_vector_coordinates\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">write_vector_coordinates</span></code></a></p></td>\n<td><p>Returns a column matrix indicating the vector coordinates, after writing them to the screen, and adding them to the special list self.foreground_mobjects</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p class=\"rubric\">Attributes</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">camera</span></code></p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.add_background_mobject\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_background_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">mobjects</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.add_background_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_background_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Adds the mobjects to the special list\nself.background_mobjects.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>*mobjects</strong> (<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a>) \u2013 The mobjects to add to the list.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.add_foreground_mobject\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_foreground_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">mobjects</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.add_foreground_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_foreground_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Adds the mobjects to the special list\nself.foreground_mobjects.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>*mobjects</strong> (<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a>) \u2013 The mobjects to add to the list</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.add_moving_mobject\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_moving_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mobject</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">target_mobject</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.add_moving_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_moving_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Adds the mobject to the special list\nself.moving_mobject, and adds a property\nto the mobject called mobject.target, which\nkeeps track of what the mobject will move to\nor become etc.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>mobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a>) \u2013 The mobjects to add to the list</p></li>\n<li><p><strong>target_mobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a><em> | </em><em>None</em>) \u2013 What the moving_mobject goes to, etc.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.add_special_mobjects\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_special_mobjects</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mob_list</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">mobs_to_add</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.add_special_mobjects\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_special_mobjects\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Adds mobjects to a separate list that can be tracked,\nif these mobjects have some extra importance.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>mob_list</strong> (<em>list</em>) \u2013 The special list to which you want to add\nthese mobjects.</p></li>\n<li><p><strong>*mobs_to_add</strong> (<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a>) \u2013 The mobjects to add.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.add_title\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_title</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">title</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale_factor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">animate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.add_title\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_title\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Adds a title, after scaling it, adding a background rectangle,\nmoving it to the top and adding it to foreground_mobjects adding\nit as a local variable of self. Returns the Scene.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>title</strong> (<em>str</em><em> | </em><a class=\"reference internal\" href=\"../manim.mobject.text.tex_mobject.MathTex/#manim.mobject.text.tex_mobject.MathTex\" title=\"manim.mobject.text.tex_mobject.MathTex\"><em>MathTex</em></a><em> | </em><a class=\"reference internal\" href=\"../manim.mobject.text.tex_mobject.Tex/#manim.mobject.text.tex_mobject.Tex\" title=\"manim.mobject.text.tex_mobject.Tex\"><em>Tex</em></a>) \u2013 What the title should be.</p></li>\n<li><p><strong>scale_factor</strong> (<em>float</em>) \u2013 How much the title should be scaled by.</p></li>\n<li><p><strong>animate</strong> (<em>bool</em>) \u2013 Whether or not to animate the addition.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The scene with the title added to it.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene\" title=\"manim.scene.vector_space_scene.LinearTransformationScene\">LinearTransformationScene</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.add_transformable_label\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_transformable_label</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vector</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">transformation_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'L'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">new_label</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.add_transformable_label\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_transformable_label\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Method for creating, and animating the addition of\na transformable label for the vector.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>vector</strong> (<a class=\"reference internal\" href=\"../manim.mobject.geometry.line.Vector/#manim.mobject.geometry.line.Vector\" title=\"manim.mobject.geometry.line.Vector\"><em>Vector</em></a>) \u2013 The vector for which the label must be added.</p></li>\n<li><p><strong>label</strong> (<a class=\"reference internal\" href=\"../manim.mobject.text.tex_mobject.MathTex/#manim.mobject.text.tex_mobject.MathTex\" title=\"manim.mobject.text.tex_mobject.MathTex\"><em>MathTex</em></a><em> | </em><em>str</em>) \u2013 The MathTex/string of the label.</p></li>\n<li><p><strong>transformation_name</strong> (<em>str</em><em> | </em><a class=\"reference internal\" href=\"../manim.mobject.text.tex_mobject.MathTex/#manim.mobject.text.tex_mobject.MathTex\" title=\"manim.mobject.text.tex_mobject.MathTex\"><em>MathTex</em></a>) \u2013 The name to give the transformation as a label.</p></li>\n<li><p><strong>new_label</strong> (<em>str</em><em> | </em><a class=\"reference internal\" href=\"../manim.mobject.text.tex_mobject.MathTex/#manim.mobject.text.tex_mobject.MathTex\" title=\"manim.mobject.text.tex_mobject.MathTex\"><em>MathTex</em></a><em> | </em><em>None</em>) \u2013 What the label should display after a Linear Transformation</p></li>\n<li><p><strong>**kwargs</strong> \u2013 Any valid keyword argument of get_vector_label</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The MathTex of the label.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../manim.mobject.text.tex_mobject.MathTex/#manim.mobject.text.tex_mobject.MathTex\" title=\"manim.mobject.text.tex_mobject.MathTex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MathTex</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.add_transformable_mobject\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_transformable_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">mobjects</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.add_transformable_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_transformable_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Adds the mobjects to the special list\nself.transformable_mobjects.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>*mobjects</strong> (<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a>) \u2013 The mobjects to add to the list.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.add_unit_square\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_unit_square</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">animate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.add_unit_square\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_unit_square\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Adds a unit square to the scene via\nself.get_unit_square.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>animate</strong> (<em>bool</em>) \u2013 Whether or not to animate the addition\nwith DrawBorderThenFill.</p></li>\n<li><p><strong>**kwargs</strong> \u2013 Any valid keyword arguments of\nself.get_unit_square()</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The unit square.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../manim.mobject.geometry.polygram.Square/#manim.mobject.geometry.polygram.Square\" title=\"manim.mobject.geometry.polygram.Square\">Square</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.add_vector\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_vector</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vector</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">ManimColor('#FFFF00')</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.add_vector\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_vector\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Adds a vector to the scene, and puts it in the special\nlist self.moving_vectors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>vector</strong> (<a class=\"reference internal\" href=\"../manim.mobject.geometry.line.Arrow/#manim.mobject.geometry.line.Arrow\" title=\"manim.mobject.geometry.line.Arrow\"><em>Arrow</em></a><em> | </em><em>list</em><em> | </em><em>tuple</em><em> | </em><em>ndarray</em>) \u2013 It can be a pre-made graphical vector, or the\ncoordinates of one.</p></li>\n<li><p><strong>color</strong> (<em>str</em>) \u2013 The string of the hex color of the vector.\nThis is only taken into consideration if\n\u2018vector\u2019 is not an Arrow. Defaults to YELLOW.</p></li>\n<li><p><strong>**kwargs</strong> \u2013 Any valid keyword argument of VectorScene.add_vector.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The arrow representing the vector.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../manim.mobject.geometry.line.Arrow/#manim.mobject.geometry.line.Arrow\" title=\"manim.mobject.geometry.line.Arrow\">Arrow</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.apply_function\">\n<span class=\"sig-name descname\"><span class=\"pre\">apply_function</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">function</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">added_anims</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">[]</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.apply_function\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_function\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Applies the given function to each of the mobjects in\nself.transformable_mobjects, and plays the animation showing\nthis.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>function</strong> (<em>Callable</em><em>[</em><em>[</em><em>ndarray</em><em>]</em><em>, </em><em>ndarray</em><em>]</em>) \u2013 The function that affects each point\nof each mobject in self.transformable_mobjects.</p></li>\n<li><p><strong>added_anims</strong> (<em>list</em>) \u2013 Any other animations that need to be played\nsimultaneously with this.</p></li>\n<li><p><strong>**kwargs</strong> \u2013 Any valid keyword argument of a self.play() call.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.apply_inverse\">\n<span class=\"sig-name descname\"><span class=\"pre\">apply_inverse</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">matrix</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.apply_inverse\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_inverse\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>This method applies the linear transformation\nrepresented by the inverse of the passed matrix\nto the number plane, and each vector/similar mobject on it.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>matrix</strong> (<em>ndarray</em><em> | </em><em>list</em><em> | </em><em>tuple</em>) \u2013 The matrix whose inverse is to be applied.</p></li>\n<li><p><strong>**kwargs</strong> \u2013 Any valid keyword argument of self.apply_matrix()</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.apply_inverse_transpose\">\n<span class=\"sig-name descname\"><span class=\"pre\">apply_inverse_transpose</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">t_matrix</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.apply_inverse_transpose\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_inverse_transpose\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Applies the inverse of the transformation represented\nby the given transposed matrix to the number plane and each\nvector/similar mobject on it.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>t_matrix</strong> (<em>ndarray</em><em> | </em><em>list</em><em> | </em><em>tuple</em>) \u2013 The matrix.</p></li>\n<li><p><strong>**kwargs</strong> \u2013 Any valid keyword argument of self.apply_transposed_matrix()</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.apply_matrix\">\n<span class=\"sig-name descname\"><span class=\"pre\">apply_matrix</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">matrix</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.apply_matrix\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_matrix\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Applies the transformation represented by the\ngiven matrix to the number plane, and each vector/similar\nmobject on it.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>matrix</strong> (<em>ndarray</em><em> | </em><em>list</em><em> | </em><em>tuple</em>) \u2013 The matrix.</p></li>\n<li><p><strong>**kwargs</strong> \u2013 Any valid keyword argument of self.apply_transposed_matrix()</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.apply_nonlinear_transformation\">\n<span class=\"sig-name descname\"><span class=\"pre\">apply_nonlinear_transformation</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">function</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.apply_nonlinear_transformation\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_nonlinear_transformation\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Applies the non-linear transformation represented\nby the given function to the number plane and each\nvector/similar mobject on it.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>function</strong> (<em>Callable</em><em>[</em><em>[</em><em>ndarray</em><em>]</em><em>, </em><em>ndarray</em><em>]</em>) \u2013 The function.</p></li>\n<li><p><strong>**kwargs</strong> \u2013 Any valid keyword argument of self.apply_function()</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.apply_transposed_matrix\">\n<span class=\"sig-name descname\"><span class=\"pre\">apply_transposed_matrix</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">transposed_matrix</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.apply_transposed_matrix\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_transposed_matrix\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Applies the transformation represented by the\ngiven transposed matrix to the number plane,\nand each vector/similar mobject on it.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>transposed_matrix</strong> (<em>ndarray</em><em> | </em><em>list</em><em> | </em><em>tuple</em>) \u2013 The matrix.</p></li>\n<li><p><strong>**kwargs</strong> \u2013 Any valid keyword argument of self.apply_function()</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.get_ghost_vectors\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_ghost_vectors</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.get_ghost_vectors\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_ghost_vectors\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns all ghost vectors ever added to <code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code>. Each element is a <code class=\"docutils literal notranslate\"><span class=\"pre\">VGroup</span></code> of\ntwo ghost vectors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VGroup/#manim.mobject.types.vectorized_mobject.VGroup\" title=\"manim.mobject.types.vectorized_mobject.VGroup\"><em>VGroup</em></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.get_matrix_transformation\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_matrix_transformation</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">matrix</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.get_matrix_transformation\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_matrix_transformation\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns a function corresponding to the linear\ntransformation represented by the matrix passed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>matrix</strong> (<em>ndarray</em><em> | </em><em>list</em><em> | </em><em>tuple</em>) \u2013 The matrix.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.get_moving_mobject_movement\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_moving_mobject_movement</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">func</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.get_moving_mobject_movement\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_moving_mobject_movement\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>This method returns an animation that moves a mobject\nin \u201cself.moving_mobjects\u201d  to its corresponding .target value.\nfunc is a function that determines where the .target goes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>func</strong> (<em>Callable</em><em>[</em><em>[</em><em>ndarray</em><em>]</em><em>, </em><em>ndarray</em><em>]</em>) \u2013 The function that determines where the .target of\nthe moving mobject goes.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The animation of the movement.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../manim.animation.animation.Animation/#manim.animation.animation.Animation\" title=\"manim.animation.animation.Animation\">Animation</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.get_piece_movement\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_piece_movement</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pieces</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.get_piece_movement\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_piece_movement\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>This method returns an animation that moves an arbitrary\nmobject in \u201cpieces\u201d to its corresponding .target value.\nIf self.leave_ghost_vectors is True, ghosts of the original\npositions/mobjects are left on screen</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>pieces</strong> (<em>list</em><em> | </em><em>tuple</em><em> | </em><em>ndarray</em>) \u2013 The pieces for which the movement must be shown.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The animation of the movement.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../manim.animation.animation.Animation/#manim.animation.animation.Animation\" title=\"manim.animation.animation.Animation\">Animation</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.get_transformable_label_movement\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_transformable_label_movement</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.get_transformable_label_movement\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_transformable_label_movement\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>This method returns an animation that moves all labels\nin \u201cself.transformable_labels\u201d to its corresponding .target .</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>The animation of the movement.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../manim.animation.animation.Animation/#manim.animation.animation.Animation\" title=\"manim.animation.animation.Animation\">Animation</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.get_transposed_matrix_transformation\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_transposed_matrix_transformation</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">transposed_matrix</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.get_transposed_matrix_transformation\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_transposed_matrix_transformation\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns a function corresponding to the linear\ntransformation represented by the transposed\nmatrix passed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>transposed_matrix</strong> (<em>ndarray</em><em> | </em><em>list</em><em> | </em><em>tuple</em>) \u2013 The matrix.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.get_unit_square\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_unit_square</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">ManimColor('#FFFF00')</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.3</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stroke_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">3</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.get_unit_square\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_unit_square\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns a unit square for the current NumberPlane.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>color</strong> (<em>str</em>) \u2013 The string of the hex color code of the color wanted.</p></li>\n<li><p><strong>opacity</strong> (<em>float</em>) \u2013 The opacity of the square</p></li>\n<li><p><strong>stroke_width</strong> (<em>float</em>) \u2013 The stroke_width in pixels of the border of the square</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../manim.mobject.geometry.polygram.Square/#manim.mobject.geometry.polygram.Square\" title=\"manim.mobject.geometry.polygram.Square\">Square</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.get_vector_movement\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_vector_movement</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">func</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.get_vector_movement\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_vector_movement\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>This method returns an animation that moves a mobject\nin \u201cself.moving_vectors\u201d  to its corresponding .target value.\nfunc is a function that determines where the .target goes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>func</strong> (<em>Callable</em><em>[</em><em>[</em><em>ndarray</em><em>]</em><em>, </em><em>ndarray</em><em>]</em>) \u2013 The function that determines where the .target of\nthe moving mobject goes.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The animation of the movement.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../manim.animation.animation.Animation/#manim.animation.animation.Animation\" title=\"manim.animation.animation.Animation\">Animation</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.setup\">\n<span class=\"sig-name descname\"><span class=\"pre\">setup</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.setup\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.setup\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>This is meant to be implemented by any scenes which\nare commonly subclassed, and have some common setup\ninvolved before the construct method is called.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.scene.vector_space_scene.LinearTransformationScene.write_vector_coordinates\">\n<span class=\"sig-name descname\"><span class=\"pre\">write_vector_coordinates</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vector</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/scene/vector_space_scene/#LinearTransformationScene.write_vector_coordinates\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.write_vector_coordinates\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns a column matrix indicating the vector coordinates,\nafter writing them to the screen, and adding them to the\nspecial list self.foreground_mobjects</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>vector</strong> (<a class=\"reference internal\" href=\"../manim.mobject.geometry.line.Arrow/#manim.mobject.geometry.line.Arrow\" title=\"manim.mobject.geometry.line.Arrow\"><em>Arrow</em></a>) \u2013 The arrow representing the vector.</p></li>\n<li><p><strong>**kwargs</strong> \u2013 Any valid keyword arguments of VectorScene.write_vector_coordinates</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The column matrix representing the vector.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../manim.mobject.matrix.Matrix/#manim.mobject.matrix.Matrix\" title=\"manim.mobject.matrix.Matrix\">Matrix</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/manim.scene.vector_space_scene.VectorScene", "VectorScene", "N", "next"], ["reference/manim.scene.vector_space_scene", "vector_space_scene", "P", "previous"]], "sourcename": "reference/manim.scene.vector_space_scene.LinearTransformationScene.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">LinearTransformationScene</a><ul>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_background_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.add_background_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_foreground_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.add_foreground_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_moving_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.add_moving_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_special_mobjects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.add_special_mobjects()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_title\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.add_title()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_transformable_label\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.add_transformable_label()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_transformable_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.add_transformable_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_unit_square\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.add_unit_square()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.add_vector\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.add_vector()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_function\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.apply_function()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_inverse\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.apply_inverse()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_inverse_transpose\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.apply_inverse_transpose()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_matrix\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.apply_matrix()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_nonlinear_transformation\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.apply_nonlinear_transformation()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.apply_transposed_matrix\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.apply_transposed_matrix()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_ghost_vectors\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.get_ghost_vectors()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_matrix_transformation\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.get_matrix_transformation()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_moving_mobject_movement\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.get_moving_mobject_movement()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_piece_movement\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.get_piece_movement()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_transformable_label_movement\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.get_transformable_label_movement()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_transposed_matrix_transformation\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.get_transposed_matrix_transformation()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_unit_square\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.get_unit_square()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.get_vector_movement\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.get_vector_movement()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.setup\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.setup()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.scene.vector_space_scene.LinearTransformationScene.write_vector_coordinates\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LinearTransformationScene.write_vector_coordinates()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/manim.scene.vector_space_scene.LinearTransformationScene", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "furo_version": "2024.08.06", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#202020", "foreground": "#d0d0d0"}}}