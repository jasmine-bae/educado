{"parents": [{"link": "../", "title": "Reference Manual"}, {"link": "../../reference_index/animations/", "title": "Animations"}, {"link": "../manim.animation.transform/", "title": "transform"}], "prev": {"link": "../manim.animation.transform.Swap/", "title": "Swap"}, "next": {"link": "../manim.animation.transform.TransformAnimations/", "title": "TransformAnimations"}, "title": "Transform", "meta": {}, "body": "<section id=\"transform\">\n<h1>Transform<a class=\"headerlink\" href=\"#transform\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Qualified name: <code class=\"docutils literal notranslate\"><span class=\"pre\">manim.animation.transform.Transform</span></code></p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.transform.Transform\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">Transform</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mobject</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_override</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/transform/#Transform\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.transform.Transform\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../manim.animation.animation.Animation/#manim.animation.animation.Animation\" title=\"manim.animation.animation.Animation\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Animation</span></code></a></p>\n<p>A Transform transforms a Mobject into a target Mobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>mobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a><em> | </em><em>None</em>) \u2013 The <a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a> to be transformed. It will be mutated to become the <code class=\"docutils literal notranslate\"><span class=\"pre\">target_mobject</span></code>.</p></li>\n<li><p><strong>target_mobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a><em> | </em><em>None</em>) \u2013 The target of the transformation.</p></li>\n<li><p><strong>path_func</strong> (<em>Callable</em><em> | </em><em>None</em>) \u2013 A function defining the path that the points of the <code class=\"docutils literal notranslate\"><span class=\"pre\">mobject</span></code> are being moved\nalong until they match the points of the <code class=\"docutils literal notranslate\"><span class=\"pre\">target_mobject</span></code>, see <a class=\"reference internal\" href=\"../manim.utils.paths/#module-manim.utils.paths\" title=\"manim.utils.paths\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utils.paths</span></code></a>.</p></li>\n<li><p><strong>path_arc</strong> (<em>float</em>) \u2013 The arc angle (in radians) that the points of <code class=\"docutils literal notranslate\"><span class=\"pre\">mobject</span></code> will follow to reach\nthe points of the target if using a circular path arc, see <code class=\"docutils literal notranslate\"><span class=\"pre\">path_arc_centers</span></code>.\nSee also <a class=\"reference internal\" href=\"../manim.utils.paths/#manim.utils.paths.path_along_arc\" title=\"manim.utils.paths.path_along_arc\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">manim.utils.paths.path_along_arc()</span></code></a>.</p></li>\n<li><p><strong>path_arc_axis</strong> (<em>np.ndarray</em>) \u2013 The axis to rotate along if using a circular path arc, see <code class=\"docutils literal notranslate\"><span class=\"pre\">path_arc_centers</span></code>.</p></li>\n<li><p><strong>path_arc_centers</strong> (<em>np.ndarray</em>) \u2013 <p>The center of the circular arcs along which the points of <code class=\"docutils literal notranslate\"><span class=\"pre\">mobject</span></code> are\nmoved by the transformation.</p>\n<p>If this is set and <code class=\"docutils literal notranslate\"><span class=\"pre\">path_func</span></code> is not set, then a <code class=\"docutils literal notranslate\"><span class=\"pre\">path_along_circles</span></code> path will be generated\nusing the <code class=\"docutils literal notranslate\"><span class=\"pre\">path_arc</span></code> parameters and stored in <code class=\"docutils literal notranslate\"><span class=\"pre\">path_func</span></code>. If <code class=\"docutils literal notranslate\"><span class=\"pre\">path_func</span></code> is set, this and the\nother <code class=\"docutils literal notranslate\"><span class=\"pre\">path_arc</span></code> fields are set as attributes, but a <code class=\"docutils literal notranslate\"><span class=\"pre\">path_func</span></code> is not generated from it.</p>\n</p></li>\n<li><p><strong>replace_mobject_with_target_in_scene</strong> (<em>bool</em>) \u2013 <p>Controls which mobject is replaced when the transformation is complete.</p>\n<p>If set to True, <code class=\"docutils literal notranslate\"><span class=\"pre\">mobject</span></code> will be removed from the scene and <code class=\"docutils literal notranslate\"><span class=\"pre\">target_mobject</span></code> will\nreplace it. Otherwise, <code class=\"docutils literal notranslate\"><span class=\"pre\">target_mobject</span></code> is never added and <code class=\"docutils literal notranslate\"><span class=\"pre\">mobject</span></code> just takes its shape.</p>\n</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p class=\"rubric\">Methods</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.animation.transform.Transform.begin\" title=\"manim.animation.transform.Transform.begin\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">begin</span></code></a></p></td>\n<td><p>Begin the animation.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.animation.transform.Transform.clean_up_from_scene\" title=\"manim.animation.transform.Transform.clean_up_from_scene\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">clean_up_from_scene</span></code></a></p></td>\n<td><p>Clean up the <a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene\" title=\"manim.scene.scene.Scene\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Scene</span></code></a> after finishing the animation.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">create_target</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_all_families_zipped</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.animation.transform.Transform.get_all_mobjects\" title=\"manim.animation.transform.Transform.get_all_mobjects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_all_mobjects</span></code></a></p></td>\n<td><p>Get all mobjects involved in the animation.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">interpolate_submobject</span></code></p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p class=\"rubric\">Attributes</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">path_arc</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">path_func</span></code></p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.transform.Transform.begin\">\n<span class=\"sig-name descname\"><span class=\"pre\">begin</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/transform/#Transform.begin\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.transform.Transform.begin\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Begin the animation.</p>\n<p>This method is called right as an animation is being played. As much\ninitialization as possible, especially any mobject copying, should live in this\nmethod.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>None</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.transform.Transform.clean_up_from_scene\">\n<span class=\"sig-name descname\"><span class=\"pre\">clean_up_from_scene</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scene</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/transform/#Transform.clean_up_from_scene\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.transform.Transform.clean_up_from_scene\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Clean up the <a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene\" title=\"manim.scene.scene.Scene\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Scene</span></code></a> after finishing the animation.</p>\n<p>This includes to <a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene.remove\" title=\"manim.scene.scene.Scene.remove\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">remove()</span></code></a> the Animation\u2019s\n<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a> if the animation is a remover.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>scene</strong> (<a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene\" title=\"manim.scene.scene.Scene\"><em>Scene</em></a>) \u2013 The scene the animation should be cleaned up from.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>None</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.transform.Transform.get_all_mobjects\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_all_mobjects</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/transform/#Transform.get_all_mobjects\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.transform.Transform.get_all_mobjects\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Get all mobjects involved in the animation.</p>\n<p>Ordering must match the ordering of arguments to interpolate_submobject</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>The sequence of mobjects.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Sequence[<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\">Mobject</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/manim.animation.transform.TransformAnimations", "TransformAnimations", "N", "next"], ["reference/manim.animation.transform.Swap", "Swap", "P", "previous"]], "sourcename": "reference/manim.animation.transform.Transform.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Transform</a><ul>\n<li><a class=\"reference internal\" href=\"#manim.animation.transform.Transform\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Transform</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#manim.animation.transform.Transform.begin\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Transform.begin()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.transform.Transform.clean_up_from_scene\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Transform.clean_up_from_scene()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.transform.Transform.get_all_mobjects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Transform.get_all_mobjects()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/manim.animation.transform.Transform", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "furo_version": "2024.08.06", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#202020", "foreground": "#d0d0d0"}}}