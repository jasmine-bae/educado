{"parents": [{"link": "../", "title": "Reference Manual"}, {"link": "../../reference_index/mobjects/", "title": "Mobjects"}, {"link": "../manim.mobject.types/", "title": "types"}, {"link": "../manim.mobject.types.vectorized_mobject/", "title": "vectorized_mobject"}], "prev": {"link": "../manim.mobject.types.vectorized_mobject.VDict/", "title": "VDict"}, "next": {"link": "../manim.mobject.types.vectorized_mobject.VMobject/", "title": "VMobject"}, "title": "VGroup", "meta": {}, "body": "<section id=\"vgroup\">\n<h1>VGroup<a class=\"headerlink\" href=\"#vgroup\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Qualified name: <code class=\"docutils literal notranslate\"><span class=\"pre\">manim.mobject.types.vectorized\\_mobject.VGroup</span></code></p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VGroup\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">VGroup</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">vmobjects</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VGroup\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VGroup\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n<p>A group of vectorized mobjects.</p>\n<p>This can be used to group multiple <a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a> instances together\nin order to scale, move, \u2026 them together.</p>\n<p class=\"rubric\">Notes</p>\n<p>When adding the same mobject more than once, repetitions are ignored.\nUse <a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject.copy\" title=\"manim.mobject.mobject.Mobject.copy\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Mobject.copy()</span></code></a> to create a separate copy which can then\nbe added to the group.</p>\n<p class=\"rubric\">Examples</p>\n<p>To add <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VGroup</span></code>, you can either use the\n<a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VGroup.add\" title=\"manim.mobject.types.vectorized_mobject.VGroup.add\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">add()</span></code></a> method, or use the <cite>+</cite> and <cite>+=</cite> operators. Similarly, you\ncan subtract elements of a VGroup via <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">remove()</span></code> method, or\n<cite>-</cite> and <cite>-=</cite> operators:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">manim</span> <span class=\"kn\">import</span> <span class=\"n\">Triangle</span><span class=\"p\">,</span> <span class=\"n\">Square</span><span class=\"p\">,</span> <span class=\"n\">VGroup</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vg</span> <span class=\"o\">=</span> <span class=\"n\">VGroup</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">triangle</span><span class=\"p\">,</span> <span class=\"n\">square</span> <span class=\"o\">=</span> <span class=\"n\">Triangle</span><span class=\"p\">(),</span> <span class=\"n\">Square</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vg</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">triangle</span><span class=\"p\">)</span>\n<span class=\"go\">VGroup(Triangle)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vg</span> <span class=\"o\">+</span> <span class=\"n\">square</span>   <span class=\"c1\"># a new VGroup is constructed</span>\n<span class=\"go\">VGroup(Triangle, Square)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vg</span>            <span class=\"c1\"># not modified</span>\n<span class=\"go\">VGroup(Triangle)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vg</span> <span class=\"o\">+=</span> <span class=\"n\">square</span><span class=\"p\">;</span> <span class=\"n\">vg</span>  <span class=\"c1\"># modifies vg</span>\n<span class=\"go\">VGroup(Triangle, Square)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vg</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">triangle</span><span class=\"p\">)</span>\n<span class=\"go\">VGroup(Square)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vg</span> <span class=\"o\">-</span> <span class=\"n\">square</span><span class=\"p\">;</span> <span class=\"c1\"># a new VGroup is constructed</span>\n<span class=\"go\">VGroup()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vg</span>   <span class=\"c1\"># not modified</span>\n<span class=\"go\">VGroup(Square)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vg</span> <span class=\"o\">-=</span> <span class=\"n\">square</span><span class=\"p\">;</span> <span class=\"n\">vg</span> <span class=\"c1\"># modifies vg</span>\n<span class=\"go\">VGroup()</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VGroup.add\" title=\"manim.mobject.types.vectorized_mobject.VGroup.add\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add</span></code></a></p></td>\n<td><p>Checks if all passed elements are an instance of VMobject and then add them to submobjects</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p class=\"rubric\">Attributes</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">animate</span></code></p></td>\n<td><p>Used to animate the application of any method of <code class=\"code docutils literal notranslate\"><span class=\"pre\">self</span></code>.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">animation_overrides</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">color</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">depth</span></code></p></td>\n<td><p>The depth of the mobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">fill_color</span></code></p></td>\n<td><p>If there are multiple colors (for gradient) this returns the first one</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">height</span></code></p></td>\n<td><p>The height of the mobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">n_points_per_curve</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sheen_factor</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">stroke_color</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">width</span></code></p></td>\n<td><p>The width of the mobject.</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VGroup._original__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">_original__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">vmobjects</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VGroup._original__init__\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VGroup.add\">\n<span class=\"sig-name descname\"><span class=\"pre\">add</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">vmobjects</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VGroup.add\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VGroup.add\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Checks if all passed elements are an instance of VMobject and then add them to submobjects</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>vmobjects</strong> (<a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a>) \u2013 List of VMobject to add</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VGroup\" title=\"manim.mobject.types.vectorized_mobject.VGroup\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VGroup</span></code></a></p>\n</dd>\n<dt class=\"field-odd\">Raises<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>TypeError</strong> \u2013 If one element of the list is not an instance of VMobject</p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/manim.mobject.types.vectorized_mobject.VMobject", "VMobject", "N", "next"], ["reference/manim.mobject.types.vectorized_mobject.VDict", "VDict", "P", "previous"]], "sourcename": "reference/manim.mobject.types.vectorized_mobject.VGroup.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">VGroup</a><ul>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VGroup\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VGroup</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VGroup._original__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VGroup._original__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VGroup.add\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VGroup.add()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/manim.mobject.types.vectorized_mobject.VGroup", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "furo_version": "2024.08.06", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#202020", "foreground": "#d0d0d0"}}}