{"parents": [{"link": "../", "title": "Reference Manual"}, {"link": "../../reference_index/utilities_misc/", "title": "Utilities and other modules"}], "prev": {"link": "../manim.utils.sounds/", "title": "sounds"}, "next": {"link": "../manim.utils.testing/", "title": "testing"}, "title": "space_ops", "meta": {}, "body": "<section id=\"module-manim.utils.space_ops\">\n<span id=\"space-ops\"></span><h1>space_ops<a class=\"headerlink\" href=\"#module-manim.utils.space_ops\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Utility functions for two- and three-dimensional vectors.</p>\n<p class=\"rubric\">Functions</p>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.R3_to_complex\">\n<span class=\"sig-name descname\"><span class=\"pre\">R3_to_complex</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">point</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#R3_to_complex\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.R3_to_complex\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>point</strong> (<em>Sequence</em><em>[</em><em>float</em><em>]</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ndarray</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.angle_axis_from_quaternion\">\n<span class=\"sig-name descname\"><span class=\"pre\">angle_axis_from_quaternion</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">quaternion</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#angle_axis_from_quaternion\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.angle_axis_from_quaternion\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets angle and axis from a quaternion.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>quaternion</strong> (<em>Sequence</em><em>[</em><em>float</em><em>]</em>) \u2013 The quaternion from which we get the angle and axis.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Gives the angle and axis</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Sequence[float]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.angle_between_vectors\">\n<span class=\"sig-name descname\"><span class=\"pre\">angle_between_vectors</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">v1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">v2</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#angle_between_vectors\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.angle_between_vectors\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the angle between two vectors.\nThis angle will always be between 0 and pi</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>v1</strong> (<em>ndarray</em>) \u2013 The first vector.</p></li>\n<li><p><strong>v2</strong> (<em>ndarray</em>) \u2013 The second vector.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The angle between the vectors.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>float</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.angle_of_vector\">\n<span class=\"sig-name descname\"><span class=\"pre\">angle_of_vector</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vector</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#angle_of_vector\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.angle_of_vector\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns polar coordinate theta when vector is projected on xy plane.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>vector</strong> (<em>Sequence</em><em>[</em><em>float</em><em>] </em><em>| </em><em>ndarray</em>) \u2013 The vector to find the angle for.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The angle of the vector projected.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>float</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.cartesian_to_spherical\">\n<span class=\"sig-name descname\"><span class=\"pre\">cartesian_to_spherical</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vec</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#cartesian_to_spherical\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.cartesian_to_spherical\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns an array of numbers corresponding to each\npolar coordinate value (distance, phi, theta).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>vec</strong> (<em>Sequence</em><em>[</em><em>float</em><em>]</em>) \u2013 A numpy array <code class=\"docutils literal notranslate\"><span class=\"pre\">[x,</span> <span class=\"pre\">y,</span> <span class=\"pre\">z]</span></code>.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ndarray</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.center_of_mass\">\n<span class=\"sig-name descname\"><span class=\"pre\">center_of_mass</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">points</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#center_of_mass\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.center_of_mass\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets the center of mass of the points in space.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>points</strong> (<em>Sequence</em><em>[</em><em>float</em><em>]</em>) \u2013 The points to find the center of mass from.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The center of mass of the points.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.ndarray</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.compass_directions\">\n<span class=\"sig-name descname\"><span class=\"pre\">compass_directions</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">4</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_vect</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">array([1.,</span> <span class=\"pre\">0.,</span> <span class=\"pre\">0.])</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#compass_directions\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.compass_directions\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Finds the cardinal directions using tau.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>n</strong> (<em>int</em>) \u2013 The amount to be rotated, by default 4</p></li>\n<li><p><strong>start_vect</strong> (<em>ndarray</em>) \u2013 The direction for the angle to start with, by default RIGHT</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The angle which has been rotated.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.ndarray</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.complex_func_to_R3_func\">\n<span class=\"sig-name descname\"><span class=\"pre\">complex_func_to_R3_func</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">complex_func</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#complex_func_to_R3_func\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.complex_func_to_R3_func\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.complex_to_R3\">\n<span class=\"sig-name descname\"><span class=\"pre\">complex_to_R3</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">complex_num</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#complex_to_R3\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.complex_to_R3\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>complex_num</strong> (<em>complex</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ndarray</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.cross\">\n<span class=\"sig-name descname\"><span class=\"pre\">cross</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">v1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">v2</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#cross\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.cross\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>v1</strong> (<em>Vector3D</em>)</p></li>\n<li><p><strong>v2</strong> (<em>Vector3D</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>Vector3D</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.cross2d\">\n<span class=\"sig-name descname\"><span class=\"pre\">cross2d</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">a</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#cross2d\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.cross2d\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Compute the determinant(s) of the passed\nvector (sequences).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>a</strong> (<em>Vector2D</em><em> | </em><em>Vector2D_Array</em>) \u2013 A vector or a sequence of vectors.</p></li>\n<li><p><strong>b</strong> (<em>Vector2D</em><em> | </em><em>Vector2D_Array</em>) \u2013 A vector or a sequence of vectors.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The determinant or sequence of determinants\nof the first two components of the specified\nvectors.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Sequence[float] | float</p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cross2d</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]))</span>\n<span class=\"go\">-2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cross2d</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]]),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]]),</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"go\">array([-2,  1])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.earclip_triangulation\">\n<span class=\"sig-name descname\"><span class=\"pre\">earclip_triangulation</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">verts</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ring_ends</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#earclip_triangulation\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.earclip_triangulation\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns a list of indices giving a triangulation\nof a polygon, potentially with holes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>verts</strong> (<em>ndarray</em>) \u2013 verts is a numpy array of points.</p></li>\n<li><p><strong>ring_ends</strong> (<em>list</em>) \u2013 ring_ends is a list of indices indicating where\nthe ends of new paths are.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>A list of indices giving a triangulation of a polygon.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>list</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.find_intersection\">\n<span class=\"sig-name descname\"><span class=\"pre\">find_intersection</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">p0s</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">v0s</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">p1s</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">v1s</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1e-05</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#find_intersection\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.find_intersection\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Return the intersection of a line passing through p0 in direction v0\nwith one passing through p1 in direction v1 (or array of intersections\nfrom arrays of such points/directions).\nFor 3d values, it returns the point on the ray p0 + v0 * t closest to the\nray p1 + v1 * t</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>p0s</strong> (<em>Sequence</em><em>[</em><em>ndarray</em><em>] </em><em>| </em><em>Point3D_Array</em>)</p></li>\n<li><p><strong>v0s</strong> (<em>Sequence</em><em>[</em><em>ndarray</em><em>] </em><em>| </em><em>Point3D_Array</em>)</p></li>\n<li><p><strong>p1s</strong> (<em>Sequence</em><em>[</em><em>ndarray</em><em>] </em><em>| </em><em>Point3D_Array</em>)</p></li>\n<li><p><strong>v1s</strong> (<em>Sequence</em><em>[</em><em>ndarray</em><em>] </em><em>| </em><em>Point3D_Array</em>)</p></li>\n<li><p><strong>threshold</strong> (<em>float</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>Sequence</em>[<em>ndarray</em>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.get_unit_normal\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_unit_normal</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">v1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">v2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1e-06</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#get_unit_normal\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.get_unit_normal\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets the unit normal of the vectors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>v1</strong> (<em>Vector3D</em>) \u2013 The first vector.</p></li>\n<li><p><strong>v2</strong> (<em>Vector3D</em>) \u2013 The second vector</p></li>\n<li><p><strong>tol</strong> (<em>float</em>) \u2013 [description], by default 1e-6</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The normal of the two vectors.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.ndarray</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.get_winding_number\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_winding_number</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">points</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#get_winding_number\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.get_winding_number\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Determine the number of times a polygon winds around the origin.</p>\n<p>The orientation is measured mathematically positively, i.e.,\ncounterclockwise.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>points</strong> (<em>Sequence</em><em>[</em><em>ndarray</em><em>]</em>) \u2013 The vertices of the polygon being queried.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">manim</span> <span class=\"kn\">import</span> <span class=\"n\">Square</span><span class=\"p\">,</span> <span class=\"n\">get_winding_number</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">polygon</span> <span class=\"o\">=</span> <span class=\"n\">Square</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get_winding_number</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">get_vertices</span><span class=\"p\">())</span>\n<span class=\"go\">1.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">shift</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">UP</span><span class=\"p\">)</span>\n<span class=\"go\">Square</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get_winding_number</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">get_vertices</span><span class=\"p\">())</span>\n<span class=\"go\">0.0</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.line_intersection\">\n<span class=\"sig-name descname\"><span class=\"pre\">line_intersection</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">line1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">line2</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#line_intersection\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.line_intersection\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the intersection point of two lines, each defined by\na pair of distinct points lying on the line.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>line1</strong> (<em>Sequence</em><em>[</em><em>ndarray</em><em>]</em>) \u2013 A list of two points that determine the first line.</p></li>\n<li><p><strong>line2</strong> (<em>Sequence</em><em>[</em><em>ndarray</em><em>]</em>) \u2013 A list of two points that determine the second line.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The intersection points of the two lines which are intersecting.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.ndarray</p>\n</dd>\n<dt class=\"field-even\">Raises<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><strong>ValueError</strong> \u2013 Error is produced if the two lines don\u2019t intersect with each other\n    or if the coordinates don\u2019t lie on the xy-plane.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.midpoint\">\n<span class=\"sig-name descname\"><span class=\"pre\">midpoint</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">point1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">point2</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#midpoint\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.midpoint\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets the midpoint of two points.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>point1</strong> (<em>Sequence</em><em>[</em><em>float</em><em>]</em>) \u2013 The first point.</p></li>\n<li><p><strong>point2</strong> (<em>Sequence</em><em>[</em><em>float</em><em>]</em>) \u2013 The second point.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The midpoint of the points</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../manim.mobject.geometry.boolean_ops.Union/#manim.mobject.geometry.boolean_ops.Union\" title=\"manim.mobject.geometry.boolean_ops.Union\">Union</a>[float, np.ndarray]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.norm_squared\">\n<span class=\"sig-name descname\"><span class=\"pre\">norm_squared</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">v</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#norm_squared\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.norm_squared\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>v</strong> (<em>float</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.normalize\">\n<span class=\"sig-name descname\"><span class=\"pre\">normalize</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vect</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fall_back</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#normalize\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.normalize\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>vect</strong> (<em>ndarray</em><em> | </em><em>tuple</em><em>[</em><em>float</em><em>]</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ndarray</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.normalize_along_axis\">\n<span class=\"sig-name descname\"><span class=\"pre\">normalize_along_axis</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">array</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#normalize_along_axis\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.normalize_along_axis\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Normalizes an array with the provided axis.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>array</strong> (<em>ndarray</em>) \u2013 The array which has to be normalized.</p></li>\n<li><p><strong>axis</strong> (<em>ndarray</em>) \u2013 The axis to be normalized to.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Array which has been normalized according to the axis.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.ndarray</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.perpendicular_bisector\">\n<span class=\"sig-name descname\"><span class=\"pre\">perpendicular_bisector</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">line</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">norm_vector</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">array([0.,</span> <span class=\"pre\">0.,</span> <span class=\"pre\">1.])</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#perpendicular_bisector\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.perpendicular_bisector\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns a list of two points that correspond\nto the ends of the perpendicular bisector of the\ntwo points given.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>line</strong> (<em>Sequence</em><em>[</em><em>ndarray</em><em>]</em>) \u2013 a list of two numpy array points (corresponding\nto the ends of a line).</p></li>\n<li><p><strong>norm_vector</strong> \u2013 the vector perpendicular to both the line given\nand the perpendicular bisector.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>A list of two numpy array points that correspond\nto the ends of the perpendicular bisector</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>list</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.quaternion_conjugate\">\n<span class=\"sig-name descname\"><span class=\"pre\">quaternion_conjugate</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">quaternion</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#quaternion_conjugate\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.quaternion_conjugate\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Used for finding the conjugate of the quaternion</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>quaternion</strong> (<em>Sequence</em><em>[</em><em>float</em><em>]</em>) \u2013 The quaternion for which you want to find the conjugate for.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The conjugate of the quaternion.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.ndarray</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.quaternion_from_angle_axis\">\n<span class=\"sig-name descname\"><span class=\"pre\">quaternion_from_angle_axis</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis_normalized</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#quaternion_from_angle_axis\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.quaternion_from_angle_axis\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets a quaternion from an angle and an axis.\nFor more information, check <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles\">this Wikipedia page</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>angle</strong> (<em>float</em>) \u2013 The angle for the quaternion.</p></li>\n<li><p><strong>axis</strong> (<em>ndarray</em>) \u2013 The axis for the quaternion</p></li>\n<li><p><strong>axis_normalized</strong> (<em>bool</em>) \u2013 Checks whether the axis is normalized, by default False</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Gives back a quaternion from the angle and axis</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>list[float]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.quaternion_mult\">\n<span class=\"sig-name descname\"><span class=\"pre\">quaternion_mult</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">quats</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#quaternion_mult\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.quaternion_mult\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets the Hamilton product of the quaternions provided.\nFor more information, check <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Quaternion\">this Wikipedia page</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Returns a list of product of two quaternions.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../manim.mobject.geometry.boolean_ops.Union/#manim.mobject.geometry.boolean_ops.Union\" title=\"manim.mobject.geometry.boolean_ops.Union\">Union</a>[np.ndarray, List[<a class=\"reference internal\" href=\"../manim.mobject.geometry.boolean_ops.Union/#manim.mobject.geometry.boolean_ops.Union\" title=\"manim.mobject.geometry.boolean_ops.Union\">Union</a>[float, np.ndarray]]]</p>\n</dd>\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>quats</strong> (<em>Sequence</em><em>[</em><em>float</em><em>]</em>)</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.regular_vertices\">\n<span class=\"sig-name descname\"><span class=\"pre\">regular_vertices</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">radius</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">start_angle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#regular_vertices\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.regular_vertices\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Generates regularly spaced vertices around a circle centered at the origin.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>n</strong> (<em>int</em>) \u2013 The number of vertices</p></li>\n<li><p><strong>radius</strong> (<em>float</em>) \u2013 The radius of the circle that the vertices are placed on.</p></li>\n<li><p><strong>start_angle</strong> (<em>float</em><em> | </em><em>None</em>) \u2013 <p>The angle the vertices start at.</p>\n<p>If unspecified, for even <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> values, <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> will be used.\nFor odd <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> values, 90 degrees is used.</p>\n</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><ul class=\"simple\">\n<li><p><strong>vertices</strong> (<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">numpy.ndarray</span></code>) \u2013 The regularly spaced vertices.</p></li>\n<li><p><strong>start_angle</strong> (<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">float</span></code>) \u2013 The angle the vertices start at.</p></li>\n</ul>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>tuple[<em>ndarray</em>, float]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.rotate_vector\">\n<span class=\"sig-name descname\"><span class=\"pre\">rotate_vector</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vector</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">array([0.,</span> <span class=\"pre\">0.,</span> <span class=\"pre\">1.])</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#rotate_vector\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.rotate_vector\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Function for rotating a vector.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>vector</strong> (<em>ndarray</em>) \u2013 The vector to be rotated.</p></li>\n<li><p><strong>angle</strong> (<em>float</em>) \u2013 The angle to be rotated by.</p></li>\n<li><p><strong>axis</strong> (<em>ndarray</em>) \u2013 The axis to be rotated, by default OUT</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The rotated vector with provided angle and axis.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.ndarray</p>\n</dd>\n<dt class=\"field-even\">Raises<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><strong>ValueError</strong> \u2013 If vector is not of dimension 2 or 3.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.rotation_about_z\">\n<span class=\"sig-name descname\"><span class=\"pre\">rotation_about_z</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angle</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#rotation_about_z\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.rotation_about_z\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns a rotation matrix for a given angle.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>angle</strong> (<em>float</em>) \u2013 Angle for the rotation matrix.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Gives back the rotated matrix.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.ndarray</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.rotation_matrix\">\n<span class=\"sig-name descname\"><span class=\"pre\">rotation_matrix</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">homogeneous</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#rotation_matrix\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.rotation_matrix\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Rotation in R^3 about a specified axis of rotation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>angle</strong> (<em>float</em>)</p></li>\n<li><p><strong>axis</strong> (<em>ndarray</em>)</p></li>\n<li><p><strong>homogeneous</strong> (<em>bool</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ndarray</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.rotation_matrix_from_quaternion\">\n<span class=\"sig-name descname\"><span class=\"pre\">rotation_matrix_from_quaternion</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">quat</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#rotation_matrix_from_quaternion\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.rotation_matrix_from_quaternion\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>quat</strong> (<em>ndarray</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ndarray</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.rotation_matrix_transpose\">\n<span class=\"sig-name descname\"><span class=\"pre\">rotation_matrix_transpose</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#rotation_matrix_transpose\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.rotation_matrix_transpose\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>angle</strong> (<em>float</em>)</p></li>\n<li><p><strong>axis</strong> (<em>ndarray</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ndarray</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.rotation_matrix_transpose_from_quaternion\">\n<span class=\"sig-name descname\"><span class=\"pre\">rotation_matrix_transpose_from_quaternion</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">quat</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#rotation_matrix_transpose_from_quaternion\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.rotation_matrix_transpose_from_quaternion\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Converts the quaternion, quat, to an equivalent rotation matrix representation.\nFor more information, check <a class=\"reference external\" href=\"https://in.mathworks.com/help/driving/ref/quaternion.rotmat.html\">this page</a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>quat</strong> (<em>ndarray</em>) \u2013 The quaternion which is to be converted.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Gives back the Rotation matrix representation, returned as a 3-by-3\nmatrix or 3-by-3-by-N multidimensional array.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>List[np.ndarray]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.shoelace\">\n<span class=\"sig-name descname\"><span class=\"pre\">shoelace</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x_y</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#shoelace\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.shoelace\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>2D implementation of the shoelace formula.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Returns signed area.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">float</span></code></p>\n</dd>\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>x_y</strong> (<em>ndarray</em>)</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.shoelace_direction\">\n<span class=\"sig-name descname\"><span class=\"pre\">shoelace_direction</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">x_y</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#shoelace_direction\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.shoelace_direction\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Uses the area determined by the shoelace method to determine whether\nthe input set of points is directed clockwise or counterclockwise.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Either <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;CW&quot;</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;CCW&quot;</span></code>.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></p>\n</dd>\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>x_y</strong> (<em>ndarray</em>)</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.spherical_to_cartesian\">\n<span class=\"sig-name descname\"><span class=\"pre\">spherical_to_cartesian</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">spherical</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#spherical_to_cartesian\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.spherical_to_cartesian\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns a numpy array <code class=\"docutils literal notranslate\"><span class=\"pre\">[x,</span> <span class=\"pre\">y,</span> <span class=\"pre\">z]</span></code> based on the spherical\ncoordinates given.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>spherical</strong> (<em>Sequence</em><em>[</em><em>float</em><em>]</em>) \u2013 <p>A list of three floats that correspond to the following:</p>\n<p>r - The distance between the point and the origin.</p>\n<p>theta - The azimuthal angle of the point to the positive x-axis.</p>\n<p>phi - The vertical angle of the point to the positive z-axis.</p>\n</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ndarray</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.thick_diagonal\">\n<span class=\"sig-name descname\"><span class=\"pre\">thick_diagonal</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dim</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">thickness</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#thick_diagonal\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.thick_diagonal\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>dim</strong> (<em>int</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ndarray</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.space_ops.z_to_vector\">\n<span class=\"sig-name descname\"><span class=\"pre\">z_to_vector</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vector</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/space_ops/#z_to_vector\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.space_ops.z_to_vector\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns some matrix in SO(3) which takes the z-axis to the\n(normalized) vector provided as an argument</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>vector</strong> (<em>ndarray</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ndarray</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/manim.utils.testing", "testing", "N", "next"], ["reference/manim.utils.sounds", "sounds", "P", "previous"]], "sourcename": "reference/manim.utils.space_ops.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">space_ops</a><ul>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.R3_to_complex\"><code class=\"docutils literal notranslate\"><span class=\"pre\">R3_to_complex()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.angle_axis_from_quaternion\"><code class=\"docutils literal notranslate\"><span class=\"pre\">angle_axis_from_quaternion()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.angle_between_vectors\"><code class=\"docutils literal notranslate\"><span class=\"pre\">angle_between_vectors()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.angle_of_vector\"><code class=\"docutils literal notranslate\"><span class=\"pre\">angle_of_vector()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.cartesian_to_spherical\"><code class=\"docutils literal notranslate\"><span class=\"pre\">cartesian_to_spherical()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.center_of_mass\"><code class=\"docutils literal notranslate\"><span class=\"pre\">center_of_mass()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.compass_directions\"><code class=\"docutils literal notranslate\"><span class=\"pre\">compass_directions()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.complex_func_to_R3_func\"><code class=\"docutils literal notranslate\"><span class=\"pre\">complex_func_to_R3_func()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.complex_to_R3\"><code class=\"docutils literal notranslate\"><span class=\"pre\">complex_to_R3()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.cross\"><code class=\"docutils literal notranslate\"><span class=\"pre\">cross()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.cross2d\"><code class=\"docutils literal notranslate\"><span class=\"pre\">cross2d()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.earclip_triangulation\"><code class=\"docutils literal notranslate\"><span class=\"pre\">earclip_triangulation()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.find_intersection\"><code class=\"docutils literal notranslate\"><span class=\"pre\">find_intersection()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.get_unit_normal\"><code class=\"docutils literal notranslate\"><span class=\"pre\">get_unit_normal()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.get_winding_number\"><code class=\"docutils literal notranslate\"><span class=\"pre\">get_winding_number()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.line_intersection\"><code class=\"docutils literal notranslate\"><span class=\"pre\">line_intersection()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.midpoint\"><code class=\"docutils literal notranslate\"><span class=\"pre\">midpoint()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.norm_squared\"><code class=\"docutils literal notranslate\"><span class=\"pre\">norm_squared()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.normalize\"><code class=\"docutils literal notranslate\"><span class=\"pre\">normalize()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.normalize_along_axis\"><code class=\"docutils literal notranslate\"><span class=\"pre\">normalize_along_axis()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.perpendicular_bisector\"><code class=\"docutils literal notranslate\"><span class=\"pre\">perpendicular_bisector()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.quaternion_conjugate\"><code class=\"docutils literal notranslate\"><span class=\"pre\">quaternion_conjugate()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.quaternion_from_angle_axis\"><code class=\"docutils literal notranslate\"><span class=\"pre\">quaternion_from_angle_axis()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.quaternion_mult\"><code class=\"docutils literal notranslate\"><span class=\"pre\">quaternion_mult()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.regular_vertices\"><code class=\"docutils literal notranslate\"><span class=\"pre\">regular_vertices()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.rotate_vector\"><code class=\"docutils literal notranslate\"><span class=\"pre\">rotate_vector()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.rotation_about_z\"><code class=\"docutils literal notranslate\"><span class=\"pre\">rotation_about_z()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.rotation_matrix\"><code class=\"docutils literal notranslate\"><span class=\"pre\">rotation_matrix()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.rotation_matrix_from_quaternion\"><code class=\"docutils literal notranslate\"><span class=\"pre\">rotation_matrix_from_quaternion()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.rotation_matrix_transpose\"><code class=\"docutils literal notranslate\"><span class=\"pre\">rotation_matrix_transpose()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.rotation_matrix_transpose_from_quaternion\"><code class=\"docutils literal notranslate\"><span class=\"pre\">rotation_matrix_transpose_from_quaternion()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.shoelace\"><code class=\"docutils literal notranslate\"><span class=\"pre\">shoelace()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.shoelace_direction\"><code class=\"docutils literal notranslate\"><span class=\"pre\">shoelace_direction()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.spherical_to_cartesian\"><code class=\"docutils literal notranslate\"><span class=\"pre\">spherical_to_cartesian()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.thick_diagonal\"><code class=\"docutils literal notranslate\"><span class=\"pre\">thick_diagonal()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.space_ops.z_to_vector\"><code class=\"docutils literal notranslate\"><span class=\"pre\">z_to_vector()</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/manim.utils.space_ops", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "furo_version": "2024.08.06", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#202020", "foreground": "#d0d0d0"}}}