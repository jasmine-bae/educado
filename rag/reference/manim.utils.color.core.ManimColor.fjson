{"parents": [{"link": "../", "title": "Reference Manual"}, {"link": "../../reference_index/utilities_misc/", "title": "Utilities and other modules"}, {"link": "../manim.utils.color/", "title": "color"}, {"link": "../manim.utils.color.core/", "title": "core"}], "prev": {"link": "../manim.utils.color.core/", "title": "core"}, "next": {"link": "../manim.utils.color.manim_colors/", "title": "manim_colors"}, "title": "ManimColor", "meta": {}, "body": "<section id=\"manimcolor\">\n<h1>ManimColor<a class=\"headerlink\" href=\"#manimcolor\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Qualified name: <code class=\"docutils literal notranslate\"><span class=\"pre\">manim.utils.color.core.ManimColor</span></code></p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">ManimColor</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<p>Internal representation of a color.</p>\n<p>The ManimColor class is the main class for the representation of a color.\nIt\u2019s internal representation is a 4 element array of floats corresponding\nto a [r,g,b,a] value where r,g,b,a can be between 0 to 1.</p>\n<p>This is done in order to reduce the amount of color inconsistencies by constantly\ncasting between integers and floats which introduces errors.</p>\n<p>The class can accept any value of type <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ParsableManimColor</span></code> i.e.</p>\n<p>ManimColor, int, str, RGB_Tuple_Int, RGB_Tuple_Float, RGBA_Tuple_Int, RGBA_Tuple_Float, RGB_Array_Int,\nRGB_Array_Float, RGBA_Array_Int, RGBA_Array_Float</p>\n<p>ManimColor itself only accepts singular values and will directly interpret them into a single color if possible\nBe careful when passing strings to ManimColor it can create a big overhead for the color processing.</p>\n<p>If you want to parse a list of colors use the function <a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.parse\" title=\"manim.utils.color.core.ManimColor.parse\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">parse()</span></code></a> in <a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ManimColor</span></code></a> which assumes that\nyou are going to pass a list of color so arrays will not be interpreted as a single color.</p>\n<div class=\"admonition warning\">\n<p class=\"admonition-title\">Warning</p>\n<p>If you pass an array of numbers to <a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.parse\" title=\"manim.utils.color.core.ManimColor.parse\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">parse()</span></code></a> it will interpret the r,g,b,a numbers in that array as colors\nso instead of the expect singular color you get and array with 4 colors.</p>\n</div>\n<p>For conversion behaviors see the <code class=\"docutils literal notranslate\"><span class=\"pre\">_internal</span></code> functions for further documentation</p>\n<p>You can create a <code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor</span></code> instance via its classmethods. See the respective methods for more info.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mycolor</span> <span class=\"o\">=</span> <span class=\"n\">ManimColor</span><span class=\"o\">.</span><span class=\"n\">from_rgb</span><span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">))</span>\n<span class=\"n\">myothercolor</span> <span class=\"o\">=</span> <span class=\"n\">ManimColor</span><span class=\"o\">.</span><span class=\"n\">from_rgb</span><span class=\"p\">((</span><span class=\"mi\">153</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>You can also convert between different color spaces:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mycolor_hex</span> <span class=\"o\">=</span> <span class=\"n\">mycolor</span><span class=\"o\">.</span><span class=\"n\">to_hex</span><span class=\"p\">()</span>\n<span class=\"n\">myoriginalcolor</span> <span class=\"o\">=</span> <span class=\"n\">ManimColor</span><span class=\"o\">.</span><span class=\"n\">from_hex</span><span class=\"p\">(</span><span class=\"n\">mycolor_hex</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_hsv</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>value</strong> (<em>ParsableManimColor</em><em> | </em><em>None</em>) \u2013 Some representation of a color (e.g., a string or\na suitable tuple). The default <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">BLACK</span></code>.</p></li>\n<li><p><strong>alpha</strong> (<em>float</em>) \u2013 The opacity of the color. By default, colors are\nfully opaque (value 1.0).</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.from_hex\" title=\"manim.utils.color.core.ManimColor.from_hex\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_hex</span></code></a></p></td>\n<td><p>Creates a Manim Color from a hex string, prefixes allowed # and 0x</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.from_hsv\" title=\"manim.utils.color.core.ManimColor.from_hsv\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_hsv</span></code></a></p></td>\n<td><p>Creates a ManimColor from an HSV Array</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.from_rgb\" title=\"manim.utils.color.core.ManimColor.from_rgb\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_rgb</span></code></a></p></td>\n<td><p>Creates a ManimColor from an RGB Array.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.from_rgba\" title=\"manim.utils.color.core.ManimColor.from_rgba\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">from_rgba</span></code></a></p></td>\n<td><p>Creates a ManimColor from an RGBA Array.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.gradient\" title=\"manim.utils.color.core.ManimColor.gradient\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">gradient</span></code></a></p></td>\n<td><p>This is not implemented by now refer to <a class=\"reference internal\" href=\"../manim.utils.color.core/#manim.utils.color.core.color_gradient\" title=\"manim.utils.color.core.color_gradient\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">color_gradient()</span></code></a> for a working implementation for now</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.interpolate\" title=\"manim.utils.color.core.ManimColor.interpolate\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">interpolate</span></code></a></p></td>\n<td><p>Interpolates between the current and the given ManimColor an returns the interpolated color</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.invert\" title=\"manim.utils.color.core.ManimColor.invert\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">invert</span></code></a></p></td>\n<td><p>Returns an linearly inverted version of the color (no inplace changes)</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.parse\" title=\"manim.utils.color.core.ManimColor.parse\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">parse</span></code></a></p></td>\n<td><p>Handles the parsing of a list of colors or a single color.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_hex\" title=\"manim.utils.color.core.ManimColor.to_hex\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_hex</span></code></a></p></td>\n<td><p>Converts the manim color to a hexadecimal representation of the color</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_hsv\" title=\"manim.utils.color.core.ManimColor.to_hsv\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_hsv</span></code></a></p></td>\n<td><p>Converts the Manim Color to HSV array.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_int_rgb\" title=\"manim.utils.color.core.ManimColor.to_int_rgb\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_int_rgb</span></code></a></p></td>\n<td><p>Converts the current ManimColor into a rgb array of int</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_int_rgba\" title=\"manim.utils.color.core.ManimColor.to_int_rgba\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_int_rgba</span></code></a></p></td>\n<td><p>Converts the current ManimColor into a rgba array of int</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_int_rgba_with_alpha\" title=\"manim.utils.color.core.ManimColor.to_int_rgba_with_alpha\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_int_rgba_with_alpha</span></code></a></p></td>\n<td><p>Converts the current ManimColor into a rgba array of integers as <a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_int_rgba\" title=\"manim.utils.color.core.ManimColor.to_int_rgba\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">to_int_rgba()</span></code></a> but you can change the alpha value.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_integer\" title=\"manim.utils.color.core.ManimColor.to_integer\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_integer</span></code></a></p></td>\n<td><p>Converts the current ManimColor into an integer</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_rgb\" title=\"manim.utils.color.core.ManimColor.to_rgb\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_rgb</span></code></a></p></td>\n<td><p>Converts the current ManimColor into a rgb array of floats</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_rgba\" title=\"manim.utils.color.core.ManimColor.to_rgba\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_rgba</span></code></a></p></td>\n<td><p>Converts the current ManimColor into a rgba array of floats</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_rgba_with_alpha\" title=\"manim.utils.color.core.ManimColor.to_rgba_with_alpha\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to_rgba_with_alpha</span></code></a></p></td>\n<td><p>Converts the current ManimColor into a rgba array of float as <a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_rgba\" title=\"manim.utils.color.core.ManimColor.to_rgba\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">to_rgba()</span></code></a> but you can change the alpha value.</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor._internal_from_hex_string\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">_internal_from_hex_string</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hex</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor._internal_from_hex_string\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor._internal_from_hex_string\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Internal function for converting a hex string into the internal representation of a ManimColor.</p>\n<div class=\"admonition warning\">\n<p class=\"admonition-title\">Warning</p>\n<p>This does not accept any prefixes like # or similar in front of the hex string.\nThis is just intended for the raw hex part</p>\n</div>\n<p><em>For internal use only</em></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>hex</strong> (<em>str</em>) \u2013 hex string to be parsed</p></li>\n<li><p><strong>alpha</strong> (<em>float</em>) \u2013 alpha value used for the color</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Internal color representation</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>ManimColorInternal</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor._internal_from_int_rgb\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">_internal_from_int_rgb</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rgb</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor._internal_from_int_rgb\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor._internal_from_int_rgb\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Internal function for converting a rgb tuple of integers into the internal representation of a ManimColor.</p>\n<p><em>For internal use only</em></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>rgb</strong> (<em>RGB_Tuple_Int</em>) \u2013 integer rgb tuple to be parsed</p></li>\n<li><p><strong>alpha</strong> (<em>float</em><em>, </em><em>optional</em>) \u2013 optional alpha value, by default 1.0</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Internal color representation</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>ManimColorInternal</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor._internal_from_int_rgba\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">_internal_from_int_rgba</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rgba</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor._internal_from_int_rgba\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor._internal_from_int_rgba\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Internal function for converting a rgba tuple of integers into the internal representation of a ManimColor.</p>\n<p><em>For internal use only</em></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>rgba</strong> (<em>RGBA_Tuple_Int</em>) \u2013 int rgba tuple to be parsed</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Internal color representation</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>ManimColorInternal</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor._internal_from_rgb\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">_internal_from_rgb</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rgb</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor._internal_from_rgb\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor._internal_from_rgb\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Internal function for converting a rgb tuple of floats into the internal representation of a ManimColor.</p>\n<p><em>For internal use only</em></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>rgb</strong> (<em>RGB_Tuple_Float</em>) \u2013 float rgb tuple to be parsed</p></li>\n<li><p><strong>alpha</strong> (<em>float</em><em>, </em><em>optional</em>) \u2013 optional alpha value, by default 1.0</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Internal color representation</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>ManimColorInternal</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor._internal_from_rgba\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">_internal_from_rgba</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rgba</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor._internal_from_rgba\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor._internal_from_rgba\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Internal function for converting a rgba tuple of floats into the internal representation of a ManimColor.</p>\n<p><em>For internal use only</em></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>rgba</strong> (<em>RGBA_Tuple_Float</em>) \u2013 int rgba tuple to be parsed</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Internal color representation</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>ManimColorInternal</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor._internal_from_string\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">_internal_from_string</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor._internal_from_string\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor._internal_from_string\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Internal function for converting a string into the internal representation of a ManimColor.\nThis is not used for hex strings, please refer to <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">_internal_from_hex()</span></code> for this functionality.</p>\n<p><em>For internal use only</em></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>name</strong> (<em>str</em>) \u2013 The color name to be parsed into a color. Refer to the different color Modules in the documentation Page to\nfind the corresponding Color names.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Internal color representation</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>ManimColorInternal</p>\n</dd>\n<dt class=\"field-even\">Raises<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><strong>ValueError</strong> \u2013 Raises a ValueError if the color name is not present with manim</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor._internal_value\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">_internal_value</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"pre\">ManimColorInternal</span></em><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor._internal_value\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the internal value of the current Manim color [r,g,b,a] float array</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>internal color representation</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>ManimColorInternal</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.from_hex\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">from_hex</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hex</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.from_hex\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.from_hex\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Creates a Manim Color from a hex string, prefixes allowed # and 0x</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>hex</strong> (<em>str</em>) \u2013 The hex string to be converted (currently only supports 6 nibbles)</p></li>\n<li><p><strong>alpha</strong> (<em>float</em><em>, </em><em>optional</em>) \u2013 alpha value to be used for the hex string, by default 1.0</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The ManimColor represented by the hex string</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\">ManimColor</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.from_hsv\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">from_hsv</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hsv</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.from_hsv\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.from_hsv\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Creates a ManimColor from an HSV Array</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>hsv</strong> (<em>HSV_Array_Float</em><em> | </em><em>HSV_Tuple_Float</em>) \u2013 Any 3 Element Iterable containing floats from 0-1</p></li>\n<li><p><strong>alpha</strong> (<em>float</em><em>, </em><em>optional</em>) \u2013 the alpha value to be used, by default 1.0</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The ManimColor with the corresponding RGB values to the HSV</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\">ManimColor</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.from_rgb\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">from_rgb</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rgb</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.from_rgb\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.from_rgb\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Creates a ManimColor from an RGB Array. Automagically decides which type it is int/float</p>\n<div class=\"admonition warning\">\n<p class=\"admonition-title\">Warning</p>\n<p>Please make sure that your elements are not floats if you want integers. A 5.0 will result in the input\nbeing interpreted as if it was a float rgb array with the value 5.0 and not the integer 5</p>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>rgb</strong> (<em>RGB_Array_Float</em><em> | </em><em>RGB_Tuple_Float</em><em> | </em><em>RGB_Array_Int</em><em> | </em><em>RGB_Tuple_Int</em>) \u2013 Any 3 Element Iterable</p></li>\n<li><p><strong>alpha</strong> (<em>float</em><em>, </em><em>optional</em>) \u2013 alpha value to be used in the color, by default 1.0</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Returns the ManimColor object</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\">ManimColor</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.from_rgba\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">from_rgba</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rgba</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.from_rgba\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.from_rgba\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Creates a ManimColor from an RGBA Array. Automagically decides which type it is int/float</p>\n<div class=\"admonition warning\">\n<p class=\"admonition-title\">Warning</p>\n<p>Please make sure that your elements are not floats if you want integers. A 5.0 will result in the input\nbeing interpreted as if it was a float rgb array with the value 5.0 and not the integer 5</p>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>rgba</strong> (<em>RGBA_Array_Float</em><em> | </em><em>RGBA_Tuple_Float</em><em> | </em><em>RGBA_Array_Int</em><em> | </em><em>RGBA_Tuple_Int</em>) \u2013 Any 4 Element Iterable</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Returns the ManimColor object</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\">ManimColor</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.gradient\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">gradient</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">colors</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">length</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.gradient\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.gradient\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>This is not implemented by now refer to <a class=\"reference internal\" href=\"../manim.utils.color.core/#manim.utils.color.core.color_gradient\" title=\"manim.utils.color.core.color_gradient\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">color_gradient()</span></code></a> for a working implementation for now</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>colors</strong> (<em>list</em><em>[</em><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\"><em>ManimColor</em></a><em>]</em>)</p></li>\n<li><p><strong>length</strong> (<em>int</em>)</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.interpolate\">\n<span class=\"sig-name descname\"><span class=\"pre\">interpolate</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">other</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.interpolate\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.interpolate\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Interpolates between the current and the given ManimColor an returns the interpolated color</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>other</strong> (<a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\"><em>ManimColor</em></a>) \u2013 The other ManimColor to be used for interpolation</p></li>\n<li><p><strong>alpha</strong> (<em>float</em>) \u2013 <p>A point on the line in rgba colorspace connecting the two colors i.e. the interpolation point</p>\n<p>0 corresponds to the current ManimColor and 1 corresponds to the other ManimColor</p>\n</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The interpolated ManimColor</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\">ManimColor</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.invert\">\n<span class=\"sig-name descname\"><span class=\"pre\">invert</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">with_alpha</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.invert\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.invert\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns an linearly inverted version of the color (no inplace changes)</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>with_alpha</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 <p>if true the alpha value will be inverted too, by default False</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>This can result in unintended behavior where objects are not displayed because their alpha\nvalue is suddenly 0 or very low. Please keep that in mind when setting this to true</p>\n</div>\n</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The linearly inverted ManimColor</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\">ManimColor</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.parse\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">parse</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">ParsableManimColor</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">float</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><span class=\"pre\">Self</span></span></span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.parse\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.parse\" title=\"Link to this definition\">\u00b6</a></dt>\n<dt class=\"sig sig-object py\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">parse</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">Sequence</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">ParsableManimColor</span><span class=\"p\"><span class=\"pre\">]</span></span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">float</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><span class=\"pre\">list</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">Self</span><span class=\"p\"><span class=\"pre\">]</span></span></span></span></dt>\n<dd><p>Handles the parsing of a list of colors or a single color.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>color</strong> \u2013 The color or list of colors to parse. Note that this function can not accept rgba tuples. It will assume that you mean list[ManimColor] and will return a list of ManimColors.</p></li>\n<li><p><strong>alpha</strong> \u2013 The alpha value to use if a single color is passed. or if a list of colors is passed to set the value of all colors.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Either a list of colors or a singular color depending on the input</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\">ManimColor</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.to_hex\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_hex</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">with_alpha</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.to_hex\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.to_hex\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Converts the manim color to a hexadecimal representation of the color</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>with_alpha</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 Changes the result from 6 to 8 values where the last 2 nibbles represent the alpha value of 0-255,\nby default False</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>A hex string starting with a # with either 6 or 8 nibbles depending on your input, by default 6 i.e #XXXXXX</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>str</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.to_hsv\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_hsv</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.to_hsv\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.to_hsv\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Converts the Manim Color to HSV array.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Be careful this returns an array in the form <cite>[h, s, v]</cite> where the elements are floats.\nThis might be confusing because rgb can also be an array of floats so you might want to annotate the usage\nof this function in your code by typing the variables with <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HSV_Array_Float</span></code> in order to differentiate\nbetween rgb arrays and hsv arrays</p>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>A hsv array containing 3 elements of type float ranging from 0 to 1</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>HSV_Array_Float</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.to_int_rgb\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_int_rgb</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.to_int_rgb\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.to_int_rgb\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Converts the current ManimColor into a rgb array of int</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>rgb array with 3 elements of type int</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>RGB_Array_Int</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.to_int_rgba\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_int_rgba</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.to_int_rgba\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.to_int_rgba\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Converts the current ManimColor into a rgba array of int</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>rgba array with 4 elements of type int</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>RGBA_Array_Int</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.to_int_rgba_with_alpha\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_int_rgba_with_alpha</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.to_int_rgba_with_alpha\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.to_int_rgba_with_alpha\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Converts the current ManimColor into a rgba array of integers as <a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_int_rgba\" title=\"manim.utils.color.core.ManimColor.to_int_rgba\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">to_int_rgba()</span></code></a> but you can change the alpha\nvalue.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>alpha</strong> (<em>float</em>) \u2013 alpha value to be used for the return value. (Will automatically be scaled from 0-1 to 0-255 so just pass 0-1)</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>rgba array with 4 elements of type int</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>RGBA_Array_Int</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.to_integer\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_integer</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.to_integer\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.to_integer\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Converts the current ManimColor into an integer</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><ul class=\"simple\">\n<li><p><em>int</em> \u2013 integer representation of the color</p></li>\n<li><p><em>.. warning::</em> \u2013 This will return only the rgb part of the color</p></li>\n</ul>\n</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>int</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.to_rgb\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_rgb</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.to_rgb\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.to_rgb\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Converts the current ManimColor into a rgb array of floats</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>rgb array with 3 elements of type float</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>RGB_Array_Float</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.to_rgba\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_rgba</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.to_rgba\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.to_rgba\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Converts the current ManimColor into a rgba array of floats</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>rgba array with 4 elements of type float</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>RGBA_Array_Float</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.utils.color.core.ManimColor.to_rgba_with_alpha\">\n<span class=\"sig-name descname\"><span class=\"pre\">to_rgba_with_alpha</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/utils/color/core/#ManimColor.to_rgba_with_alpha\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.utils.color.core.ManimColor.to_rgba_with_alpha\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Converts the current ManimColor into a rgba array of float as <a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_rgba\" title=\"manim.utils.color.core.ManimColor.to_rgba\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">to_rgba()</span></code></a> but you can change the alpha\nvalue.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>alpha</strong> (<em>float</em>) \u2013 alpha value to be used in the return value</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>rgba array with 4 elements of type float</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>RGBA_Array_Float</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/manim.utils.color.manim_colors", "manim_colors", "N", "next"], ["reference/manim.utils.color.core", "core", "P", "previous"]], "sourcename": "reference/manim.utils.color.core.ManimColor.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">ManimColor</a><ul>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor._internal_from_hex_string\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor._internal_from_hex_string()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor._internal_from_int_rgb\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor._internal_from_int_rgb()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor._internal_from_int_rgba\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor._internal_from_int_rgba()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor._internal_from_rgb\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor._internal_from_rgb()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor._internal_from_rgba\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor._internal_from_rgba()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor._internal_from_string\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor._internal_from_string()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor._internal_value\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor._internal_value</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.from_hex\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.from_hex()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.from_hsv\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.from_hsv()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.from_rgb\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.from_rgb()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.from_rgba\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.from_rgba()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.gradient\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.gradient()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.interpolate\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.interpolate()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.invert\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.invert()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.parse\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.parse()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_hex\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.to_hex()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_hsv\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.to_hsv()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_int_rgb\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.to_int_rgb()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_int_rgba\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.to_int_rgba()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_int_rgba_with_alpha\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.to_int_rgba_with_alpha()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_integer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.to_integer()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_rgb\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.to_rgb()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_rgba\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.to_rgba()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.utils.color.core.ManimColor.to_rgba_with_alpha\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManimColor.to_rgba_with_alpha()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/manim.utils.color.core.ManimColor", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "furo_version": "2024.08.06", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#202020", "foreground": "#d0d0d0"}}}