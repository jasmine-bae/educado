{"parents": [{"link": "../", "title": "Reference Manual"}, {"link": "../../reference_index/mobjects/", "title": "Mobjects"}, {"link": "../manim.mobject.types/", "title": "types"}, {"link": "../manim.mobject.types.vectorized_mobject/", "title": "vectorized_mobject"}], "prev": {"link": "../manim.mobject.types.vectorized_mobject.VGroup/", "title": "VGroup"}, "next": {"link": "../manim.mobject.types.vectorized_mobject.VectorizedPoint/", "title": "VectorizedPoint"}, "title": "VMobject", "meta": {}, "body": "<section id=\"vmobject\">\n<h1>VMobject<a class=\"headerlink\" href=\"#vmobject\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Qualified name: <code class=\"docutils literal notranslate\"><span class=\"pre\">manim.mobject.types.vectorized\\_mobject.VMobject</span></code></p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">VMobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fill_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fill_opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stroke_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stroke_opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stroke_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">4</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background_stroke_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">ManimColor('#000000')</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background_stroke_opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background_stroke_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sheen_factor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">joint_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sheen_direction</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">array([-1.,</span> <span class=\"pre\">1.,</span> <span class=\"pre\">0.])</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">close_new_points</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pre_function_handle_to_anchor_scale_factor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">make_smooth_after_applying_functions</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background_image</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shade_in_3d</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tolerance_for_point_equality</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1e-06</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n_points_per_cubic_curve</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">4</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cap_style</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">CapStyleType.AUTO</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a></p>\n<p>A vectorized mobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>background_stroke_color</strong> (<em>ParsableManimColor</em><em> | </em><em>None</em>) \u2013 The purpose of background stroke is to have something\nthat won\u2019t overlap fill, e.g.  For text against some\ntextured background.</p></li>\n<li><p><strong>sheen_factor</strong> (<em>float</em>) \u2013 When a color c is set, there will be a second color\ncomputed based on interpolating c to WHITE by with\nsheen_factor, and the display will gradient to this\nsecondary color in the direction of sheen_direction.</p></li>\n<li><p><strong>close_new_points</strong> (<em>bool</em>) \u2013 Indicates that it will not be displayed, but\nthat it should count in parent mobject\u2019s path</p></li>\n<li><p><strong>tolerance_for_point_equality</strong> (<em>float</em>) \u2013 This is within a pixel</p></li>\n<li><p><strong>joint_type</strong> (<a class=\"reference internal\" href=\"../manim.constants.LineJointType/#manim.constants.LineJointType\" title=\"manim.constants.LineJointType\"><em>LineJointType</em></a><em> | </em><em>None</em>) \u2013 The line joint type used to connect the curve segments\nof this vectorized mobject. See <a class=\"reference internal\" href=\"../manim.constants.LineJointType/#manim.constants.LineJointType\" title=\"manim.constants.LineJointType\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LineJointType</span></code></a>\nfor options.</p></li>\n<li><p><strong>fill_color</strong> (<em>ParsableManimColor</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>fill_opacity</strong> (<em>float</em>)</p></li>\n<li><p><strong>stroke_color</strong> (<em>ParsableManimColor</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>stroke_opacity</strong> (<em>float</em>)</p></li>\n<li><p><strong>stroke_width</strong> (<em>float</em>)</p></li>\n<li><p><strong>background_stroke_opacity</strong> (<em>float</em>)</p></li>\n<li><p><strong>background_stroke_width</strong> (<em>float</em>)</p></li>\n<li><p><strong>sheen_direction</strong> (<em>Vector3D</em>)</p></li>\n<li><p><strong>pre_function_handle_to_anchor_scale_factor</strong> (<em>float</em>)</p></li>\n<li><p><strong>make_smooth_after_applying_functions</strong> (<em>bool</em>)</p></li>\n<li><p><strong>background_image</strong> (<em>Image</em><em> | </em><em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>shade_in_3d</strong> (<em>bool</em>)</p></li>\n<li><p><strong>n_points_per_cubic_curve</strong> (<em>int</em>)</p></li>\n<li><p><strong>cap_style</strong> (<a class=\"reference internal\" href=\"../manim.constants.CapStyleType/#manim.constants.CapStyleType\" title=\"manim.constants.CapStyleType\"><em>CapStyleType</em></a>)</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_cubic_bezier_curve</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to\" title=\"manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_cubic_bezier_curve_to</span></code></a></p></td>\n<td><p>Add cubic bezier curve to the path.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_cubic_bezier_curves</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.add_line_to\" title=\"manim.mobject.types.vectorized_mobject.VMobject.add_line_to\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_line_to</span></code></a></p></td>\n<td><p>Add a straight line from the last point of VMobject to the given point.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_points_as_corners</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.add_quadratic_bezier_curve_to\" title=\"manim.mobject.types.vectorized_mobject.VMobject.add_quadratic_bezier_curve_to\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_quadratic_bezier_curve_to</span></code></a></p></td>\n<td><p>Add Quadratic bezier curve to the path.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to\" title=\"manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_smooth_curve_to</span></code></a></p></td>\n<td><p>Creates a smooth curve from given points and add it to the VMobject.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_subpath</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.align_points\" title=\"manim.mobject.types.vectorized_mobject.VMobject.align_points\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">align_points</span></code></a></p></td>\n<td><p>Adds points to self and vmobject so that they both have the same number of subpaths, with corresponding subpaths each containing the same number of points.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">align_rgbas</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">append_points</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">append_vectorized_mobject</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">apply_function</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.change_anchor_mode\" title=\"manim.mobject.types.vectorized_mobject.VMobject.change_anchor_mode\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">change_anchor_mode</span></code></a></p></td>\n<td><p>Changes the anchor mode of the bezier curves.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">clear_points</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">close_path</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">color_using_background_image</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">consider_points_equals</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d\" title=\"manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">consider_points_equals_2d</span></code></a></p></td>\n<td><p>Determine if two points are close enough to be considered equal.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">fade</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.force_direction\" title=\"manim.mobject.types.vectorized_mobject.VMobject.force_direction\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">force_direction</span></code></a></p></td>\n<td><p>Makes sure that points are either directed clockwise or counterclockwise.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points\" title=\"manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">gen_cubic_bezier_tuples_from_points</span></code></a></p></td>\n<td><p>Returns the bezier tuples from an array of points.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">gen_subpaths_from_points_2d</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.generate_rgbas_array\" title=\"manim.mobject.types.vectorized_mobject.VMobject.generate_rgbas_array\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">generate_rgbas_array</span></code></a></p></td>\n<td><p>First arg can be either a color, or a tuple/list of colors.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_anchors\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_anchors\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_anchors</span></code></a></p></td>\n<td><p>Returns the anchors of the curves forming the VMobject.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_anchors_and_handles\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_anchors_and_handles\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_anchors_and_handles</span></code></a></p></td>\n<td><p>Returns anchors1, handles1, handles2, anchors2, where (anchors1[i], handles1[i], handles2[i], anchors2[i]) will be four points defining a cubic bezier curve for any i in range(0, len(anchors1))</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_arc_length\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_arc_length\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_arc_length</span></code></a></p></td>\n<td><p>Return the approximated length of the whole curve.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_background_image</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_color\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_color\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_color</span></code></a></p></td>\n<td><p>Returns the color of the <a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_cubic_bezier_tuples</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_cubic_bezier_tuples_from_points</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_curve_functions</span></code></a></p></td>\n<td><p>Gets the functions for the curves of the mobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions_with_lengths\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions_with_lengths\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_curve_functions_with_lengths</span></code></a></p></td>\n<td><p>Gets the functions and lengths of the curves for the mobject.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_direction\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_direction\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_direction</span></code></a></p></td>\n<td><p>Uses <a class=\"reference internal\" href=\"../manim.utils.space_ops/#manim.utils.space_ops.shoelace_direction\" title=\"manim.utils.space_ops.shoelace_direction\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">shoelace_direction()</span></code></a> to calculate the direction.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_end_anchors\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_end_anchors\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_end_anchors</span></code></a></p></td>\n<td><p>Return the end anchors of the bezier curves.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_fill_color\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_fill_color\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_fill_color</span></code></a></p></td>\n<td><p>If there are multiple colors (for gradient) this returns the first one</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_fill_colors</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_fill_opacities</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_fill_opacity\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_fill_opacity\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_fill_opacity</span></code></a></p></td>\n<td><p>If there are multiple opacities, this returns the first</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_fill_rgbas</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_gradient_start_and_end_points</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_group_class</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_last_point</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_mobject_type_class\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_mobject_type_class\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_mobject_type_class</span></code></a></p></td>\n<td><p>Return the base class of this mobject type.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_nth_curve_function</span></code></a></p></td>\n<td><p>Returns the expression of the nth curve.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_nth_curve_function_with_length</span></code></a></p></td>\n<td><p>Returns the expression of the nth curve along with its (approximate) length.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_nth_curve_length</span></code></a></p></td>\n<td><p>Returns the (approximate) length of the nth curve.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length_pieces\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length_pieces\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_nth_curve_length_pieces</span></code></a></p></td>\n<td><p>Returns the array of short line lengths used for length approximation.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_points\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_points\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_nth_curve_points</span></code></a></p></td>\n<td><p>Returns the points defining the nth curve of the vmobject.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_num_curves\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_num_curves\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_num_curves</span></code></a></p></td>\n<td><p>Returns the number of curves of the vmobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_point_mobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_point_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_point_mobject</span></code></a></p></td>\n<td><p>The simplest <a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a> to be transformed to or from self.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_points_defining_boundary</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_sheen_direction</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_sheen_factor</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_start_anchors\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_start_anchors\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_start_anchors</span></code></a></p></td>\n<td><p>Returns the start anchors of the bezier curves.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_stroke_color</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_stroke_colors</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_stroke_opacities</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_stroke_opacity</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_stroke_rgbas</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_stroke_width</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_style</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_subcurve\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_subcurve\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_subcurve</span></code></a></p></td>\n<td><p>Returns the subcurve of the VMobject between the interval [a, b].</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_subpaths\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_subpaths\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_subpaths</span></code></a></p></td>\n<td><p>Returns subpaths formed by the curves of the VMobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_subpaths_from_points</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">has_new_path_started</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.init_colors\" title=\"manim.mobject.types.vectorized_mobject.VMobject.init_colors\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">init_colors</span></code></a></p></td>\n<td><p>Initializes the colors.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves\" title=\"manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">insert_n_curves</span></code></a></p></td>\n<td><p>Inserts n curves to the bezier curves of the vmobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves_to_point_list\" title=\"manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves_to_point_list\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">insert_n_curves_to_point_list</span></code></a></p></td>\n<td><p>Given an array of k points defining a bezier curves (anchors and handles), returns points defining exactly k + n bezier curves.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">interpolate_color</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_closed</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">make_jagged</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">make_smooth</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">match_background_image</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">match_style</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion\" title=\"manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">point_from_proportion</span></code></a></p></td>\n<td><p>Gets the point at a proportion along the path of the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.pointwise_become_partial\" title=\"manim.mobject.types.vectorized_mobject.VMobject.pointwise_become_partial\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">pointwise_become_partial</span></code></a></p></td>\n<td><p>Given two bounds a and b, transforms the points of the self vmobject into the points of the vmobject passed as parameter with respect to the bounds.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point\" title=\"manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">proportion_from_point</span></code></a></p></td>\n<td><p>Returns the proportion along the path of the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a> a particular given point is at.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.resize_points\" title=\"manim.mobject.types.vectorized_mobject.VMobject.resize_points\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">resize_points</span></code></a></p></td>\n<td><p>Resize the array of anchor points and handles to have the specified size.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.reverse_direction\" title=\"manim.mobject.types.vectorized_mobject.VMobject.reverse_direction\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reverse_direction</span></code></a></p></td>\n<td><p>Reverts the point direction by inverting the point order.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.rotate\" title=\"manim.mobject.types.vectorized_mobject.VMobject.rotate\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">rotate</span></code></a></p></td>\n<td><p>Rotates the <a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a> about a certain point.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction\" title=\"manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">rotate_sheen_direction</span></code></a></p></td>\n<td><p>Rotates the direction of the applied sheen.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances\" title=\"manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">scale_handle_to_anchor_distances</span></code></a></p></td>\n<td><p>If the distance between a given handle point H and its associated anchor point A is d, then it changes H to be a distances factor*d away from A, but so that the line from A to H doesn't change.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_anchors_and_handles\" title=\"manim.mobject.types.vectorized_mobject.VMobject.set_anchors_and_handles\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_anchors_and_handles</span></code></a></p></td>\n<td><p>Given two sets of anchors and handles, process them to set them as anchors and handles of the VMobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_background_stroke</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_cap_style\" title=\"manim.mobject.types.vectorized_mobject.VMobject.set_cap_style\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_cap_style</span></code></a></p></td>\n<td><p>Sets the cap style of the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_color\" title=\"manim.mobject.types.vectorized_mobject.VMobject.set_color\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_color</span></code></a></p></td>\n<td><p>Condition is function which takes in one arguments, (x, y, z).</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_fill\" title=\"manim.mobject.types.vectorized_mobject.VMobject.set_fill\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_fill</span></code></a></p></td>\n<td><p>Set the fill color and fill opacity of a <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_opacity</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_points</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_points_as_corners\" title=\"manim.mobject.types.vectorized_mobject.VMobject.set_points_as_corners\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_points_as_corners</span></code></a></p></td>\n<td><p>Given an array of points, set them as corner of the vmobject.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_points_smoothly</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_shade_in_3d</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_sheen\" title=\"manim.mobject.types.vectorized_mobject.VMobject.set_sheen\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_sheen</span></code></a></p></td>\n<td><p>Applies a color gradient from a direction.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction\" title=\"manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_sheen_direction</span></code></a></p></td>\n<td><p>Sets the direction of the applied sheen.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_stroke</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_style</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">start_new_path</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">update_rgbas_array</span></code></p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p class=\"rubric\">Attributes</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">animate</span></code></p></td>\n<td><p>Used to animate the application of any method of <code class=\"code docutils literal notranslate\"><span class=\"pre\">self</span></code>.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">animation_overrides</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">color</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">depth</span></code></p></td>\n<td><p>The depth of the mobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.fill_color\" title=\"manim.mobject.types.vectorized_mobject.VMobject.fill_color\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">fill_color</span></code></a></p></td>\n<td><p>If there are multiple colors (for gradient) this returns the first one</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">height</span></code></p></td>\n<td><p>The height of the mobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">n_points_per_curve</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sheen_factor</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">stroke_color</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">width</span></code></p></td>\n<td><p>The width of the mobject.</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject._gen_subpaths_from_points\">\n<span class=\"sig-name descname\"><span class=\"pre\">_gen_subpaths_from_points</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">points</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">filter_func</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject._gen_subpaths_from_points\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject._gen_subpaths_from_points\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Given an array of points defining the bezier curves of the vmobject, return subpaths formed by these points.\nHere, Two bezier curves form a path if at least two of their anchors are evaluated True by the relation defined by filter_func.</p>\n<p>The algorithm every bezier tuple (anchors and handles) in <code class=\"docutils literal notranslate\"><span class=\"pre\">self.points</span></code> (by regrouping each n elements, where\nn is the number of points per cubic curve)), and evaluate the relation between two anchors with filter_func.\nNOTE : The filter_func takes an int n as parameter, and will evaluate the relation between points[n] and points[n - 1]. This should probably be changed so\nthe function takes two points as parameters.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>points</strong> (<em>Point3D_Array</em>) \u2013 points defining the bezier curve.</p></li>\n<li><p><strong>filter_func</strong> (<em>Callable</em><em>[</em><em>[</em><em>int</em><em>]</em><em>, </em><em>bool</em><em>]</em>) \u2013 Filter-func defining the relation.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>subpaths formed by the points.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Generator[Point3D_Array]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject._original__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">_original__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fill_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fill_opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stroke_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stroke_opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stroke_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">4</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background_stroke_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">ManimColor('#000000')</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background_stroke_opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background_stroke_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sheen_factor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">joint_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sheen_direction</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">array([-1.,</span> <span class=\"pre\">1.,</span> <span class=\"pre\">0.])</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">close_new_points</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pre_function_handle_to_anchor_scale_factor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">make_smooth_after_applying_functions</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background_image</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shade_in_3d</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tolerance_for_point_equality</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1e-06</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n_points_per_cubic_curve</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">4</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cap_style</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">CapStyleType.AUTO</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject._original__init__\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>fill_color</strong> (<em>ParsableManimColor</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>fill_opacity</strong> (<em>float</em>)</p></li>\n<li><p><strong>stroke_color</strong> (<em>ParsableManimColor</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>stroke_opacity</strong> (<em>float</em>)</p></li>\n<li><p><strong>stroke_width</strong> (<em>float</em>)</p></li>\n<li><p><strong>background_stroke_color</strong> (<em>ParsableManimColor</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>background_stroke_opacity</strong> (<em>float</em>)</p></li>\n<li><p><strong>background_stroke_width</strong> (<em>float</em>)</p></li>\n<li><p><strong>sheen_factor</strong> (<em>float</em>)</p></li>\n<li><p><strong>joint_type</strong> (<a class=\"reference internal\" href=\"../manim.constants.LineJointType/#manim.constants.LineJointType\" title=\"manim.constants.LineJointType\"><em>LineJointType</em></a><em> | </em><em>None</em>)</p></li>\n<li><p><strong>sheen_direction</strong> (<em>Vector3D</em>)</p></li>\n<li><p><strong>close_new_points</strong> (<em>bool</em>)</p></li>\n<li><p><strong>pre_function_handle_to_anchor_scale_factor</strong> (<em>float</em>)</p></li>\n<li><p><strong>make_smooth_after_applying_functions</strong> (<em>bool</em>)</p></li>\n<li><p><strong>background_image</strong> (<em>Image</em><em> | </em><em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>shade_in_3d</strong> (<em>bool</em>)</p></li>\n<li><p><strong>tolerance_for_point_equality</strong> (<em>float</em>)</p></li>\n<li><p><strong>n_points_per_cubic_curve</strong> (<em>int</em>)</p></li>\n<li><p><strong>cap_style</strong> (<a class=\"reference internal\" href=\"../manim.constants.CapStyleType/#manim.constants.CapStyleType\" title=\"manim.constants.CapStyleType\"><em>CapStyleType</em></a>)</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_cubic_bezier_curve_to</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">handle1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">handle2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">anchor</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.add_cubic_bezier_curve_to\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Add cubic bezier curve to the path.</p>\n<p>NOTE : the first anchor is not a parameter as by default the end of the last sub-path!</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>handle1</strong> (<em>CubicBezierPoints</em>) \u2013 first handle</p></li>\n<li><p><strong>handle2</strong> (<em>CubicBezierPoints</em>) \u2013 second handle</p></li>\n<li><p><strong>anchor</strong> (<em>CubicBezierPoints</em>) \u2013 anchor</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.add_line_to\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_line_to</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">point</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.add_line_to\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.add_line_to\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Add a straight line from the last point of VMobject to the given point.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>point</strong> (<em>Point3D</em>) \u2013 end of the straight line.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.add_quadratic_bezier_curve_to\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_quadratic_bezier_curve_to</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">handle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">anchor</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.add_quadratic_bezier_curve_to\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.add_quadratic_bezier_curve_to\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Add Quadratic bezier curve to the path.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>handle</strong> (<em>QuadraticBezierPoints</em>)</p></li>\n<li><p><strong>anchor</strong> (<em>QuadraticBezierPoints</em>)</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to\">\n<span class=\"sig-name descname\"><span class=\"pre\">add_smooth_curve_to</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">points</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.add_smooth_curve_to\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Creates a smooth curve from given points and add it to the VMobject. If two points are passed in, the first is interpreted\nas a handle, the second as an anchor.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>points</strong> (<em>Point3D</em>) \u2013 Points (anchor and handle, or just anchor) to add a smooth curve from</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n<dt class=\"field-even\">Raises<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><strong>ValueError</strong> \u2013 If 0 or more than 2 points are given.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.align_points\">\n<span class=\"sig-name descname\"><span class=\"pre\">align_points</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vmobject</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.align_points\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.align_points\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Adds points to self and vmobject so that they both have the same number of subpaths, with\ncorresponding subpaths each containing the same number of points.</p>\n<p>Points are added either by subdividing curves evenly along the subpath, or by creating new subpaths consisting\nof a single point repeated.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>vmobject</strong> (<a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a>) \u2013 The object to align points with.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.change_anchor_mode\">\n<span class=\"sig-name descname\"><span class=\"pre\">change_anchor_mode</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.change_anchor_mode\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.change_anchor_mode\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Changes the anchor mode of the bezier curves. This will modify the handles.</p>\n<p>There can be only two modes, \u201cjagged\u201d, and \u201csmooth\u201d.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>mode</strong> (<em>Literal</em><em>[</em><em>'jagged'</em><em>, </em><em>'smooth'</em><em>]</em>)</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d\">\n<span class=\"sig-name descname\"><span class=\"pre\">consider_points_equals_2d</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">p0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">p1</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.consider_points_equals_2d\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Determine if two points are close enough to be considered equal.</p>\n<p>This uses the algorithm from np.isclose(), but expanded here for the\n2D point case. NumPy is overkill for such a small question.\n:param p0: first point\n:param p1: second point</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>whether two points considered close.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>bool</p>\n</dd>\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>p0</strong> (<em>Point2D</em>)</p></li>\n<li><p><strong>p1</strong> (<em>Point2D</em>)</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.fill_color\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">fill_color</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../manim.utils.color.core.ManimColor/#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\"><span class=\"pre\">ManimColor</span></a></em><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.fill_color\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>If there are multiple colors (for gradient)\nthis returns the first one</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.force_direction\">\n<span class=\"sig-name descname\"><span class=\"pre\">force_direction</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">target_direction</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.force_direction\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.force_direction\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Makes sure that points are either directed clockwise or\ncounterclockwise.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>target_direction</strong> (<em>Literal</em><em>[</em><em>'CW'</em><em>, </em><em>'CCW'</em><em>]</em>) \u2013 Either <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;CW&quot;</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;CCW&quot;</span></code>.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Self</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points\">\n<span class=\"sig-name descname\"><span class=\"pre\">gen_cubic_bezier_tuples_from_points</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">points</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.gen_cubic_bezier_tuples_from_points\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the bezier tuples from an array of points.</p>\n<p>self.points is a list of the anchors and handles of the bezier curves of the mobject (ie [anchor1, handle1, handle2, anchor2, anchor3 ..])\nThis algorithm basically retrieve them by taking an element every n, where n is the number of control points\nof the bezier curve.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>points</strong> (<em>Point3D_Array</em>) \u2013 Points from which control points will be extracted.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Bezier control points.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>tuple</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.generate_rgbas_array\">\n<span class=\"sig-name descname\"><span class=\"pre\">generate_rgbas_array</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.generate_rgbas_array\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.generate_rgbas_array\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>First arg can be either a color, or a tuple/list of colors.\nLikewise, opacity can either be a float, or a tuple of floats.\nIf self.sheen_factor is not zero, and only\none color was passed in, a second slightly light color\nwill automatically be added for the gradient</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>color</strong> (<a class=\"reference internal\" href=\"../manim.utils.color.core.ManimColor/#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\"><em>ManimColor</em></a><em> | </em><em>list</em><em>[</em><a class=\"reference internal\" href=\"../manim.utils.color.core.ManimColor/#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\"><em>ManimColor</em></a><em>]</em>)</p></li>\n<li><p><strong>opacity</strong> (<em>float</em><em> | </em><em>Iterable</em><em>[</em><em>float</em><em>]</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>RGBA_Array_Float</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_anchors\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_anchors</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_anchors\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_anchors\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the anchors of the curves forming the VMobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>The anchors.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Point3D_Array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_anchors_and_handles\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_anchors_and_handles</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_anchors_and_handles\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_anchors_and_handles\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns anchors1, handles1, handles2, anchors2,\nwhere (anchors1[i], handles1[i], handles2[i], anchors2[i])\nwill be four points defining a cubic bezier curve\nfor any i in range(0, len(anchors1))</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Iterable of the anchors and handles.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><cite>list[Point3D_Array]</cite></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_arc_length\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_arc_length</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sample_points_per_curve</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_arc_length\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_arc_length\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Return the approximated length of the whole curve.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>sample_points_per_curve</strong> (<em>int</em><em> | </em><em>None</em>) \u2013 Number of sample points per curve used to approximate the length. More points result in a better approximation.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The length of the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a>.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>float</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_color\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_color</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_color\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_color\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the color of the <a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a></p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">manim</span> <span class=\"kn\">import</span> <span class=\"n\">Square</span><span class=\"p\">,</span> <span class=\"n\">RED</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Square</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">RED</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_color</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">RED</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../manim.utils.color.core.ManimColor/#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\"><em>ManimColor</em></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_curve_functions</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_curve_functions\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets the functions for the curves of the mobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>The functions for the curves.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Generator[Callable[[float], Point3D]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions_with_lengths\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_curve_functions_with_lengths</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_curve_functions_with_lengths\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions_with_lengths\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets the functions and lengths of the curves for the mobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>**kwargs</strong> \u2013 The keyword arguments passed to <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length\" title=\"manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_nth_curve_function_with_length()</span></code></a></p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The functions and lengths of the curves.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Generator[tuple[Callable[[float], Point3D], float]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_direction\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_direction</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_direction\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_direction\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Uses <a class=\"reference internal\" href=\"../manim.utils.space_ops/#manim.utils.space_ops.shoelace_direction\" title=\"manim.utils.space_ops.shoelace_direction\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">shoelace_direction()</span></code></a> to calculate the direction.\nThe direction of points determines in which direction the\nobject is drawn, clockwise or counterclockwise.</p>\n<p class=\"rubric\">Examples</p>\n<p>The default direction of a <a class=\"reference internal\" href=\"../manim.mobject.geometry.arc.Circle/#manim.mobject.geometry.arc.Circle\" title=\"manim.mobject.geometry.arc.Circle\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Circle</span></code></a> is counterclockwise:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">manim</span> <span class=\"kn\">import</span> <span class=\"n\">Circle</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Circle</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_direction</span><span class=\"p\">()</span>\n<span class=\"go\">&#39;CCW&#39;</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Either <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;CW&quot;</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;CCW&quot;</span></code>.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_end_anchors\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_end_anchors</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_end_anchors\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_end_anchors\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Return the end anchors of the bezier curves.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Starting anchors</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Point3D_Array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_fill_color\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_fill_color</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_fill_color\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_fill_color\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>If there are multiple colors (for gradient)\nthis returns the first one</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../manim.utils.color.core.ManimColor/#manim.utils.color.core.ManimColor\" title=\"manim.utils.color.core.ManimColor\"><em>ManimColor</em></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_fill_opacity\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_fill_opacity</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_fill_opacity\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_fill_opacity\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>If there are multiple opacities, this returns the\nfirst</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><em>ManimFloat</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_mobject_type_class\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">get_mobject_type_class</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_mobject_type_class\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_mobject_type_class\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Return the base class of this mobject type.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>type[<a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_nth_curve_function</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_nth_curve_function\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the expression of the nth curve.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>n</strong> (<em>int</em>) \u2013 index of the desired curve.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>expression of the nth bezier curve.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Callable[float, Point3D]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_nth_curve_function_with_length</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sample_points</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_nth_curve_function_with_length\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the expression of the nth curve along with its (approximate) length.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>n</strong> (<em>int</em>) \u2013 The index of the desired curve.</p></li>\n<li><p><strong>sample_points</strong> (<em>int</em><em> | </em><em>None</em>) \u2013 The number of points to sample to find the length.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><ul class=\"simple\">\n<li><p><strong>curve</strong> (<em>Callable[[float], Point3D]</em>) \u2013 The function for the nth curve.</p></li>\n<li><p><strong>length</strong> (<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">float</span></code>) \u2013 The length of the nth curve.</p></li>\n</ul>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>tuple[<em>Callable</em>[[float], <em>Point3D</em>], float]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_nth_curve_length</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sample_points</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_nth_curve_length\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the (approximate) length of the nth curve.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>n</strong> (<em>int</em>) \u2013 The index of the desired curve.</p></li>\n<li><p><strong>sample_points</strong> (<em>int</em><em> | </em><em>None</em>) \u2013 The number of points to sample to find the length.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><strong>length</strong> \u2013 The length of the nth curve.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">float</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length_pieces\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_nth_curve_length_pieces</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sample_points</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_nth_curve_length_pieces\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length_pieces\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the array of short line lengths used for length approximation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>n</strong> (<em>int</em>) \u2013 The index of the desired curve.</p></li>\n<li><p><strong>sample_points</strong> (<em>int</em><em> | </em><em>None</em>) \u2013 The number of points to sample to find the length.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The short length-pieces of the nth curve.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_points\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_nth_curve_points</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_nth_curve_points\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_points\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the points defining the nth curve of the vmobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>n</strong> (<em>int</em>) \u2013 index of the desired bezier curve.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>points defining the nth bezier curve (anchors, handles)</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Point3D_Array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_num_curves\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_num_curves</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_num_curves\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_num_curves\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the number of curves of the vmobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>number of curves of the vmobject.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>int</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_point_mobject\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_point_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">center</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_point_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_point_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>The simplest <a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a> to be transformed to or from self.\nShould by a point of the appropriate type</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>center</strong> (<em>Point3D</em><em> | </em><em>None</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VectorizedPoint/#manim.mobject.types.vectorized_mobject.VectorizedPoint\" title=\"manim.mobject.types.vectorized_mobject.VectorizedPoint\">VectorizedPoint</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_start_anchors\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_start_anchors</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_start_anchors\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_start_anchors\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the start anchors of the bezier curves.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Starting anchors</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Point3D_Array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_subcurve\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_subcurve</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">a</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_subcurve\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_subcurve\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the subcurve of the VMobject between the interval [a, b].\nThe curve is a VMobject itself.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>a</strong> (<em>float</em>) \u2013 The lower bound.</p></li>\n<li><p><strong>b</strong> (<em>float</em>) \u2013 The upper bound.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The subcurve between of [a, b]</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\">VMobject</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.get_subpaths\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_subpaths</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.get_subpaths\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_subpaths\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns subpaths formed by the curves of the VMobject.</p>\n<p>Subpaths are ranges of curves with each pair of consecutive curves having their end/start points coincident.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>subpaths.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>list[Point3D_Array]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.init_colors\">\n<span class=\"sig-name descname\"><span class=\"pre\">init_colors</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">propagate_colors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.init_colors\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.init_colors\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Initializes the colors.</p>\n<p>Gets called upon creation. This is an empty method that can be implemented by\nsubclasses.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>propagate_colors</strong> (<em>bool</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Self</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves\">\n<span class=\"sig-name descname\"><span class=\"pre\">insert_n_curves</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.insert_n_curves\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Inserts n curves to the bezier curves of the vmobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>n</strong> (<em>int</em>) \u2013 Number of curves to insert.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves_to_point_list\">\n<span class=\"sig-name descname\"><span class=\"pre\">insert_n_curves_to_point_list</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">points</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.insert_n_curves_to_point_list\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves_to_point_list\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Given an array of k points defining a bezier curves (anchors and handles), returns points defining exactly k + n bezier curves.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>n</strong> (<em>int</em>) \u2013 Number of desired curves.</p></li>\n<li><p><strong>points</strong> (<em>Point3D_Array</em>) \u2013 Starting points.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Points generated.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion\">\n<span class=\"sig-name descname\"><span class=\"pre\">point_from_proportion</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.point_from_proportion\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets the point at a proportion along the path of the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>alpha</strong> (<em>float</em>) \u2013 The proportion along the the path of the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a>.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The point on the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a>.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">numpy.ndarray</span></code></p>\n</dd>\n<dt class=\"field-even\">Raises<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><ul class=\"simple\">\n<li><p><strong>ValueError</strong> \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">alpha</span></code> is not between 0 and 1.</p></li>\n<li><p><strong>Exception</strong> \u2013 If the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a> has no points.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.pointwise_become_partial\">\n<span class=\"sig-name descname\"><span class=\"pre\">pointwise_become_partial</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vmobject</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">a</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">b</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.pointwise_become_partial\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.pointwise_become_partial\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Given two bounds a and b, transforms the points of the self vmobject into the points of the vmobject\npassed as parameter with respect to the bounds. Points here stand for control points of the bezier curves (anchors and handles)</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>vmobject</strong> (<a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a>) \u2013 The vmobject that will serve as a model.</p></li>\n<li><p><strong>a</strong> (<em>float</em>) \u2013 upper-bound.</p></li>\n<li><p><strong>b</strong> (<em>float</em>) \u2013 lower-bound</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point\">\n<span class=\"sig-name descname\"><span class=\"pre\">proportion_from_point</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">point</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.proportion_from_point\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the proportion along the path of the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a>\na particular given point is at.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>point</strong> (<em>Iterable</em><em>[</em><em>float</em><em> | </em><em>int</em><em>]</em>) \u2013 The Cartesian coordinates of the point which may or may not lie on the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The proportion along the path of the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a>.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>float</p>\n</dd>\n<dt class=\"field-even\">Raises<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><ul class=\"simple\">\n<li><p><strong>ValueError</strong> \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">point</span></code> does not lie on the curve.</p></li>\n<li><p><strong>Exception</strong> \u2013 If the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a> has no points.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.resize_points\">\n<span class=\"sig-name descname\"><span class=\"pre\">resize_points</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">new_length</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">resize_func=&lt;function</span> <span class=\"pre\">resize_array&gt;</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.resize_points\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.resize_points\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Resize the array of anchor points and handles to have\nthe specified size.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>new_length</strong> (<em>int</em>) \u2013 The new (total) number of points.</p></li>\n<li><p><strong>resize_func</strong> (<em>Callable</em><em>[</em><em>[</em><em>Point3D</em><em>, </em><em>int</em><em>]</em><em>, </em><em>Point3D</em><em>]</em>) \u2013 A function mapping a Numpy array (the points) and an integer\n(the target size) to a Numpy array. The default implementation\nis based on Numpy\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">resize</span></code> function.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Self</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.reverse_direction\">\n<span class=\"sig-name descname\"><span class=\"pre\">reverse_direction</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.reverse_direction\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.reverse_direction\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Reverts the point direction by inverting the point order.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Returns self.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.rotate\">\n<span class=\"sig-name descname\"><span class=\"pre\">rotate</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">array([0.,</span> <span class=\"pre\">0.,</span> <span class=\"pre\">1.])</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">about_point</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.rotate\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.rotate\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Rotates the <a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a> about a certain point.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>angle</strong> (<em>float</em>)</p></li>\n<li><p><strong>axis</strong> (<em>Vector3D</em>)</p></li>\n<li><p><strong>about_point</strong> (<em>Point3D</em><em> | </em><em>None</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Self</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction\">\n<span class=\"sig-name descname\"><span class=\"pre\">rotate_sheen_direction</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">angle</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">array([0.,</span> <span class=\"pre\">0.,</span> <span class=\"pre\">1.])</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">family</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.rotate_sheen_direction\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Rotates the direction of the applied sheen.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>angle</strong> (<em>float</em>) \u2013 Angle by which the direction of sheen is rotated.</p></li>\n<li><p><strong>axis</strong> (<em>Vector3D</em>) \u2013 Axis of rotation.</p></li>\n<li><p><strong>family</strong> (<em>bool</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Self</p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Circle</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_sheen_direction</span><span class=\"p\">(</span><span class=\"n\">UP</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">rotate_sheen_direction</span><span class=\"p\">(</span><span class=\"n\">PI</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction\" title=\"manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">set_sheen_direction()</span></code></a></p>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances\">\n<span class=\"sig-name descname\"><span class=\"pre\">scale_handle_to_anchor_distances</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">factor</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.scale_handle_to_anchor_distances\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>If the distance between a given handle point H and its associated\nanchor point A is d, then it changes H to be a distances factor*d\naway from A, but so that the line from A to H doesn\u2019t change.\nThis is mostly useful in the context of applying a (differentiable)\nfunction, to preserve tangency properties.  One would pull all the\nhandles closer to their anchors, apply the function then push them out\nagain.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>factor</strong> (<em>float</em>) \u2013 The factor used for scaling.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.set_anchors_and_handles\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_anchors_and_handles</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">anchors1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">handles1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">handles2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">anchors2</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.set_anchors_and_handles\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_anchors_and_handles\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Given two sets of anchors and handles, process them to set them as anchors\nand handles of the VMobject.</p>\n<p>anchors1[i], handles1[i], handles2[i] and anchors2[i] define the i-th bezier\ncurve of the vmobject. There are four hardcoded parameters and this is a\nproblem as it makes the number of points per cubic curve unchangeable from 4\n(two anchors and two handles).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>anchors1</strong> (<em>CubicBezierPoints</em>)</p></li>\n<li><p><strong>handles1</strong> (<em>CubicBezierPoints</em>)</p></li>\n<li><p><strong>handles2</strong> (<em>CubicBezierPoints</em>)</p></li>\n<li><p><strong>anchors2</strong> (<em>CubicBezierPoints</em>)</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.set_cap_style\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_cap_style</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cap_style</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.set_cap_style\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_cap_style\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Sets the cap style of the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>cap_style</strong> (<a class=\"reference internal\" href=\"../manim.constants.CapStyleType/#manim.constants.CapStyleType\" title=\"manim.constants.CapStyleType\"><em>CapStyleType</em></a>) \u2013 The cap style to be set. See <a class=\"reference internal\" href=\"../manim.constants.CapStyleType/#manim.constants.CapStyleType\" title=\"manim.constants.CapStyleType\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CapStyleType</span></code></a> for options.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.set_color\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_color</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">family</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.set_color\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_color\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Condition is function which takes in one arguments, (x, y, z).\nHere it just recurses to submobjects, but in subclasses this\nshould be further implemented based on the the inner workings\nof color</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>color</strong> (<em>ParsableManimColor</em>)</p></li>\n<li><p><strong>family</strong> (<em>bool</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Self</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.set_fill\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_fill</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">family</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.set_fill\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_fill\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Set the fill color and fill opacity of a <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>color</strong> (<em>ParsableManimColor</em><em> | </em><em>None</em>) \u2013 Fill color of the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a>.</p></li>\n<li><p><strong>opacity</strong> (<em>float</em><em> | </em><em>None</em>) \u2013 Fill opacity of the <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a>.</p></li>\n<li><p><strong>family</strong> (<em>bool</em>) \u2013 If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, the fill color of all submobjects is also set.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<p><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">set_style()</span></code></p>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.set_points_as_corners\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_points_as_corners</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">points</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.set_points_as_corners\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_points_as_corners\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Given an array of points, set them as corner of the vmobject.</p>\n<p>To achieve that, this algorithm sets handles aligned with the anchors such that the resultant bezier curve will be the segment\nbetween the two anchors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>points</strong> (<em>Point3D_Array</em>) \u2013 Array of points that will be set as corners.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.set_sheen\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_sheen</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">factor</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">direction</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">family</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.set_sheen\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_sheen\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Applies a color gradient from a direction.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>factor</strong> (<em>float</em>) \u2013 The extent of lustre/gradient to apply. If negative, the gradient\nstarts from black, if positive the gradient starts from white and\nchanges to the current color.</p></li>\n<li><p><strong>direction</strong> (<em>Vector3D</em><em> | </em><em>None</em>) \u2013 Direction from where the gradient is applied.</p></li>\n<li><p><strong>family</strong> (<em>bool</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Self</p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_sheen_direction</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">direction</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">family</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/types/vectorized_mobject/#VMobject.set_sheen_direction\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Sets the direction of the applied sheen.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>direction</strong> (<em>Vector3D</em>) \u2013 Direction from where the gradient is applied.</p></li>\n<li><p><strong>family</strong> (<em>bool</em>)</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Self</p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p>Normal usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Circle</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_sheen_direction</span><span class=\"p\">(</span><span class=\"n\">UP</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<p><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_sheen\" title=\"manim.mobject.types.vectorized_mobject.VMobject.set_sheen\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">set_sheen()</span></code></a>, <a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction\" title=\"manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">rotate_sheen_direction()</span></code></a></p>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/manim.mobject.types.vectorized_mobject.VectorizedPoint", "VectorizedPoint", "N", "next"], ["reference/manim.mobject.types.vectorized_mobject.VGroup", "VGroup", "P", "previous"]], "sourcename": "reference/manim.mobject.types.vectorized_mobject.VMobject.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">VMobject</a><ul>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject._gen_subpaths_from_points\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject._gen_subpaths_from_points()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject._original__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject._original__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.add_cubic_bezier_curve_to\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.add_cubic_bezier_curve_to()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.add_line_to\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.add_line_to()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.add_quadratic_bezier_curve_to\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.add_quadratic_bezier_curve_to()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.add_smooth_curve_to\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.add_smooth_curve_to()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.align_points\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.align_points()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.change_anchor_mode\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.change_anchor_mode()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.consider_points_equals_2d\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.consider_points_equals_2d()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.fill_color\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.fill_color</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.force_direction\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.force_direction()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.gen_cubic_bezier_tuples_from_points\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.gen_cubic_bezier_tuples_from_points()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.generate_rgbas_array\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.generate_rgbas_array()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_anchors\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_anchors()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_anchors_and_handles\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_anchors_and_handles()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_arc_length\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_arc_length()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_color\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_color()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_curve_functions()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_curve_functions_with_lengths\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_curve_functions_with_lengths()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_direction\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_direction()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_end_anchors\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_end_anchors()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_fill_color\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_fill_color()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_fill_opacity\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_fill_opacity()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_mobject_type_class\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_mobject_type_class()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_nth_curve_function()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_function_with_length\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_nth_curve_function_with_length()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_nth_curve_length()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_length_pieces\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_nth_curve_length_pieces()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_nth_curve_points\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_nth_curve_points()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_num_curves\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_num_curves()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_point_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_point_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_start_anchors\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_start_anchors()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_subcurve\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_subcurve()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.get_subpaths\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.get_subpaths()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.init_colors\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.init_colors()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.insert_n_curves()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.insert_n_curves_to_point_list\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.insert_n_curves_to_point_list()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.point_from_proportion\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.point_from_proportion()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.pointwise_become_partial\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.pointwise_become_partial()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.proportion_from_point\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.proportion_from_point()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.resize_points\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.resize_points()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.reverse_direction\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.reverse_direction()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.rotate\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.rotate()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.rotate_sheen_direction\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.rotate_sheen_direction()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.scale_handle_to_anchor_distances\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.scale_handle_to_anchor_distances()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_anchors_and_handles\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.set_anchors_and_handles()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_cap_style\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.set_cap_style()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_color\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.set_color()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_fill\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.set_fill()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_points_as_corners\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.set_points_as_corners()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_sheen\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.set_sheen()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.types.vectorized_mobject.VMobject.set_sheen_direction\"><code class=\"docutils literal notranslate\"><span class=\"pre\">VMobject.set_sheen_direction()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/manim.mobject.types.vectorized_mobject.VMobject", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "furo_version": "2024.08.06", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#202020", "foreground": "#d0d0d0"}}}