{"parents": [{"link": "../", "title": "Reference Manual"}, {"link": "../../reference_index/animations/", "title": "Animations"}, {"link": "../manim.animation.animation/", "title": "animation"}], "prev": {"link": "../manim.animation.animation/", "title": "animation"}, "next": {"link": "../manim.animation.animation.Wait/", "title": "Wait"}, "title": "Animation", "meta": {}, "body": "<section id=\"animation\">\n<h1>Animation<a class=\"headerlink\" href=\"#animation\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Qualified name: <code class=\"docutils literal notranslate\"><span class=\"pre\">manim.animation.animation.Animation</span></code></p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">Animation</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mobject</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_override</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<p>An animation.</p>\n<p>Animations have a fixed time span.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>mobject</strong> \u2013 The mobject to be animated. This is not required for all types of animations.</p></li>\n<li><p><strong>lag_ratio</strong> \u2013 <p>Defines the delay after which the animation is applied to submobjects. This lag\nis relative to the duration of the animation.</p>\n<p>This does not influence the total\nruntime of the animation. Instead the runtime of individual animations is\nadjusted so that the complete animation has the defined run time.</p>\n</p></li>\n<li><p><strong>run_time</strong> \u2013 The duration of the animation in seconds.</p></li>\n<li><p><strong>rate_func</strong> \u2013 <p>The function defining the animation progress based on the relative runtime (see  <a class=\"reference internal\" href=\"../manim.utils.rate_functions/#module-manim.utils.rate_functions\" title=\"manim.utils.rate_functions\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rate_functions</span></code></a>) .</p>\n<p>For example <code class=\"docutils literal notranslate\"><span class=\"pre\">rate_func(0.5)</span></code> is the proportion of the animation that is done\nafter half of the animations run time.</p>\n</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Self</p>\n</dd>\n</dl>\n<dl class=\"simple\">\n<dt>reverse_rate_function</dt><dd><p>Reverses the rate function of the animation. Setting <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_rate_function</span></code>\ndoes not have any effect on <code class=\"docutils literal notranslate\"><span class=\"pre\">remover</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">introducer</span></code>. These need to be\nset explicitly if an introducer-animation should be turned into a remover one\nand vice versa.</p>\n</dd>\n<dt>name</dt><dd><p>The name of the animation. This gets displayed while rendering the animation.\nDefaults to &lt;class-name&gt;(&lt;Mobject-name&gt;).</p>\n</dd>\n<dt>remover</dt><dd><p>Whether the given mobject should be removed from the scene after this animation.</p>\n</dd>\n<dt>suspend_mobject_updating</dt><dd><p>Whether updaters of the mobject should be suspended during the animation.</p>\n</dd>\n</dl>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>In the current implementation of this class, the specified rate function is applied\nwithin <a class=\"reference internal\" href=\"#manim.animation.animation.Animation.interpolate_mobject\" title=\"manim.animation.animation.Animation.interpolate_mobject\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Animation.interpolate_mobject()</span></code></a> call as part of the call to\n<code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Animation.interpolate_submobject()</span></code>. For subclasses of <a class=\"reference internal\" href=\"#manim.animation.animation.Animation\" title=\"manim.animation.animation.Animation\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Animation</span></code></a>\nthat are implemented by overriding <a class=\"reference internal\" href=\"#manim.animation.animation.Animation.interpolate_mobject\" title=\"manim.animation.animation.Animation.interpolate_mobject\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">interpolate_mobject()</span></code></a>, the rate function\nhas to be applied manually (e.g., by passing <code class=\"docutils literal notranslate\"><span class=\"pre\">self.rate_func(alpha)</span></code> instead\nof just <code class=\"docutils literal notranslate\"><span class=\"pre\">alpha</span></code>).</p>\n</div>\n<p class=\"rubric\">Examples</p>\n<p class=\"rubric\">Methods</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.begin\" title=\"manim.animation.animation.Animation.begin\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">begin</span></code></a></p></td>\n<td><p>Begin the animation.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.clean_up_from_scene\" title=\"manim.animation.animation.Animation.clean_up_from_scene\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">clean_up_from_scene</span></code></a></p></td>\n<td><p>Clean up the <a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene\" title=\"manim.scene.scene.Scene\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Scene</span></code></a> after finishing the animation.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.copy\" title=\"manim.animation.animation.Animation.copy\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">copy</span></code></a></p></td>\n<td><p>Create a copy of the animation.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">create_starting_mobject</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.finish\" title=\"manim.animation.animation.Animation.finish\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">finish</span></code></a></p></td>\n<td><p>Finish the animation.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_all_families_zipped</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.get_all_mobjects\" title=\"manim.animation.animation.Animation.get_all_mobjects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_all_mobjects</span></code></a></p></td>\n<td><p>Get all mobjects involved in the animation.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.get_all_mobjects_to_update\" title=\"manim.animation.animation.Animation.get_all_mobjects_to_update\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_all_mobjects_to_update</span></code></a></p></td>\n<td><p>Get all mobjects to be updated during the animation.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.get_rate_func\" title=\"manim.animation.animation.Animation.get_rate_func\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_rate_func</span></code></a></p></td>\n<td><p>Get the rate function of the animation.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.get_run_time\" title=\"manim.animation.animation.Animation.get_run_time\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_run_time</span></code></a></p></td>\n<td><p>Get the run time of the animation.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.get_sub_alpha\" title=\"manim.animation.animation.Animation.get_sub_alpha\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_sub_alpha</span></code></a></p></td>\n<td><p>Get the animation progress of any submobjects subanimation.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.interpolate\" title=\"manim.animation.animation.Animation.interpolate\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">interpolate</span></code></a></p></td>\n<td><p>Set the animation progress.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.interpolate_mobject\" title=\"manim.animation.animation.Animation.interpolate_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">interpolate_mobject</span></code></a></p></td>\n<td><p>Interpolates the mobject of the <a class=\"reference internal\" href=\"#manim.animation.animation.Animation\" title=\"manim.animation.animation.Animation\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Animation</span></code></a> based on alpha value.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">interpolate_submobject</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.is_introducer\" title=\"manim.animation.animation.Animation.is_introducer\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_introducer</span></code></a></p></td>\n<td><p>Test if the animation is an introducer.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.is_remover\" title=\"manim.animation.animation.Animation.is_remover\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_remover</span></code></a></p></td>\n<td><p>Test if the animation is a remover.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.set_name\" title=\"manim.animation.animation.Animation.set_name\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_name</span></code></a></p></td>\n<td><p>Set the name of the animation.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.set_rate_func\" title=\"manim.animation.animation.Animation.set_rate_func\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_rate_func</span></code></a></p></td>\n<td><p>Set the rate function of the animation.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.set_run_time\" title=\"manim.animation.animation.Animation.set_run_time\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_run_time</span></code></a></p></td>\n<td><p>Set the run time of the animation.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.update_mobjects\" title=\"manim.animation.animation.Animation.update_mobjects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">update_mobjects</span></code></a></p></td>\n<td><p>Updates things like starting_mobject, and (for Transforms) target_mobject.</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation._setup_scene\">\n<span class=\"sig-name descname\"><span class=\"pre\">_setup_scene</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scene</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation._setup_scene\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation._setup_scene\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Setup up the <a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene\" title=\"manim.scene.scene.Scene\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Scene</span></code></a> before starting the animation.</p>\n<p>This includes to <a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene.add\" title=\"manim.scene.scene.Scene.add\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">add()</span></code></a> the Animation\u2019s\n<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a> if the animation is an introducer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>scene</strong> (<a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene\" title=\"manim.scene.scene.Scene\"><em>Scene</em></a>) \u2013 The scene the animation should be cleaned up from.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>None</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.begin\">\n<span class=\"sig-name descname\"><span class=\"pre\">begin</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.begin\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.begin\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Begin the animation.</p>\n<p>This method is called right as an animation is being played. As much\ninitialization as possible, especially any mobject copying, should live in this\nmethod.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>None</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.clean_up_from_scene\">\n<span class=\"sig-name descname\"><span class=\"pre\">clean_up_from_scene</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scene</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.clean_up_from_scene\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.clean_up_from_scene\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Clean up the <a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene\" title=\"manim.scene.scene.Scene\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Scene</span></code></a> after finishing the animation.</p>\n<p>This includes to <a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene.remove\" title=\"manim.scene.scene.Scene.remove\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">remove()</span></code></a> the Animation\u2019s\n<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a> if the animation is a remover.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>scene</strong> (<a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene\" title=\"manim.scene.scene.Scene\"><em>Scene</em></a>) \u2013 The scene the animation should be cleaned up from.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>None</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.copy\">\n<span class=\"sig-name descname\"><span class=\"pre\">copy</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.copy\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.copy\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Create a copy of the animation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>A copy of <code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation\" title=\"manim.animation.animation.Animation\">Animation</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.finish\">\n<span class=\"sig-name descname\"><span class=\"pre\">finish</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.finish\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.finish\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Finish the animation.</p>\n<p>This method gets called when the animation is over.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>None</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.get_all_mobjects\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_all_mobjects</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.get_all_mobjects\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.get_all_mobjects\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Get all mobjects involved in the animation.</p>\n<p>Ordering must match the ordering of arguments to interpolate_submobject</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>The sequence of mobjects.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Sequence[<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\">Mobject</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.get_all_mobjects_to_update\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_all_mobjects_to_update</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.get_all_mobjects_to_update\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.get_all_mobjects_to_update\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Get all mobjects to be updated during the animation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>The list of mobjects to be updated during the animation.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>List[<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\">Mobject</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.get_rate_func\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_rate_func</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.get_rate_func\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.get_rate_func\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Get the rate function of the animation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>The rate function of the animation.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Callable[[float], float]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.get_run_time\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_run_time</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.get_run_time\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.get_run_time\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Get the run time of the animation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>The time the animation takes in seconds.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>float</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.get_sub_alpha\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_sub_alpha</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">index</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_submobjects</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.get_sub_alpha\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.get_sub_alpha\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Get the animation progress of any submobjects subanimation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>alpha</strong> (<em>float</em>) \u2013 The overall animation progress</p></li>\n<li><p><strong>index</strong> (<em>int</em>) \u2013 The index of the subanimation.</p></li>\n<li><p><strong>num_submobjects</strong> (<em>int</em>) \u2013 The total count of subanimations.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The progress of the subanimation.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>float</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.interpolate\">\n<span class=\"sig-name descname\"><span class=\"pre\">interpolate</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.interpolate\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.interpolate\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Set the animation progress.</p>\n<p>This method gets called for every frame during an animation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>alpha</strong> (<em>float</em>) \u2013 The relative time to set the animation to, 0 meaning the start, 1 meaning\nthe end.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>None</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.interpolate_mobject\">\n<span class=\"sig-name descname\"><span class=\"pre\">interpolate_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">alpha</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.interpolate_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.interpolate_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Interpolates the mobject of the <a class=\"reference internal\" href=\"#manim.animation.animation.Animation\" title=\"manim.animation.animation.Animation\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Animation</span></code></a> based on alpha value.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>alpha</strong> (<em>float</em>) \u2013 A float between 0 and 1 expressing the ratio to which the animation\nis completed. For example, alpha-values of 0, 0.5, and 1 correspond\nto the animation being completed 0%, 50%, and 100%, respectively.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>None</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.is_introducer\">\n<span class=\"sig-name descname\"><span class=\"pre\">is_introducer</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.is_introducer\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.is_introducer\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Test if the animation is an introducer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the animation is an introducer, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> otherwise.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>bool</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.is_remover\">\n<span class=\"sig-name descname\"><span class=\"pre\">is_remover</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.is_remover\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.is_remover\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Test if the animation is a remover.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the animation is a remover, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> otherwise.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>bool</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.set_name\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_name</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.set_name\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.set_name\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Set the name of the animation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>name</strong> (<em>str</em>) \u2013 The new name of the animation.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation\" title=\"manim.animation.animation.Animation\">Animation</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.set_rate_func\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_rate_func</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rate_func</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.set_rate_func\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.set_rate_func\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Set the rate function of the animation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>rate_func</strong> (<em>Callable</em><em>[</em><em>[</em><em>float</em><em>]</em><em>, </em><em>float</em><em>]</em>) \u2013 The new function defining the animation progress based on the\nrelative runtime (see <a class=\"reference internal\" href=\"../manim.utils.rate_functions/#module-manim.utils.rate_functions\" title=\"manim.utils.rate_functions\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rate_functions</span></code></a>).</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation\" title=\"manim.animation.animation.Animation\">Animation</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.set_run_time\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_run_time</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">run_time</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.set_run_time\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.set_run_time\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Set the run time of the animation.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>run_time</strong> (<em>float</em>) \u2013 The new time the animation should take in seconds.</p></li>\n<li><p><strong>note::</strong> (<em>..</em>) \u2013 The run_time of an animation should not be changed while it is already\nrunning.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code></p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.animation.animation.Animation\" title=\"manim.animation.animation.Animation\">Animation</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.animation.Animation.update_mobjects\">\n<span class=\"sig-name descname\"><span class=\"pre\">update_mobjects</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dt</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/animation/#Animation.update_mobjects\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.animation.Animation.update_mobjects\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Updates things like starting_mobject, and (for\nTransforms) target_mobject.  Note, since typically\n(always?) self.mobject will have its updating\nsuspended during the animation, this will do\nnothing to self.mobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>dt</strong> (<em>float</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>None</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/manim.animation.animation.Wait", "Wait", "N", "next"], ["reference/manim.animation.animation", "animation", "P", "previous"]], "sourcename": "reference/manim.animation.animation.Animation.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Animation</a><ul>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation._setup_scene\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation._setup_scene()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.begin\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.begin()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.clean_up_from_scene\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.clean_up_from_scene()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.copy\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.copy()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.finish\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.finish()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.get_all_mobjects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.get_all_mobjects()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.get_all_mobjects_to_update\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.get_all_mobjects_to_update()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.get_rate_func\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.get_rate_func()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.get_run_time\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.get_run_time()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.get_sub_alpha\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.get_sub_alpha()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.interpolate\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.interpolate()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.interpolate_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.interpolate_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.is_introducer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.is_introducer()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.is_remover\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.is_remover()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.set_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.set_name()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.set_rate_func\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.set_rate_func()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.set_run_time\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.set_run_time()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.animation.animation.Animation.update_mobjects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Animation.update_mobjects()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/manim.animation.animation.Animation", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "furo_version": "2024.08.06", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#202020", "foreground": "#d0d0d0"}}}