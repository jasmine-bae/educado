{"parents": [{"link": "../", "title": "Reference Manual"}, {"link": "../../reference_index/animations/", "title": "Animations"}, {"link": "../manim.animation.transform_matching_parts/", "title": "transform_matching_parts"}], "prev": {"link": "../manim.animation.transform_matching_parts/", "title": "transform_matching_parts"}, "next": {"link": "../manim.animation.transform_matching_parts.TransformMatchingShapes/", "title": "TransformMatchingShapes"}, "title": "TransformMatchingAbstractBase", "meta": {}, "body": "<section id=\"transformmatchingabstractbase\">\n<h1>TransformMatchingAbstractBase<a class=\"headerlink\" href=\"#transformmatchingabstractbase\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Qualified name: <code class=\"docutils literal notranslate\"><span class=\"pre\">manim.animation.transform\\_matching\\_parts.TransformMatchingAbstractBase</span></code></p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.transform_matching_parts.TransformMatchingAbstractBase\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">TransformMatchingAbstractBase</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mobject</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_override</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/transform_matching_parts/#TransformMatchingAbstractBase\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.transform_matching_parts.TransformMatchingAbstractBase\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../manim.animation.composition.AnimationGroup/#manim.animation.composition.AnimationGroup\" title=\"manim.animation.composition.AnimationGroup\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AnimationGroup</span></code></a></p>\n<p>Abstract base class for transformations that keep track of matching parts.</p>\n<p>Subclasses have to implement the two static methods\n<code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_mobject_parts()</span></code> and\n<code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_mobject_key()</span></code>.</p>\n<p>Basically, this transformation first maps all submobjects returned\nby the <code class=\"docutils literal notranslate\"><span class=\"pre\">get_mobject_parts</span></code> method to certain keys by applying the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">get_mobject_key</span></code> method. Then, submobjects with matching keys\nare transformed into each other.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>mobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a>) \u2013 The starting <a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a>.</p></li>\n<li><p><strong>target_mobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a>) \u2013 The target <a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a>.</p></li>\n<li><p><strong>transform_mismatches</strong> (<em>bool</em>) \u2013 Controls whether submobjects without a matching key are transformed\ninto each other by using <a class=\"reference internal\" href=\"../manim.animation.transform.Transform/#manim.animation.transform.Transform\" title=\"manim.animation.transform.Transform\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Transform</span></code></a>. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p></li>\n<li><p><strong>fade_transform_mismatches</strong> (<em>bool</em>) \u2013 Controls whether submobjects without a matching key are transformed\ninto each other by using <a class=\"reference internal\" href=\"../manim.animation.transform.FadeTransform/#manim.animation.transform.FadeTransform\" title=\"manim.animation.transform.FadeTransform\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FadeTransform</span></code></a>. Default: <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p></li>\n<li><p><strong>key_map</strong> (<em>dict</em><em> | </em><em>None</em>) \u2013 Optional. A dictionary mapping keys belonging to some of the starting mobject\u2019s\nsubmobjects (i.e., the return values of the <code class=\"docutils literal notranslate\"><span class=\"pre\">get_mobject_key</span></code> method)\nto some keys belonging to the target mobject\u2019s submobjects that should\nbe transformed although the keys don\u2019t match.</p></li>\n<li><p><strong>kwargs</strong> \u2013 All further keyword arguments are passed to the submobject transformations.</p></li>\n</ul>\n</dd>\n</dl>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>If neither <code class=\"docutils literal notranslate\"><span class=\"pre\">transform_mismatches</span></code> nor <code class=\"docutils literal notranslate\"><span class=\"pre\">fade_transform_mismatches</span></code>\nare set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, submobjects without matching keys in the starting\nmobject are faded out in the direction of the unmatched submobjects in\nthe target mobject, and unmatched submobjects in the target mobject\nare faded in from the direction of the unmatched submobjects in the\nstart mobject.</p>\n</div>\n<p class=\"rubric\">Methods</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.animation.transform_matching_parts.TransformMatchingAbstractBase.clean_up_from_scene\" title=\"manim.animation.transform_matching_parts.TransformMatchingAbstractBase.clean_up_from_scene\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">clean_up_from_scene</span></code></a></p></td>\n<td><p>Clean up the <a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene\" title=\"manim.scene.scene.Scene\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Scene</span></code></a> after finishing the animation.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_mobject_key</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_mobject_parts</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_shape_map</span></code></p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.animation.transform_matching_parts.TransformMatchingAbstractBase.clean_up_from_scene\">\n<span class=\"sig-name descname\"><span class=\"pre\">clean_up_from_scene</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scene</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/animation/transform_matching_parts/#TransformMatchingAbstractBase.clean_up_from_scene\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.animation.transform_matching_parts.TransformMatchingAbstractBase.clean_up_from_scene\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Clean up the <a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene\" title=\"manim.scene.scene.Scene\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Scene</span></code></a> after finishing the animation.</p>\n<p>This includes to <a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene.remove\" title=\"manim.scene.scene.Scene.remove\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">remove()</span></code></a> the Animation\u2019s\n<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a> if the animation is a remover.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>scene</strong> (<a class=\"reference internal\" href=\"../manim.scene.scene.Scene/#manim.scene.scene.Scene\" title=\"manim.scene.scene.Scene\"><em>Scene</em></a>) \u2013 The scene the animation should be cleaned up from.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>None</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/manim.animation.transform_matching_parts.TransformMatchingShapes", "TransformMatchingShapes", "N", "next"], ["reference/manim.animation.transform_matching_parts", "transform_matching_parts", "P", "previous"]], "sourcename": "reference/manim.animation.transform_matching_parts.TransformMatchingAbstractBase.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">TransformMatchingAbstractBase</a><ul>\n<li><a class=\"reference internal\" href=\"#manim.animation.transform_matching_parts.TransformMatchingAbstractBase\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TransformMatchingAbstractBase</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#manim.animation.transform_matching_parts.TransformMatchingAbstractBase.clean_up_from_scene\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TransformMatchingAbstractBase.clean_up_from_scene()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/manim.animation.transform_matching_parts.TransformMatchingAbstractBase", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "furo_version": "2024.08.06", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#202020", "foreground": "#d0d0d0"}}}