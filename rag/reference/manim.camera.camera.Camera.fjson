{"parents": [{"link": "../", "title": "Reference Manual"}, {"link": "../../reference_index/cameras/", "title": "Cameras"}, {"link": "../manim.camera.camera/", "title": "camera"}], "prev": {"link": "../manim.camera.camera.BackgroundColoredVMobjectDisplayer/", "title": "BackgroundColoredVMobjectDisplayer"}, "next": {"link": "../manim.camera.mapping_camera/", "title": "mapping_camera"}, "title": "Camera", "meta": {}, "body": "<section id=\"camera\">\n<h1>Camera<a class=\"headerlink\" href=\"#camera\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Qualified name: <code class=\"docutils literal notranslate\"><span class=\"pre\">manim.camera.camera.Camera</span></code></p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">Camera</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background_image</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">frame_center</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">array([0.,</span> <span class=\"pre\">0.,</span> <span class=\"pre\">0.])</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">image_mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'RGBA'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n_channels</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">4</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array_dtype</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'uint8'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cairo_line_width_multiple</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.01</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_z_index</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_height</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">frame_height</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">frame_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">frame_rate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background_opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<p>Base camera class.</p>\n<p>This is the object which takes care of what exactly is displayed\non screen at any given moment.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>background_image</strong> (<em>str</em><em> | </em><em>None</em>) \u2013 The path to an image that should be the background image.\nIf not set, the background is filled with <code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">self.background_color</span></code></p></li>\n<li><p><strong>background</strong> (<em>np.ndarray</em><em> | </em><em>None</em>) \u2013 What <code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">background</span></code> is set to. By default, <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p></li>\n<li><p><strong>pixel_height</strong> (<em>int</em><em> | </em><em>None</em>) \u2013 The height of the scene in pixels.</p></li>\n<li><p><strong>pixel_width</strong> (<em>int</em><em> | </em><em>None</em>) \u2013 The width of the scene in pixels.</p></li>\n<li><p><strong>kwargs</strong> \u2013 Additional arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">background_color</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">background_opacity</span></code>)\nto be set.</p></li>\n<li><p><strong>frame_center</strong> (<em>np.ndarray</em>)</p></li>\n<li><p><strong>image_mode</strong> (<em>str</em>)</p></li>\n<li><p><strong>n_channels</strong> (<em>int</em>)</p></li>\n<li><p><strong>pixel_array_dtype</strong> (<em>str</em>)</p></li>\n<li><p><strong>cairo_line_width_multiple</strong> (<em>float</em>)</p></li>\n<li><p><strong>use_z_index</strong> (<em>bool</em>)</p></li>\n<li><p><strong>frame_height</strong> (<em>float</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>frame_width</strong> (<em>float</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>frame_rate</strong> (<em>float</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>background_color</strong> (<em>ParsableManimColor</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>background_opacity</strong> (<em>float</em><em> | </em><em>None</em>)</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.adjust_out_of_range_points\" title=\"manim.camera.camera.Camera.adjust_out_of_range_points\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">adjust_out_of_range_points</span></code></a></p></td>\n<td><p>If any of the points in the passed array are out of the viable range, they are adjusted suitably.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.adjusted_thickness\" title=\"manim.camera.camera.Camera.adjusted_thickness\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">adjusted_thickness</span></code></a></p></td>\n<td><p>Computes the adjusted stroke width for a zoomed camera.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.apply_fill\" title=\"manim.camera.camera.Camera.apply_fill\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">apply_fill</span></code></a></p></td>\n<td><p>Fills the cairo context</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.apply_stroke\" title=\"manim.camera.camera.Camera.apply_stroke\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">apply_stroke</span></code></a></p></td>\n<td><p>Applies a stroke to the VMobject in the cairo context.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.cache_cairo_context\" title=\"manim.camera.camera.Camera.cache_cairo_context\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">cache_cairo_context</span></code></a></p></td>\n<td><p>Caches the passed Pixel array into a Cairo Context</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.capture_mobject\" title=\"manim.camera.camera.Camera.capture_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">capture_mobject</span></code></a></p></td>\n<td><p>Capture mobjects by storing it in <code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">pixel_array</span></code>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.capture_mobjects\" title=\"manim.camera.camera.Camera.capture_mobjects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">capture_mobjects</span></code></a></p></td>\n<td><p>Capture mobjects by printing them on <code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">pixel_array</span></code>.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.convert_pixel_array\" title=\"manim.camera.camera.Camera.convert_pixel_array\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">convert_pixel_array</span></code></a></p></td>\n<td><p>Converts a pixel array from values that have floats in then to proper RGB values.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_image_mobject\" title=\"manim.camera.camera.Camera.display_image_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">display_image_mobject</span></code></a></p></td>\n<td><p>Displays an ImageMobject by changing the pixel_array suitably.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_multiple_background_colored_vmobjects\" title=\"manim.camera.camera.Camera.display_multiple_background_colored_vmobjects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">display_multiple_background_colored_vmobjects</span></code></a></p></td>\n<td><p>Displays multiple vmobjects that have the same color as the background.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_multiple_image_mobjects\" title=\"manim.camera.camera.Camera.display_multiple_image_mobjects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">display_multiple_image_mobjects</span></code></a></p></td>\n<td><p>Displays multiple image mobjects by modifying the passed pixel_array.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_multiple_non_background_colored_vmobjects\" title=\"manim.camera.camera.Camera.display_multiple_non_background_colored_vmobjects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">display_multiple_non_background_colored_vmobjects</span></code></a></p></td>\n<td><p>Displays multiple VMobjects in the cairo context, as long as they don't have background colors.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_multiple_point_cloud_mobjects\" title=\"manim.camera.camera.Camera.display_multiple_point_cloud_mobjects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">display_multiple_point_cloud_mobjects</span></code></a></p></td>\n<td><p>Displays multiple PMobjects by modifying the passed pixel array.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_multiple_vectorized_mobjects\" title=\"manim.camera.camera.Camera.display_multiple_vectorized_mobjects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">display_multiple_vectorized_mobjects</span></code></a></p></td>\n<td><p>Displays multiple VMobjects in the pixel_array</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_point_cloud\" title=\"manim.camera.camera.Camera.display_point_cloud\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">display_point_cloud</span></code></a></p></td>\n<td><p>Displays a PMobject by modifying the pixel array suitably.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_vectorized\" title=\"manim.camera.camera.Camera.display_vectorized\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">display_vectorized</span></code></a></p></td>\n<td><p>Displays a VMobject in the cairo context</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_background_colored_vmobject_displayer\" title=\"manim.camera.camera.Camera.get_background_colored_vmobject_displayer\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_background_colored_vmobject_displayer</span></code></a></p></td>\n<td><p>Returns the background_colored_vmobject_displayer if it exists or makes one and returns it if not.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_cached_cairo_context\" title=\"manim.camera.camera.Camera.get_cached_cairo_context\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_cached_cairo_context</span></code></a></p></td>\n<td><p>Returns the cached cairo context of the passed pixel array if it exists, and None if it doesn't.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_cairo_context\" title=\"manim.camera.camera.Camera.get_cairo_context\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_cairo_context</span></code></a></p></td>\n<td><p>Returns the cairo context for a pixel array after caching it to self.pixel_array_to_cairo_context If that array has already been cached, it returns the cached version instead.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_coords_of_all_pixels\" title=\"manim.camera.camera.Camera.get_coords_of_all_pixels\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_coords_of_all_pixels</span></code></a></p></td>\n<td><p>Returns the cartesian coordinates of each pixel.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_fill_rgbas\" title=\"manim.camera.camera.Camera.get_fill_rgbas\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_fill_rgbas</span></code></a></p></td>\n<td><p>Returns the RGBA array of the fill of the passed VMobject</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_image\" title=\"manim.camera.camera.Camera.get_image\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_image</span></code></a></p></td>\n<td><p>Returns an image from the passed pixel array, or from the current frame if the passed pixel array is none.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_mobjects_to_display\" title=\"manim.camera.camera.Camera.get_mobjects_to_display\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_mobjects_to_display</span></code></a></p></td>\n<td><p>Used to get the list of mobjects to display with the camera.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_stroke_rgbas\" title=\"manim.camera.camera.Camera.get_stroke_rgbas\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_stroke_rgbas</span></code></a></p></td>\n<td><p>Gets the RGBA array for the stroke of the passed VMobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_thickening_nudges\" title=\"manim.camera.camera.Camera.get_thickening_nudges\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_thickening_nudges</span></code></a></p></td>\n<td><p>Determine a list of vectors used to nudge two-dimensional pixel coordinates.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.init_background\" title=\"manim.camera.camera.Camera.init_background\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">init_background</span></code></a></p></td>\n<td><p>Initialize the background.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.is_in_frame\" title=\"manim.camera.camera.Camera.is_in_frame\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_in_frame</span></code></a></p></td>\n<td><p>Checks whether the passed mobject is in frame or not.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.make_background_from_func\" title=\"manim.camera.camera.Camera.make_background_from_func\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">make_background_from_func</span></code></a></p></td>\n<td><p>Makes a pixel array for the background by using coords_to_colors_func to determine each pixel's color.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.on_screen_pixels\" title=\"manim.camera.camera.Camera.on_screen_pixels\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">on_screen_pixels</span></code></a></p></td>\n<td><p>Returns array of pixels that are on the screen from a given array of pixel_coordinates</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.overlay_PIL_image\" title=\"manim.camera.camera.Camera.overlay_PIL_image\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">overlay_PIL_image</span></code></a></p></td>\n<td><p>Overlays a PIL image on the passed pixel array.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.overlay_rgba_array\" title=\"manim.camera.camera.Camera.overlay_rgba_array\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">overlay_rgba_array</span></code></a></p></td>\n<td><p>Overlays an RGBA array on top of the given Pixel array.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">points_to_pixel_coords</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.reset\" title=\"manim.camera.camera.Camera.reset\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reset</span></code></a></p></td>\n<td><p>Resets the camera's pixel array to that of the background</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.reset_pixel_shape\" title=\"manim.camera.camera.Camera.reset_pixel_shape\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reset_pixel_shape</span></code></a></p></td>\n<td><p>This method resets the height and width of a single pixel to the passed new_height and new_width.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.resize_frame_shape\" title=\"manim.camera.camera.Camera.resize_frame_shape\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">resize_frame_shape</span></code></a></p></td>\n<td><p>Changes frame_shape to match the aspect ratio of the pixels, where fixed_dimension determines whether frame_height or frame_width remains fixed while the other changes accordingly.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.set_background\" title=\"manim.camera.camera.Camera.set_background\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_background</span></code></a></p></td>\n<td><p>Sets the background to the passed pixel_array after converting to valid RGB values.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.set_background_from_func\" title=\"manim.camera.camera.Camera.set_background_from_func\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_background_from_func</span></code></a></p></td>\n<td><p>Sets the background to a pixel array using coords_to_colors_func to determine each pixel's color.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.set_cairo_context_color\" title=\"manim.camera.camera.Camera.set_cairo_context_color\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_cairo_context_color</span></code></a></p></td>\n<td><p>Sets the color of the cairo context</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.set_cairo_context_path\" title=\"manim.camera.camera.Camera.set_cairo_context_path\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_cairo_context_path</span></code></a></p></td>\n<td><p>Sets a path for the cairo context with the vmobject passed</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_frame_to_background</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.set_pixel_array\" title=\"manim.camera.camera.Camera.set_pixel_array\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_pixel_array</span></code></a></p></td>\n<td><p>Sets the pixel array of the camera to the passed pixel array.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.thickened_coordinates\" title=\"manim.camera.camera.Camera.thickened_coordinates\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">thickened_coordinates</span></code></a></p></td>\n<td><p>Returns thickened coordinates for a passed array of pixel coords and a thickness to thicken by.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">transform_points_pre_display</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.type_or_raise\" title=\"manim.camera.camera.Camera.type_or_raise\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">type_or_raise</span></code></a></p></td>\n<td><p>Return the type of mobject, if it is a type that can be rendered.</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p class=\"rubric\">Attributes</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">background_color</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">background_opacity</span></code></p></td>\n<td><p></p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.adjust_out_of_range_points\">\n<span class=\"sig-name descname\"><span class=\"pre\">adjust_out_of_range_points</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">points</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.adjust_out_of_range_points\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.adjust_out_of_range_points\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>If any of the points in the passed array are out of\nthe viable range, they are adjusted suitably.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>points</strong> (<em>ndarray</em>) \u2013 The points to adjust</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The adjusted points.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.adjusted_thickness\">\n<span class=\"sig-name descname\"><span class=\"pre\">adjusted_thickness</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">thickness</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.adjusted_thickness\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.adjusted_thickness\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Computes the adjusted stroke width for a zoomed camera.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>thickness</strong> (<em>float</em>) \u2013 The stroke width of a mobject.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The adjusted stroke width that reflects zooming in with\nthe camera.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>float</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.apply_fill\">\n<span class=\"sig-name descname\"><span class=\"pre\">apply_fill</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ctx</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vmobject</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.apply_fill\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.apply_fill\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Fills the cairo context</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>ctx</strong> (<em>Context</em>) \u2013 The cairo context</p></li>\n<li><p><strong>vmobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a>) \u2013 The VMobject</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The camera object.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera\" title=\"manim.camera.camera.Camera\">Camera</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.apply_stroke\">\n<span class=\"sig-name descname\"><span class=\"pre\">apply_stroke</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ctx</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vmobject</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.apply_stroke\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.apply_stroke\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Applies a stroke to the VMobject in the cairo context.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>ctx</strong> (<em>Context</em>) \u2013 The cairo context</p></li>\n<li><p><strong>vmobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a>) \u2013 The VMobject</p></li>\n<li><p><strong>background</strong> (<em>bool</em>) \u2013 Whether or not to consider the background when applying this\nstroke width, by default False</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The camera object with the stroke applied.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera\" title=\"manim.camera.camera.Camera\">Camera</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.cache_cairo_context\">\n<span class=\"sig-name descname\"><span class=\"pre\">cache_cairo_context</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ctx</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.cache_cairo_context\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.cache_cairo_context\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Caches the passed Pixel array into a Cairo Context</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pixel_array</strong> (<em>ndarray</em>) \u2013 The pixel array to cache</p></li>\n<li><p><strong>ctx</strong> (<em>Context</em>) \u2013 The context to cache it into.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.capture_mobject\">\n<span class=\"sig-name descname\"><span class=\"pre\">capture_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mobject</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.capture_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.capture_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Capture mobjects by storing it in <code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">pixel_array</span></code>.</p>\n<p>This is a single-mobject version of <a class=\"reference internal\" href=\"#manim.camera.camera.Camera.capture_mobjects\" title=\"manim.camera.camera.Camera.capture_mobjects\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">capture_mobjects()</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>mobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a>) \u2013 Mobject to capture.</p></li>\n<li><p><strong>kwargs</strong> (<em>Any</em>) \u2013 Keyword arguments to be passed to <a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_mobjects_to_display\" title=\"manim.camera.camera.Camera.get_mobjects_to_display\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_mobjects_to_display()</span></code></a>.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.capture_mobjects\">\n<span class=\"sig-name descname\"><span class=\"pre\">capture_mobjects</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mobjects</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.capture_mobjects\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.capture_mobjects\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Capture mobjects by printing them on <code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">pixel_array</span></code>.</p>\n<p>This is the essential function that converts the contents of a Scene\ninto an array, which is then converted to an image or video.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>mobjects</strong> (<em>Iterable</em><em>[</em><a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a><em>]</em>) \u2013 Mobjects to capture.</p></li>\n<li><p><strong>kwargs</strong> \u2013 Keyword arguments to be passed to <a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_mobjects_to_display\" title=\"manim.camera.camera.Camera.get_mobjects_to_display\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_mobjects_to_display()</span></code></a>.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>For a list of classes that can currently be rendered, see <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">display_funcs()</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.convert_pixel_array\">\n<span class=\"sig-name descname\"><span class=\"pre\">convert_pixel_array</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">convert_from_floats</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.convert_pixel_array\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.convert_pixel_array\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Converts a pixel array from values that have floats in then\nto proper RGB values.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pixel_array</strong> (<em>ndarray</em><em> | </em><em>list</em><em> | </em><em>tuple</em>) \u2013 Pixel array to convert.</p></li>\n<li><p><strong>convert_from_floats</strong> (<em>bool</em>) \u2013 Whether or not to convert float values to ints, by default False</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The new, converted pixel array.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.display_image_mobject\">\n<span class=\"sig-name descname\"><span class=\"pre\">display_image_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">image_mobject</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.display_image_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.display_image_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Displays an ImageMobject by changing the pixel_array suitably.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>image_mobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.types.image_mobject.AbstractImageMobject/#manim.mobject.types.image_mobject.AbstractImageMobject\" title=\"manim.mobject.types.image_mobject.AbstractImageMobject\"><em>AbstractImageMobject</em></a>) \u2013 The imageMobject to display</p></li>\n<li><p><strong>pixel_array</strong> (<em>ndarray</em>) \u2013 The Pixel array to put the imagemobject in.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.display_multiple_background_colored_vmobjects\">\n<span class=\"sig-name descname\"><span class=\"pre\">display_multiple_background_colored_vmobjects</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cvmobjects</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.display_multiple_background_colored_vmobjects\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.display_multiple_background_colored_vmobjects\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Displays multiple vmobjects that have the same color as the background.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>cvmobjects</strong> (<em>list</em>) \u2013 List of Colored VMobjects</p></li>\n<li><p><strong>pixel_array</strong> (<em>ndarray</em>) \u2013 The pixel array.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The camera object.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera\" title=\"manim.camera.camera.Camera\">Camera</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.display_multiple_image_mobjects\">\n<span class=\"sig-name descname\"><span class=\"pre\">display_multiple_image_mobjects</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">image_mobjects</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.display_multiple_image_mobjects\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.display_multiple_image_mobjects\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Displays multiple image mobjects by modifying the passed pixel_array.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>image_mobjects</strong> (<em>list</em>) \u2013 list of ImageMobjects</p></li>\n<li><p><strong>pixel_array</strong> (<em>ndarray</em>) \u2013 The pixel array to modify.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.display_multiple_non_background_colored_vmobjects\">\n<span class=\"sig-name descname\"><span class=\"pre\">display_multiple_non_background_colored_vmobjects</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vmobjects</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.display_multiple_non_background_colored_vmobjects\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.display_multiple_non_background_colored_vmobjects\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Displays multiple VMobjects in the cairo context, as long as they don\u2019t have\nbackground colors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>vmobjects</strong> (<em>list</em>) \u2013 list of the VMobjects</p></li>\n<li><p><strong>pixel_array</strong> (<em>ndarray</em>) \u2013 The Pixel array to add the VMobjects to.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.display_multiple_point_cloud_mobjects\">\n<span class=\"sig-name descname\"><span class=\"pre\">display_multiple_point_cloud_mobjects</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pmobjects</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.display_multiple_point_cloud_mobjects\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.display_multiple_point_cloud_mobjects\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Displays multiple PMobjects by modifying the passed pixel array.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pmobjects</strong> (<em>list</em>) \u2013 List of PMobjects</p></li>\n<li><p><strong>pixel_array</strong> (<em>ndarray</em>) \u2013 The pixel array to modify.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.display_multiple_vectorized_mobjects\">\n<span class=\"sig-name descname\"><span class=\"pre\">display_multiple_vectorized_mobjects</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vmobjects</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.display_multiple_vectorized_mobjects\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.display_multiple_vectorized_mobjects\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Displays multiple VMobjects in the pixel_array</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>vmobjects</strong> (<em>list</em>) \u2013 list of VMobjects to display</p></li>\n<li><p><strong>pixel_array</strong> (<em>ndarray</em>) \u2013 The pixel array</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.display_point_cloud\">\n<span class=\"sig-name descname\"><span class=\"pre\">display_point_cloud</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pmobject</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">points</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rgbas</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">thickness</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.display_point_cloud\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.display_point_cloud\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Displays a PMobject by modifying the pixel array suitably.</p>\n<p>TODO: Write a description for the rgbas argument.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pmobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.types.point_cloud_mobject.PMobject/#manim.mobject.types.point_cloud_mobject.PMobject\" title=\"manim.mobject.types.point_cloud_mobject.PMobject\"><em>PMobject</em></a>) \u2013 Point Cloud Mobject</p></li>\n<li><p><strong>points</strong> (<em>list</em>) \u2013 The points to display in the point cloud mobject</p></li>\n<li><p><strong>rgbas</strong> (<em>ndarray</em>)</p></li>\n<li><p><strong>thickness</strong> (<em>float</em>) \u2013 The thickness of each point of the PMobject</p></li>\n<li><p><strong>pixel_array</strong> (<em>ndarray</em>) \u2013 The pixel array to modify.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.display_vectorized\">\n<span class=\"sig-name descname\"><span class=\"pre\">display_vectorized</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vmobject</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ctx</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.display_vectorized\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.display_vectorized\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Displays a VMobject in the cairo context</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>vmobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a>) \u2013 The Vectorized Mobject to display</p></li>\n<li><p><strong>ctx</strong> (<em>Context</em>) \u2013 The cairo context to use.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The camera object</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera\" title=\"manim.camera.camera.Camera\">Camera</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.get_background_colored_vmobject_displayer\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_background_colored_vmobject_displayer</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.get_background_colored_vmobject_displayer\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.get_background_colored_vmobject_displayer\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the background_colored_vmobject_displayer\nif it exists or makes one and returns it if not.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>Object that displays VMobjects that have the same color\nas the background.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>BackGroundColoredVMobjectDisplayer</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.get_cached_cairo_context\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_cached_cairo_context</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.get_cached_cairo_context\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.get_cached_cairo_context\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the cached cairo context of the passed\npixel array if it exists, and None if it doesn\u2019t.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>pixel_array</strong> (<em>ndarray</em>) \u2013 The pixel array to check.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The cached cairo context.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>cairo.Context</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.get_cairo_context\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_cairo_context</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.get_cairo_context\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.get_cairo_context\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the cairo context for a pixel array after\ncaching it to self.pixel_array_to_cairo_context\nIf that array has already been cached, it returns the\ncached version instead.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>pixel_array</strong> (<em>ndarray</em>) \u2013 The Pixel array to get the cairo context of.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The cairo context of the pixel array.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>cairo.Context</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.get_coords_of_all_pixels\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_coords_of_all_pixels</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.get_coords_of_all_pixels\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.get_coords_of_all_pixels\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the cartesian coordinates of each pixel.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>The array of cartesian coordinates.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>np.ndarray</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.get_fill_rgbas\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_fill_rgbas</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vmobject</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.get_fill_rgbas\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.get_fill_rgbas\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns the RGBA array of the fill of the passed VMobject</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>vmobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a>) \u2013 The VMobject</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The RGBA Array of the fill of the VMobject</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.get_image\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_image</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.get_image\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.get_image\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns an image from the passed\npixel array, or from the current frame\nif the passed pixel array is none.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>pixel_array</strong> (<em>ndarray</em><em> | </em><em>list</em><em> | </em><em>tuple</em><em> | </em><em>None</em>) \u2013 The pixel array from which to get an image, by default None</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The PIL image of the array.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>PIL.Image</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.get_mobjects_to_display\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_mobjects_to_display</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mobjects</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">include_submobjects</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">excluded_mobjects</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.get_mobjects_to_display\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.get_mobjects_to_display\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Used to get the list of mobjects to display\nwith the camera.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>mobjects</strong> (<em>Iterable</em><em>[</em><a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a><em>]</em>) \u2013 The Mobjects</p></li>\n<li><p><strong>include_submobjects</strong> (<em>bool</em>) \u2013 Whether or not to include the submobjects of mobjects, by default True</p></li>\n<li><p><strong>excluded_mobjects</strong> (<em>list</em><em> | </em><em>None</em>) \u2013 Any mobjects to exclude, by default None</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>list of mobjects</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>list</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.get_stroke_rgbas\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_stroke_rgbas</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vmobject</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">background</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.get_stroke_rgbas\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.get_stroke_rgbas\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets the RGBA array for the stroke of the passed\nVMobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>vmobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a>) \u2013 The VMobject</p></li>\n<li><p><strong>background</strong> (<em>bool</em>) \u2013 Whether or not to consider the background when getting the stroke\nRGBAs, by default False</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The RGBA array of the stroke.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.ndarray</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.get_thickening_nudges\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_thickening_nudges</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">thickness</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.get_thickening_nudges\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.get_thickening_nudges\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Determine a list of vectors used to nudge\ntwo-dimensional pixel coordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>thickness</strong> (<em>float</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>np.array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.init_background\">\n<span class=\"sig-name descname\"><span class=\"pre\">init_background</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.init_background\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.init_background\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the background.\nIf self.background_image is the path of an image\nthe image is set as background; else, the default\nbackground color fills the background.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.is_in_frame\">\n<span class=\"sig-name descname\"><span class=\"pre\">is_in_frame</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mobject</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.is_in_frame\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.is_in_frame\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Checks whether the passed mobject is in\nframe or not.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>mobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a>) \u2013 The mobject for which the checking needs to be done.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>True if in frame, False otherwise.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>bool</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.make_background_from_func\">\n<span class=\"sig-name descname\"><span class=\"pre\">make_background_from_func</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">coords_to_colors_func</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.make_background_from_func\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.make_background_from_func\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Makes a pixel array for the background by using coords_to_colors_func to determine each pixel\u2019s color. Each input\npixel\u2019s color. Each input to coords_to_colors_func is an (x, y) pair in space (in ordinary space coordinates; not\npixel coordinates), and each output is expected to be an RGBA array of 4 floats.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>coords_to_colors_func</strong> (<em>Callable</em><em>[</em><em>[</em><em>ndarray</em><em>]</em><em>, </em><em>ndarray</em><em>]</em>) \u2013 The function whose input is an (x,y) pair of coordinates and\nwhose return values must be the colors for that point</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The pixel array which can then be passed to set_background.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.on_screen_pixels\">\n<span class=\"sig-name descname\"><span class=\"pre\">on_screen_pixels</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_coords</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.on_screen_pixels\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.on_screen_pixels\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns array of pixels that are on the screen from a given\narray of pixel_coordinates</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>pixel_coords</strong> (<em>ndarray</em>) \u2013 The pixel coords to check.</p>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The pixel coords on screen.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.overlay_PIL_image\">\n<span class=\"sig-name descname\"><span class=\"pre\">overlay_PIL_image</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">image</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.overlay_PIL_image\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.overlay_PIL_image\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Overlays a PIL image on the passed pixel array.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pixel_array</strong> (<em>ndarray</em>) \u2013 The Pixel array</p></li>\n<li><p><strong>image</strong> (<em>Image</em>) \u2013 The Image to overlay.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.overlay_rgba_array\">\n<span class=\"sig-name descname\"><span class=\"pre\">overlay_rgba_array</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">new_array</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.overlay_rgba_array\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.overlay_rgba_array\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Overlays an RGBA array on top of the given Pixel array.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pixel_array</strong> (<em>ndarray</em>) \u2013 The original pixel array to modify.</p></li>\n<li><p><strong>new_array</strong> (<em>ndarray</em>) \u2013 The new pixel array to overlay.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.reset\">\n<span class=\"sig-name descname\"><span class=\"pre\">reset</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.reset\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.reset\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Resets the camera\u2019s pixel array\nto that of the background</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>The camera object after setting the pixel array.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera\" title=\"manim.camera.camera.Camera\">Camera</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.reset_pixel_shape\">\n<span class=\"sig-name descname\"><span class=\"pre\">reset_pixel_shape</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">new_height</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">new_width</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.reset_pixel_shape\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.reset_pixel_shape\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>This method resets the height and width\nof a single pixel to the passed new_height and new_width.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>new_height</strong> (<em>float</em>) \u2013 The new height of the entire scene in pixels</p></li>\n<li><p><strong>new_width</strong> (<em>float</em>) \u2013 The new width of the entire scene in pixels</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.resize_frame_shape\">\n<span class=\"sig-name descname\"><span class=\"pre\">resize_frame_shape</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fixed_dimension</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.resize_frame_shape\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.resize_frame_shape\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Changes frame_shape to match the aspect ratio\nof the pixels, where fixed_dimension determines\nwhether frame_height or frame_width\nremains fixed while the other changes accordingly.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>fixed_dimension</strong> (<em>int</em>) \u2013 If 0, height is scaled with respect to width\nelse, width is scaled with respect to height.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.set_background\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_background</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">convert_from_floats</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.set_background\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.set_background\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Sets the background to the passed pixel_array after converting\nto valid RGB values.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pixel_array</strong> (<em>ndarray</em><em> | </em><em>list</em><em> | </em><em>tuple</em>) \u2013 The pixel array to set the background to.</p></li>\n<li><p><strong>convert_from_floats</strong> (<em>bool</em>) \u2013 Whether or not to convert floats values to proper RGB valid ones, by default False</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.set_background_from_func\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_background_from_func</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">coords_to_colors_func</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.set_background_from_func\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.set_background_from_func\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Sets the background to a pixel array using coords_to_colors_func to determine each pixel\u2019s color. Each input\npixel\u2019s color. Each input to coords_to_colors_func is an (x, y) pair in space (in ordinary space coordinates; not\npixel coordinates), and each output is expected to be an RGBA array of 4 floats.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>coords_to_colors_func</strong> (<em>Callable</em><em>[</em><em>[</em><em>ndarray</em><em>]</em><em>, </em><em>ndarray</em><em>]</em>) \u2013 The function whose input is an (x,y) pair of coordinates and\nwhose return values must be the colors for that point</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.set_cairo_context_color\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_cairo_context_color</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ctx</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rgbas</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vmobject</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.set_cairo_context_color\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.set_cairo_context_color\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Sets the color of the cairo context</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>ctx</strong> (<em>Context</em>) \u2013 The cairo context</p></li>\n<li><p><strong>rgbas</strong> (<em>ndarray</em>) \u2013 The RGBA array with which to color the context.</p></li>\n<li><p><strong>vmobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a>) \u2013 The VMobject with which to set the color.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>The camera object</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera\" title=\"manim.camera.camera.Camera\">Camera</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.set_cairo_context_path\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_cairo_context_path</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ctx</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">vmobject</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.set_cairo_context_path\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.set_cairo_context_path\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Sets a path for the cairo context with the vmobject passed</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>ctx</strong> (<em>Context</em>) \u2013 The cairo context</p></li>\n<li><p><strong>vmobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a>) \u2013 The VMobject</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Camera object after setting cairo_context_path</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#manim.camera.camera.Camera\" title=\"manim.camera.camera.Camera\">Camera</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.set_pixel_array\">\n<span class=\"sig-name descname\"><span class=\"pre\">set_pixel_array</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_array</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">convert_from_floats</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.set_pixel_array\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.set_pixel_array\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Sets the pixel array of the camera to the passed pixel array.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pixel_array</strong> (<em>ndarray</em><em> | </em><em>list</em><em> | </em><em>tuple</em>) \u2013 The pixel array to convert and then set as the camera\u2019s pixel array.</p></li>\n<li><p><strong>convert_from_floats</strong> (<em>bool</em>) \u2013 Whether or not to convert float values to proper RGB values, by default False</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.thickened_coordinates\">\n<span class=\"sig-name descname\"><span class=\"pre\">thickened_coordinates</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">pixel_coords</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">thickness</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.thickened_coordinates\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.thickened_coordinates\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Returns thickened coordinates for a passed array of pixel coords and\na thickness to thicken by.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pixel_coords</strong> (<em>ndarray</em>) \u2013 Pixel coordinates</p></li>\n<li><p><strong>thickness</strong> (<em>float</em>) \u2013 Thickness</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Array of thickened pixel coords.</p>\n</dd>\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>np.array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.camera.camera.Camera.type_or_raise\">\n<span class=\"sig-name descname\"><span class=\"pre\">type_or_raise</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mobject</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/camera/camera/#Camera.type_or_raise\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.camera.camera.Camera.type_or_raise\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Return the type of mobject, if it is a type that can be rendered.</p>\n<p>If <cite>mobject</cite> is an instance of a class that inherits from a class that\ncan be rendered, return the super class.  For example, an instance of a\nSquare is also an instance of VMobject, and these can be rendered.\nTherefore, <cite>type_or_raise(Square())</cite> returns True.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>mobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a>) \u2013 The object to take the type of.</p>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>For a list of classes that can currently be rendered, see <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">display_funcs()</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>The type of mobjects, if it can be rendered.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Type[<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Mobject</span></code></a>]</p>\n</dd>\n<dt class=\"field-odd\">Raises<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>TypeError</strong> \u2013 When mobject is not an instance of a class that can be rendered.</p>\n</dd>\n<dt class=\"field-even\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><strong>mobject</strong> (<a class=\"reference internal\" href=\"../manim.mobject.mobject.Mobject/#manim.mobject.mobject.Mobject\" title=\"manim.mobject.mobject.Mobject\"><em>Mobject</em></a>)</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/manim.camera.mapping_camera", "mapping_camera", "N", "next"], ["reference/manim.camera.camera.BackgroundColoredVMobjectDisplayer", "BackgroundColoredVMobjectDisplayer", "P", "previous"]], "sourcename": "reference/manim.camera.camera.Camera.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Camera</a><ul>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.adjust_out_of_range_points\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.adjust_out_of_range_points()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.adjusted_thickness\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.adjusted_thickness()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.apply_fill\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.apply_fill()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.apply_stroke\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.apply_stroke()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.cache_cairo_context\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.cache_cairo_context()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.capture_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.capture_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.capture_mobjects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.capture_mobjects()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.convert_pixel_array\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.convert_pixel_array()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_image_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.display_image_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_multiple_background_colored_vmobjects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.display_multiple_background_colored_vmobjects()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_multiple_image_mobjects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.display_multiple_image_mobjects()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_multiple_non_background_colored_vmobjects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.display_multiple_non_background_colored_vmobjects()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_multiple_point_cloud_mobjects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.display_multiple_point_cloud_mobjects()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_multiple_vectorized_mobjects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.display_multiple_vectorized_mobjects()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_point_cloud\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.display_point_cloud()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.display_vectorized\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.display_vectorized()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_background_colored_vmobject_displayer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.get_background_colored_vmobject_displayer()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_cached_cairo_context\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.get_cached_cairo_context()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_cairo_context\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.get_cairo_context()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_coords_of_all_pixels\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.get_coords_of_all_pixels()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_fill_rgbas\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.get_fill_rgbas()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_image\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.get_image()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_mobjects_to_display\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.get_mobjects_to_display()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_stroke_rgbas\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.get_stroke_rgbas()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.get_thickening_nudges\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.get_thickening_nudges()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.init_background\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.init_background()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.is_in_frame\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.is_in_frame()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.make_background_from_func\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.make_background_from_func()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.on_screen_pixels\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.on_screen_pixels()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.overlay_PIL_image\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.overlay_PIL_image()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.overlay_rgba_array\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.overlay_rgba_array()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.reset\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.reset()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.reset_pixel_shape\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.reset_pixel_shape()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.resize_frame_shape\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.resize_frame_shape()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.set_background\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.set_background()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.set_background_from_func\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.set_background_from_func()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.set_cairo_context_color\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.set_cairo_context_color()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.set_cairo_context_path\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.set_cairo_context_path()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.set_pixel_array\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.set_pixel_array()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.thickened_coordinates\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.thickened_coordinates()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.camera.camera.Camera.type_or_raise\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Camera.type_or_raise()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/manim.camera.camera.Camera", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "furo_version": "2024.08.06", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#202020", "foreground": "#d0d0d0"}}}