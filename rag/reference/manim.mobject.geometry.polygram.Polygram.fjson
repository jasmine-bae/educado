{"parents": [{"link": "../", "title": "Reference Manual"}, {"link": "../../reference_index/mobjects/", "title": "Mobjects"}, {"link": "../manim.mobject.geometry/", "title": "geometry"}, {"link": "../manim.mobject.geometry.polygram/", "title": "polygram"}], "prev": {"link": "../manim.mobject.geometry.polygram.Polygon/", "title": "Polygon"}, "next": {"link": "../manim.mobject.geometry.polygram.Rectangle/", "title": "Rectangle"}, "title": "Polygram", "meta": {}, "body": "<section id=\"polygram\">\n<h1>Polygram<a class=\"headerlink\" href=\"#polygram\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Qualified name: <code class=\"docutils literal notranslate\"><span class=\"pre\">manim.mobject.geometry.polygram.Polygram</span></code></p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.geometry.polygram.Polygram\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">Polygram</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">vertex_groups</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">ManimColor('#58C4DD')</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/geometry/polygram/#Polygram\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.geometry.polygram.Polygram\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n<p>A generalized <a class=\"reference internal\" href=\"../manim.mobject.geometry.polygram.Polygon/#manim.mobject.geometry.polygram.Polygon\" title=\"manim.mobject.geometry.polygram.Polygon\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Polygon</span></code></a>, allowing for disconnected sets of edges.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>vertex_groups</strong> (<em>Point3D</em>) \u2013 <p>The groups of vertices making up the <a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram\" title=\"manim.mobject.geometry.polygram.Polygram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Polygram</span></code></a>.</p>\n<p>The first vertex in each group is repeated to close the shape.\nEach point must be 3-dimensional: <code class=\"docutils literal notranslate\"><span class=\"pre\">[x,y,z]</span></code></p>\n</p></li>\n<li><p><strong>color</strong> (<em>ParsableManimColor</em>) \u2013 The color of the <a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram\" title=\"manim.mobject.geometry.polygram.Polygram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Polygram</span></code></a>.</p></li>\n<li><p><strong>kwargs</strong> \u2013 Forwarded to the parent constructor.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p class=\"rubric\">Methods</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram.get_vertex_groups\" title=\"manim.mobject.geometry.polygram.Polygram.get_vertex_groups\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_vertex_groups</span></code></a></p></td>\n<td><p>Gets the vertex groups of the <a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram\" title=\"manim.mobject.geometry.polygram.Polygram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Polygram</span></code></a>.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram.get_vertices\" title=\"manim.mobject.geometry.polygram.Polygram.get_vertices\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_vertices</span></code></a></p></td>\n<td><p>Gets the vertices of the <a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram\" title=\"manim.mobject.geometry.polygram.Polygram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Polygram</span></code></a>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram.round_corners\" title=\"manim.mobject.geometry.polygram.Polygram.round_corners\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">round_corners</span></code></a></p></td>\n<td><p>Rounds off the corners of the <a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram\" title=\"manim.mobject.geometry.polygram.Polygram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Polygram</span></code></a>.</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p class=\"rubric\">Attributes</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">animate</span></code></p></td>\n<td><p>Used to animate the application of any method of <code class=\"code docutils literal notranslate\"><span class=\"pre\">self</span></code>.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">animation_overrides</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">color</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">depth</span></code></p></td>\n<td><p>The depth of the mobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">fill_color</span></code></p></td>\n<td><p>If there are multiple colors (for gradient) this returns the first one</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">height</span></code></p></td>\n<td><p>The height of the mobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">n_points_per_curve</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sheen_factor</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">stroke_color</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">width</span></code></p></td>\n<td><p>The width of the mobject.</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.geometry.polygram.Polygram._original__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">_original__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">vertex_groups</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">ManimColor('#58C4DD')</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#manim.mobject.geometry.polygram.Polygram._original__init__\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>vertex_groups</strong> (<em>Point3D</em>)</p></li>\n<li><p><strong>color</strong> (<em>ParsableManimColor</em>)</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.geometry.polygram.Polygram.get_vertex_groups\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_vertex_groups</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/geometry/polygram/#Polygram.get_vertex_groups\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.geometry.polygram.Polygram.get_vertex_groups\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets the vertex groups of the <a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram\" title=\"manim.mobject.geometry.polygram.Polygram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Polygram</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>The vertex groups of the <a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram\" title=\"manim.mobject.geometry.polygram.Polygram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Polygram</span></code></a>.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">numpy.ndarray</span></code></p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">poly</span> <span class=\"o\">=</span> <span class=\"n\">Polygram</span><span class=\"p\">([</span><span class=\"n\">ORIGIN</span><span class=\"p\">,</span> <span class=\"n\">RIGHT</span><span class=\"p\">,</span> <span class=\"n\">UP</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">LEFT</span><span class=\"p\">,</span> <span class=\"n\">LEFT</span> <span class=\"o\">+</span> <span class=\"n\">UP</span><span class=\"p\">,</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">LEFT</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">poly</span><span class=\"o\">.</span><span class=\"n\">get_vertex_groups</span><span class=\"p\">()</span>\n<span class=\"go\">array([[[ 0.,  0.,  0.],</span>\n<span class=\"go\">        [ 1.,  0.,  0.],</span>\n<span class=\"go\">        [ 0.,  1.,  0.]],</span>\n\n<span class=\"go\">       [[-1.,  0.,  0.],</span>\n<span class=\"go\">        [-1.,  1.,  0.],</span>\n<span class=\"go\">        [-2.,  0.,  0.]]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.geometry.polygram.Polygram.get_vertices\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_vertices</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/geometry/polygram/#Polygram.get_vertices\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.geometry.polygram.Polygram.get_vertices\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Gets the vertices of the <a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram\" title=\"manim.mobject.geometry.polygram.Polygram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Polygram</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>The vertices of the <a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram\" title=\"manim.mobject.geometry.polygram.Polygram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Polygram</span></code></a>.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">numpy.ndarray</span></code></p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sq</span> <span class=\"o\">=</span> <span class=\"n\">Square</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sq</span><span class=\"o\">.</span><span class=\"n\">get_vertices</span><span class=\"p\">()</span>\n<span class=\"go\">array([[ 1.,  1.,  0.],</span>\n<span class=\"go\">       [-1.,  1.,  0.],</span>\n<span class=\"go\">       [-1., -1.,  0.],</span>\n<span class=\"go\">       [ 1., -1.,  0.]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.geometry.polygram.Polygram.round_corners\">\n<span class=\"sig-name descname\"><span class=\"pre\">round_corners</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">radius</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">evenly_distribute_anchors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">components_per_rounded_corner</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/geometry/polygram/#Polygram.round_corners\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.geometry.polygram.Polygram.round_corners\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Rounds off the corners of the <a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram\" title=\"manim.mobject.geometry.polygram.Polygram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Polygram</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>radius</strong> (<em>float</em><em> | </em><em>list</em><em>[</em><em>float</em><em>]</em>) \u2013 The curvature of the corners of the <a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram\" title=\"manim.mobject.geometry.polygram.Polygram\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Polygram</span></code></a>.</p></li>\n<li><p><strong>evenly_distribute_anchors</strong> (<em>bool</em>) \u2013 Break long line segments into proportionally-sized segments.</p></li>\n<li><p><strong>components_per_rounded_corner</strong> (<em>int</em>) \u2013 The number of points used to represent the rounded corner curve.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>Self</p>\n</dd>\n</dl>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RoundedRectangle</span></code></p>\n</div>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>If <cite>radius</cite> is supplied as a single value, then the same radius\nwill be applied to all corners.  If <cite>radius</cite> is a list, then the\nindividual values will be applied sequentially, with the first\ncorner receiving <cite>radius[0]</cite>, the second corner receiving\n<cite>radius[1]</cite>, etc.  The radius list will be repeated as necessary.</p>\n<p>The <cite>components_per_rounded_corner</cite> value is provided so that the\nfidelity of the rounded corner may be fine-tuned as needed.  2 is\nan appropriate value for most shapes, however a larger value may be\nneed if the rounded corner is particularly large.  2 is the minimum\nnumber allowed, representing the start and end of the curve.  3 will\nresult in a start, middle, and end point, meaning 2 curves will be\ngenerated.</p>\n<p>The option to <cite>evenly_distribute_anchors</cite> is provided so that the\nline segments (the part part of each line remaining after rounding\noff the corners) can be subdivided to a density similar to that of\nthe average density of the rounded corners.  This may be desirable\nin situations in which an even distribution of curves is desired\nfor use in later transformation animations.  Be aware, though, that\nenabling this option can result in an an object containing\nsignificantly more points than the original, especially when the\nrounded corner curves are small.</p>\n</div>\n<p class=\"rubric\">Examples</p>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/manim.mobject.geometry.polygram.Rectangle", "Rectangle", "N", "next"], ["reference/manim.mobject.geometry.polygram.Polygon", "Polygon", "P", "previous"]], "sourcename": "reference/manim.mobject.geometry.polygram.Polygram.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Polygram</a><ul>\n<li><a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Polygram</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram._original__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Polygram._original__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram.get_vertex_groups\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Polygram.get_vertex_groups()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram.get_vertices\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Polygram.get_vertices()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.geometry.polygram.Polygram.round_corners\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Polygram.round_corners()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/manim.mobject.geometry.polygram.Polygram", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "furo_version": "2024.08.06", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#202020", "foreground": "#d0d0d0"}}}