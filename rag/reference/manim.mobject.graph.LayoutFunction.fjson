{"parents": [{"link": "../", "title": "Reference Manual"}, {"link": "../../reference_index/mobjects/", "title": "Mobjects"}, {"link": "../manim.mobject.graph/", "title": "graph"}], "prev": {"link": "../manim.mobject.graph.Graph/", "title": "Graph"}, "next": {"link": "../manim.mobject.graphing/", "title": "graphing"}, "title": "LayoutFunction", "meta": {}, "body": "<section id=\"layoutfunction\">\n<h1>LayoutFunction<a class=\"headerlink\" href=\"#layoutfunction\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Qualified name: <code class=\"docutils literal notranslate\"><span class=\"pre\">manim.mobject.graph.LayoutFunction</span></code></p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.graph.LayoutFunction\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">LayoutFunction</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/graph/#LayoutFunction\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.graph.LayoutFunction\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Protocol</span></code></p>\n<p>A protocol for automatic layout functions that compute a layout for a graph to be used in <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">change_layout()</span></code>.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>The layout function must be a pure function, i.e., it must not modify the graph passed to it.</p>\n</div>\n<p class=\"rubric\">Examples</p>\n<p>Here is an example that arranges nodes in an n x m grid in sorted order.</p>\n<p>Several automatic layouts are provided by manim, and can be used by passing their name as the <code class=\"docutils literal notranslate\"><span class=\"pre\">layout</span></code> parameter to <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">change_layout()</span></code>.\nAlternatively, a custom layout function can be passed to <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">change_layout()</span></code> as the <code class=\"docutils literal notranslate\"><span class=\"pre\">layout</span></code> parameter. Such a function must adhere to the <a class=\"reference internal\" href=\"#manim.mobject.graph.LayoutFunction\" title=\"manim.mobject.graph.LayoutFunction\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LayoutFunction</span></code></a> protocol.</p>\n<p>The <a class=\"reference internal\" href=\"#manim.mobject.graph.LayoutFunction\" title=\"manim.mobject.graph.LayoutFunction\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LayoutFunction</span></code></a> s provided by manim are illustrated below:</p>\n<ul class=\"simple\">\n<li><p>Circular Layout: places the vertices on a circle</p></li>\n</ul>\n<ul class=\"simple\">\n<li><p>Kamada Kawai Layout: tries to place the vertices such that the given distances between them are respected</p></li>\n</ul>\n<ul class=\"simple\">\n<li><p>Partite Layout: places vertices into distinct partitions</p></li>\n</ul>\n<ul class=\"simple\">\n<li><p>Planar Layout: places vertices such that edges do not cross</p></li>\n</ul>\n<ul class=\"simple\">\n<li><p>Random Layout: randomly places vertices</p></li>\n</ul>\n<ul class=\"simple\">\n<li><p>Shell Layout: places vertices in concentric circles</p></li>\n</ul>\n<ul class=\"simple\">\n<li><p>Spectral Layout: places vertices using the eigenvectors of the graph Laplacian (clusters nodes which are an approximation of the ratio cut)</p></li>\n</ul>\n<ul class=\"simple\">\n<li><p>Sprial Layout: places vertices in a spiraling pattern</p></li>\n</ul>\n<ul class=\"simple\">\n<li><p>Spring Layout: places nodes according to the Fruchterman-Reingold force-directed algorithm (attempts to minimize edge length while maximizing node separation)</p></li>\n</ul>\n<ul class=\"simple\">\n<li><p>Tree Layout: places vertices into a tree with a root node and branches (can only be used with legal trees)</p></li>\n</ul>\n<p class=\"rubric\">Methods</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n</tbody>\n</table>\n</div>\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/manim.mobject.graphing", "graphing", "N", "next"], ["reference/manim.mobject.graph.Graph", "Graph", "P", "previous"]], "sourcename": "reference/manim.mobject.graph.LayoutFunction.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">LayoutFunction</a><ul>\n<li><a class=\"reference internal\" href=\"#manim.mobject.graph.LayoutFunction\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutFunction</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/manim.mobject.graph.LayoutFunction", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "furo_version": "2024.08.06", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#202020", "foreground": "#d0d0d0"}}}