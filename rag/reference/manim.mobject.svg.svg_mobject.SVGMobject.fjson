{"parents": [{"link": "../", "title": "Reference Manual"}, {"link": "../../reference_index/mobjects/", "title": "Mobjects"}, {"link": "../manim.mobject.svg/", "title": "svg"}, {"link": "../manim.mobject.svg.svg_mobject/", "title": "svg_mobject"}], "prev": {"link": "../manim.mobject.svg.svg_mobject/", "title": "svg_mobject"}, "next": {"link": "../manim.mobject.svg.svg_mobject.VMobjectFromSVGPath/", "title": "VMobjectFromSVGPath"}, "title": "SVGMobject", "meta": {}, "body": "<section id=\"svgmobject\">\n<h1>SVGMobject<a class=\"headerlink\" href=\"#svgmobject\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Qualified name: <code class=\"docutils literal notranslate\"><span class=\"pre\">manim.mobject.svg.svg\\_mobject.SVGMobject</span></code></p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">SVGMobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">file_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">should_center</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">height</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fill_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fill_opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stroke_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stroke_opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stroke_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">svg_default</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path_string_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_svg_cache</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobject</span></code></a></p>\n<p>A vectorized mobject created from importing an SVG file.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>file_name</strong> (<em>str</em><em> | </em><em>os.PathLike</em><em> | </em><em>None</em>) \u2013 The path to the SVG file.</p></li>\n<li><p><strong>should_center</strong> (<em>bool</em>) \u2013 Whether or not the mobject should be centered after\nbeing imported.</p></li>\n<li><p><strong>height</strong> (<em>float</em><em> | </em><em>None</em>) \u2013 The target height of the mobject, set to 2 Manim units by default.\nIf the height and width are both set to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, the mobject\nis imported without being scaled.</p></li>\n<li><p><strong>width</strong> (<em>float</em><em> | </em><em>None</em>) \u2013 The target width of the mobject, set to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> by default. If\nthe height and the width are both set to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, the mobject\nis imported without being scaled.</p></li>\n<li><p><strong>color</strong> (<em>str</em><em> | </em><em>None</em>) \u2013 The color (both fill and stroke color) of the mobject. If\n<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> (the default), the colors set in the SVG file\nare used.</p></li>\n<li><p><strong>opacity</strong> (<em>float</em><em> | </em><em>None</em>) \u2013 The opacity (both fill and stroke opacity) of the mobject.\nIf <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> (the default), the opacity set in the SVG file\nis used.</p></li>\n<li><p><strong>fill_color</strong> (<em>str</em><em> | </em><em>None</em>) \u2013 The fill color of the mobject. If <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> (the default),\nthe fill colors set in the SVG file are used.</p></li>\n<li><p><strong>fill_opacity</strong> (<em>float</em><em> | </em><em>None</em>) \u2013 The fill opacity of the mobject. If <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> (the default),\nthe fill opacities set in the SVG file are used.</p></li>\n<li><p><strong>stroke_color</strong> (<em>str</em><em> | </em><em>None</em>) \u2013 The stroke color of the mobject. If <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> (the default),\nthe stroke colors set in the SVG file are used.</p></li>\n<li><p><strong>stroke_opacity</strong> (<em>float</em><em> | </em><em>None</em>) \u2013 The stroke opacity of the mobject. If <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> (the default),\nthe stroke opacities set in the SVG file are used.</p></li>\n<li><p><strong>stroke_width</strong> (<em>float</em><em> | </em><em>None</em>) \u2013 The stroke width of the mobject. If <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> (the default),\nthe stroke width values set in the SVG file are used.</p></li>\n<li><p><strong>svg_default</strong> (<em>dict</em><em> | </em><em>None</em>) \u2013 A dictionary in which fallback values for unspecified\nproperties of elements in the SVG file are defined. If\n<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> (the default), <code class=\"docutils literal notranslate\"><span class=\"pre\">color</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">opacity</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fill_color</span></code>\n<code class=\"docutils literal notranslate\"><span class=\"pre\">fill_opacity</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">stroke_color</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">stroke_opacity</span></code>\nare set to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">stroke_width</span></code> is set to 0.</p></li>\n<li><p><strong>path_string_config</strong> (<em>dict</em><em> | </em><em>None</em>) \u2013 A dictionary with keyword arguments passed to\n<a class=\"reference internal\" href=\"../manim.mobject.svg.svg_mobject.VMobjectFromSVGPath/#manim.mobject.svg.svg_mobject.VMobjectFromSVGPath\" title=\"manim.mobject.svg.svg_mobject.VMobjectFromSVGPath\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">VMobjectFromSVGPath</span></code></a> used for importing path elements.\nIf <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> (the default), no additional arguments are passed.</p></li>\n<li><p><strong>use_svg_cache</strong> (<em>bool</em>) \u2013 If True (default), the svg inputs (e.g. file_name, settings)\nwill be used as a key and a copy of the created mobject will\nbe saved using that key to be quickly retrieved if the same\ninputs need be processed later. For large SVGs which are used\nonly once, this can be omitted to improve performance.</p></li>\n<li><p><strong>kwargs</strong> \u2013 Further arguments passed to the parent class.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.apply_style_to_mobject\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.apply_style_to_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">apply_style_to_mobject</span></code></a></p></td>\n<td><p>Apply SVG style information to the converted mobject.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.ellipse_to_mobject\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.ellipse_to_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ellipse_to_mobject</span></code></a></p></td>\n<td><p>Convert an ellipse or circle element to a vectorized mobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.generate_config_style_dict\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.generate_config_style_dict\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">generate_config_style_dict</span></code></a></p></td>\n<td><p>Generate a dictionary holding the default style information.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.generate_mobject\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.generate_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">generate_mobject</span></code></a></p></td>\n<td><p>Parse the SVG and translate its elements to submobjects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.get_file_path\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.get_file_path\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_file_path</span></code></a></p></td>\n<td><p>Search for an existing file based on the specified file name.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.get_mobjects_from\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.get_mobjects_from\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_mobjects_from</span></code></a></p></td>\n<td><p>Convert the elements of the SVG to a list of mobjects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.handle_transform\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.handle_transform\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">handle_transform</span></code></a></p></td>\n<td><p>Apply SVG transformations to the converted mobject.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.init_svg_mobject\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.init_svg_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">init_svg_mobject</span></code></a></p></td>\n<td><p>Checks whether the SVG has already been imported and generates it if not.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.line_to_mobject\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.line_to_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">line_to_mobject</span></code></a></p></td>\n<td><p>Convert a line element to a vectorized mobject.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.modify_xml_tree\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.modify_xml_tree\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">modify_xml_tree</span></code></a></p></td>\n<td><p>Modifies the SVG element tree to include default style information.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.move_into_position\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.move_into_position\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">move_into_position</span></code></a></p></td>\n<td><p>Scale and move the generated mobject into position.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.path_to_mobject\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.path_to_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">path_to_mobject</span></code></a></p></td>\n<td><p>Convert a path element to a vectorized mobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.polygon_to_mobject\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.polygon_to_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">polygon_to_mobject</span></code></a></p></td>\n<td><p>Convert a polygon element to a vectorized mobject.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.polyline_to_mobject\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.polyline_to_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">polyline_to_mobject</span></code></a></p></td>\n<td><p>Convert a polyline element to a vectorized mobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.rect_to_mobject\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.rect_to_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">rect_to_mobject</span></code></a></p></td>\n<td><p>Convert a rectangle element to a vectorized mobject.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.text_to_mobject\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.text_to_mobject\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">text_to_mobject</span></code></a></p></td>\n<td><p>Convert a text element to a vectorized mobject.</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p class=\"rubric\">Attributes</p>\n<div class=\"table-wrapper autosummary longtable docutils container\">\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">animate</span></code></p></td>\n<td><p>Used to animate the application of any method of <code class=\"code docutils literal notranslate\"><span class=\"pre\">self</span></code>.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">animation_overrides</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">color</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">depth</span></code></p></td>\n<td><p>The depth of the mobject.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">fill_color</span></code></p></td>\n<td><p>If there are multiple colors (for gradient) this returns the first one</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.hash_seed\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.hash_seed\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">hash_seed</span></code></a></p></td>\n<td><p>A unique hash representing the result of the generated mobject points.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">height</span></code></p></td>\n<td><p>The height of the mobject.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">n_points_per_curve</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">sheen_factor</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">stroke_color</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">width</span></code></p></td>\n<td><p>The width of the mobject.</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject._original__init__\">\n<span class=\"sig-name descname\"><span class=\"pre\">_original__init__</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">file_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">should_center</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">height</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fill_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fill_opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stroke_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stroke_opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stroke_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">svg_default</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path_string_config</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_svg_cache</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject._original__init__\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>file_name</strong> (<em>str</em><em> | </em><em>PathLike</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>should_center</strong> (<em>bool</em>)</p></li>\n<li><p><strong>height</strong> (<em>float</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>width</strong> (<em>float</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>color</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>opacity</strong> (<em>float</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>fill_color</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>fill_opacity</strong> (<em>float</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>stroke_color</strong> (<em>str</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>stroke_opacity</strong> (<em>float</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>stroke_width</strong> (<em>float</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>svg_default</strong> (<em>dict</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>path_string_config</strong> (<em>dict</em><em> | </em><em>None</em>)</p></li>\n<li><p><strong>use_svg_cache</strong> (<em>bool</em>)</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.apply_style_to_mobject\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">apply_style_to_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mob</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shape</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.apply_style_to_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.apply_style_to_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Apply SVG style information to the converted mobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>mob</strong> (<a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a>) \u2013 The converted mobject.</p></li>\n<li><p><strong>shape</strong> (<em>GraphicObject</em>) \u2013 The parsed SVG element.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.ellipse_to_mobject\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">ellipse_to_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ellipse</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.ellipse_to_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.ellipse_to_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Convert an ellipse or circle element to a vectorized mobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>ellipse</strong> (<em>Ellipse</em><em> | </em><em>Circle</em>) \u2013 The parsed SVG ellipse or circle.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../manim.mobject.geometry.arc.Circle/#manim.mobject.geometry.arc.Circle\" title=\"manim.mobject.geometry.arc.Circle\"><em>Circle</em></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.generate_config_style_dict\">\n<span class=\"sig-name descname\"><span class=\"pre\">generate_config_style_dict</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.generate_config_style_dict\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.generate_config_style_dict\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Generate a dictionary holding the default style information.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>dict[str, str]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.generate_mobject\">\n<span class=\"sig-name descname\"><span class=\"pre\">generate_mobject</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.generate_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.generate_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Parse the SVG and translate its elements to submobjects.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>None</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.get_file_path\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_file_path</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.get_file_path\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.get_file_path\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Search for an existing file based on the specified file name.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><em>Path</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.get_mobjects_from\">\n<span class=\"sig-name descname\"><span class=\"pre\">get_mobjects_from</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">svg</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.get_mobjects_from\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.get_mobjects_from\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Convert the elements of the SVG to a list of mobjects.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>svg</strong> (<em>SVG</em>) \u2013 The parsed SVG file.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>list[<a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.handle_transform\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">handle_transform</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mob</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">matrix</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.handle_transform\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.handle_transform\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Apply SVG transformations to the converted mobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>mob</strong> (<a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a>) \u2013 The converted mobject.</p></li>\n<li><p><strong>matrix</strong> (<em>Matrix</em>) \u2013 The transformation matrix determined from the SVG\ntransformation.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.hash_seed\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">hash_seed</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"pre\">tuple</span></em><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.hash_seed\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>A unique hash representing the result of the generated\nmobject points.</p>\n<p>Used as keys in the <code class=\"docutils literal notranslate\"><span class=\"pre\">SVG_HASH_TO_MOB_MAP</span></code> caching dictionary.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.init_svg_mobject\">\n<span class=\"sig-name descname\"><span class=\"pre\">init_svg_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_svg_cache</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.init_svg_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.init_svg_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Checks whether the SVG has already been imported and\ngenerates it if not.</p>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<p><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.generate_mobject\" title=\"manim.mobject.svg.svg_mobject.SVGMobject.generate_mobject\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">SVGMobject.generate_mobject()</span></code></a></p>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>use_svg_cache</strong> (<em>bool</em>)</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p>None</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.line_to_mobject\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">line_to_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">line</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.line_to_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.line_to_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Convert a line element to a vectorized mobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>line</strong> (<em>Line</em>) \u2013 The parsed SVG line.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../manim.mobject.geometry.line.Line/#manim.mobject.geometry.line.Line\" title=\"manim.mobject.geometry.line.Line\"><em>Line</em></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.modify_xml_tree\">\n<span class=\"sig-name descname\"><span class=\"pre\">modify_xml_tree</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">element_tree</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.modify_xml_tree\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.modify_xml_tree\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Modifies the SVG element tree to include default\nstyle information.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>element_tree</strong> (<em>ElementTree</em>) \u2013 The parsed element tree from the SVG file.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><em>ElementTree</em></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.move_into_position\">\n<span class=\"sig-name descname\"><span class=\"pre\">move_into_position</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.move_into_position\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.move_into_position\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Scale and move the generated mobject into position.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p>None</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.path_to_mobject\">\n<span class=\"sig-name descname\"><span class=\"pre\">path_to_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.path_to_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.path_to_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Convert a path element to a vectorized mobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>path</strong> (<em>Path</em>) \u2013 The parsed SVG path.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../manim.mobject.svg.svg_mobject.VMobjectFromSVGPath/#manim.mobject.svg.svg_mobject.VMobjectFromSVGPath\" title=\"manim.mobject.svg.svg_mobject.VMobjectFromSVGPath\"><em>VMobjectFromSVGPath</em></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.polygon_to_mobject\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">polygon_to_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">polygon</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.polygon_to_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.polygon_to_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Convert a polygon element to a vectorized mobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>polygon</strong> (<em>Polygon</em>) \u2013 The parsed SVG polygon.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../manim.mobject.geometry.polygram.Polygon/#manim.mobject.geometry.polygram.Polygon\" title=\"manim.mobject.geometry.polygram.Polygon\"><em>Polygon</em></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.polyline_to_mobject\">\n<span class=\"sig-name descname\"><span class=\"pre\">polyline_to_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">polyline</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.polyline_to_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.polyline_to_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Convert a polyline element to a vectorized mobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>polyline</strong> (<em>Polyline</em>) \u2013 The parsed SVG polyline.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../manim.mobject.types.vectorized_mobject.VMobject/#manim.mobject.types.vectorized_mobject.VMobject\" title=\"manim.mobject.types.vectorized_mobject.VMobject\"><em>VMobject</em></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.rect_to_mobject\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">rect_to_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rect</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.rect_to_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.rect_to_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Convert a rectangle element to a vectorized mobject.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>rect</strong> (<em>Rect</em>) \u2013 The parsed SVG rectangle.</p>\n</dd>\n<dt class=\"field-even\">Return type<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"../manim.mobject.geometry.polygram.Rectangle/#manim.mobject.geometry.polygram.Rectangle\" title=\"manim.mobject.geometry.polygram.Rectangle\"><em>Rectangle</em></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"manim.mobject.svg.svg_mobject.SVGMobject.text_to_mobject\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">text_to_mobject</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">text</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/manim/mobject/svg/svg_mobject/#SVGMobject.text_to_mobject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.text_to_mobject\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Convert a text element to a vectorized mobject.</p>\n<div class=\"admonition warning\">\n<p class=\"admonition-title\">Warning</p>\n<p>Not yet implemented.</p>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><p><strong>text</strong> (<em>Text</em>) \u2013 The parsed SVG text.</p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["reference/manim.mobject.svg.svg_mobject.VMobjectFromSVGPath", "VMobjectFromSVGPath", "N", "next"], ["reference/manim.mobject.svg.svg_mobject", "svg_mobject", "P", "previous"]], "sourcename": "reference/manim.mobject.svg.svg_mobject.SVGMobject.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">SVGMobject</a><ul>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject._original__init__\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject._original__init__()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.apply_style_to_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.apply_style_to_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.ellipse_to_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.ellipse_to_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.generate_config_style_dict\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.generate_config_style_dict()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.generate_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.generate_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.get_file_path\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.get_file_path()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.get_mobjects_from\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.get_mobjects_from()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.handle_transform\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.handle_transform()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.hash_seed\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.hash_seed</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.init_svg_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.init_svg_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.line_to_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.line_to_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.modify_xml_tree\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.modify_xml_tree()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.move_into_position\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.move_into_position()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.path_to_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.path_to_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.polygon_to_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.polygon_to_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.polyline_to_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.polyline_to_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.rect_to_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.rect_to_mobject()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#manim.mobject.svg.svg_mobject.SVGMobject.text_to_mobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SVGMobject.text_to_mobject()</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "reference/manim.mobject.svg.svg_mobject.SVGMobject", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "alabaster_version": "1.0.0", "alabaster_version_info": [1, 0, 0], "furo_version": "2024.08.06", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#202020", "foreground": "#d0d0d0"}}}